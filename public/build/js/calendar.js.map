{"version":3,"sources":["moment.min.js","fullcalendar.js","calendar.js"],"names":[],"mappingszuWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"calendar.js","sourcesContent":["//! moment.js\r\n//! version : 2.10.6\r\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\r\n//! license : MIT\r\n//! momentjs.com\r\n!function(a,b){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.moment=b()}(this,function(){\"use strict\";function a(){return Hc.apply(null,arguments)}function b(a){Hc=a}function c(a){return\"[object Array]\"===Object.prototype.toString.call(a)}function d(a){return a instanceof Date||\"[object Date]\"===Object.prototype.toString.call(a)}function e(a,b){var c,d=[];for(c=0;c<a.length;++c)d.push(b(a[c],c));return d}function f(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function g(a,b){for(var c in b)f(b,c)&&(a[c]=b[c]);return f(b,\"toString\")&&(a.toString=b.toString),f(b,\"valueOf\")&&(a.valueOf=b.valueOf),a}function h(a,b,c,d){return Ca(a,b,c,d,!0).utc()}function i(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function j(a){return null==a._pf&&(a._pf=i()),a._pf}function k(a){if(null==a._isValid){var b=j(a);a._isValid=!(isNaN(a._d.getTime())||!(b.overflow<0)||b.empty||b.invalidMonth||b.invalidWeekday||b.nullInput||b.invalidFormat||b.userInvalidated),a._strict&&(a._isValid=a._isValid&&0===b.charsLeftOver&&0===b.unusedTokens.length&&void 0===b.bigHour)}return a._isValid}function l(a){var b=h(NaN);return null!=a?g(j(b),a):j(b).userInvalidated=!0,b}function m(a,b){var c,d,e;if(\"undefined\"!=typeof b._isAMomentObject&&(a._isAMomentObject=b._isAMomentObject),\"undefined\"!=typeof b._i&&(a._i=b._i),\"undefined\"!=typeof b._f&&(a._f=b._f),\"undefined\"!=typeof b._l&&(a._l=b._l),\"undefined\"!=typeof b._strict&&(a._strict=b._strict),\"undefined\"!=typeof b._tzm&&(a._tzm=b._tzm),\"undefined\"!=typeof b._isUTC&&(a._isUTC=b._isUTC),\"undefined\"!=typeof b._offset&&(a._offset=b._offset),\"undefined\"!=typeof b._pf&&(a._pf=j(b)),\"undefined\"!=typeof b._locale&&(a._locale=b._locale),Jc.length>0)for(c in Jc)d=Jc[c],e=b[d],\"undefined\"!=typeof e&&(a[d]=e);return a}function n(b){m(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),Kc===!1&&(Kc=!0,a.updateOffset(this),Kc=!1)}function o(a){return a instanceof n||null!=a&&null!=a._isAMomentObject}function p(a){return 0>a?Math.ceil(a):Math.floor(a)}function q(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=p(b)),c}function r(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&q(a[d])!==q(b[d]))&&g++;return g+f}function s(){}function t(a){return a?a.toLowerCase().replace(\"_\",\"-\"):a}function u(a){for(var b,c,d,e,f=0;f<a.length;){for(e=t(a[f]).split(\"-\"),b=e.length,c=t(a[f+1]),c=c?c.split(\"-\"):null;b>0;){if(d=v(e.slice(0,b).join(\"-\")))return d;if(c&&c.length>=b&&r(e,c,!0)>=b-1)break;b--}f++}return null}function v(a){var b=null;if(!Lc[a]&&\"undefined\"!=typeof module&&module&&module.exports)try{b=Ic._abbr,require(\"./locale/\"+a),w(b)}catch(c){}return Lc[a]}function w(a,b){var c;return a&&(c=\"undefined\"==typeof b?y(a):x(a,b),c&&(Ic=c)),Ic._abbr}function x(a,b){return null!==b?(b.abbr=a,Lc[a]=Lc[a]||new s,Lc[a].set(b),w(a),Lc[a]):(delete Lc[a],null)}function y(a){var b;if(a&&a._locale&&a._locale._abbr&&(a=a._locale._abbr),!a)return Ic;if(!c(a)){if(b=v(a))return b;a=[a]}return u(a)}function z(a,b){var c=a.toLowerCase();Mc[c]=Mc[c+\"s\"]=Mc[b]=a}function A(a){return\"string\"==typeof a?Mc[a]||Mc[a.toLowerCase()]:void 0}function B(a){var b,c,d={};for(c in a)f(a,c)&&(b=A(c),b&&(d[b]=a[c]));return d}function C(b,c){return function(d){return null!=d?(E(this,b,d),a.updateOffset(this,c),this):D(this,b)}}function D(a,b){return a._d[\"get\"+(a._isUTC?\"UTC\":\"\")+b]()}function E(a,b,c){return a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+b](c)}function F(a,b){var c;if(\"object\"==typeof a)for(c in a)this.set(c,a[c]);else if(a=A(a),\"function\"==typeof this[a])return this[a](b);return this}function G(a,b,c){var d=\"\"+Math.abs(a),e=b-d.length,f=a>=0;return(f?c?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,e)).toString().substr(1)+d}function H(a,b,c,d){var e=d;\"string\"==typeof d&&(e=function(){return this[d]()}),a&&(Qc[a]=e),b&&(Qc[b[0]]=function(){return G(e.apply(this,arguments),b[1],b[2])}),c&&(Qc[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function I(a){return a.match(/\\[[\\s\\S]/)?a.replace(/^\\[|\\]$/g,\"\"):a.replace(/\\\\/g,\"\")}function J(a){var b,c,d=a.match(Nc);for(b=0,c=d.length;c>b;b++)Qc[d[b]]?d[b]=Qc[d[b]]:d[b]=I(d[b]);return function(e){var f=\"\";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function K(a,b){return a.isValid()?(b=L(b,a.localeData()),Pc[b]=Pc[b]||J(b),Pc[b](a)):a.localeData().invalidDate()}function L(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Oc.lastIndex=0;d>=0&&Oc.test(a);)a=a.replace(Oc,c),Oc.lastIndex=0,d-=1;return a}function M(a){return\"function\"==typeof a&&\"[object Function]\"===Object.prototype.toString.call(a)}function N(a,b,c){dd[a]=M(b)?b:function(a){return a&&c?c:b}}function O(a,b){return f(dd,a)?dd[a](b._strict,b._locale):new RegExp(P(a))}function P(a){return a.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,function(a,b,c,d,e){return b||c||d||e}).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")}function Q(a,b){var c,d=b;for(\"string\"==typeof a&&(a=[a]),\"number\"==typeof b&&(d=function(a,c){c[b]=q(a)}),c=0;c<a.length;c++)ed[a[c]]=d}function R(a,b){Q(a,function(a,c,d,e){d._w=d._w||{},b(a,d._w,d,e)})}function S(a,b,c){null!=b&&f(ed,a)&&ed[a](b,c._a,c,a)}function T(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function U(a){return this._months[a.month()]}function V(a){return this._monthsShort[a.month()]}function W(a,b,c){var d,e,f;for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),d=0;12>d;d++){if(e=h([2e3,d]),c&&!this._longMonthsParse[d]&&(this._longMonthsParse[d]=new RegExp(\"^\"+this.months(e,\"\").replace(\".\",\"\")+\"$\",\"i\"),this._shortMonthsParse[d]=new RegExp(\"^\"+this.monthsShort(e,\"\").replace(\".\",\"\")+\"$\",\"i\")),c||this._monthsParse[d]||(f=\"^\"+this.months(e,\"\")+\"|^\"+this.monthsShort(e,\"\"),this._monthsParse[d]=new RegExp(f.replace(\".\",\"\"),\"i\")),c&&\"MMMM\"===b&&this._longMonthsParse[d].test(a))return d;if(c&&\"MMM\"===b&&this._shortMonthsParse[d].test(a))return d;if(!c&&this._monthsParse[d].test(a))return d}}function X(a,b){var c;return\"string\"==typeof b&&(b=a.localeData().monthsParse(b),\"number\"!=typeof b)?a:(c=Math.min(a.date(),T(a.year(),b)),a._d[\"set\"+(a._isUTC?\"UTC\":\"\")+\"Month\"](b,c),a)}function Y(b){return null!=b?(X(this,b),a.updateOffset(this,!0),this):D(this,\"Month\")}function Z(){return T(this.year(),this.month())}function $(a){var b,c=a._a;return c&&-2===j(a).overflow&&(b=c[gd]<0||c[gd]>11?gd:c[hd]<1||c[hd]>T(c[fd],c[gd])?hd:c[id]<0||c[id]>24||24===c[id]&&(0!==c[jd]||0!==c[kd]||0!==c[ld])?id:c[jd]<0||c[jd]>59?jd:c[kd]<0||c[kd]>59?kd:c[ld]<0||c[ld]>999?ld:-1,j(a)._overflowDayOfYear&&(fd>b||b>hd)&&(b=hd),j(a).overflow=b),a}function _(b){a.suppressDeprecationWarnings===!1&&\"undefined\"!=typeof console&&console.warn&&console.warn(\"Deprecation warning: \"+b)}function aa(a,b){var c=!0;return g(function(){return c&&(_(a+\"\\n\"+(new Error).stack),c=!1),b.apply(this,arguments)},b)}function ba(a,b){od[a]||(_(b),od[a]=!0)}function ca(a){var b,c,d=a._i,e=pd.exec(d);if(e){for(j(a).iso=!0,b=0,c=qd.length;c>b;b++)if(qd[b][1].exec(d)){a._f=qd[b][0];break}for(b=0,c=rd.length;c>b;b++)if(rd[b][1].exec(d)){a._f+=(e[6]||\" \")+rd[b][0];break}d.match(ad)&&(a._f+=\"Z\"),va(a)}else a._isValid=!1}function da(b){var c=sd.exec(b._i);return null!==c?void(b._d=new Date(+c[1])):(ca(b),void(b._isValid===!1&&(delete b._isValid,a.createFromInputFallback(b))))}function ea(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function fa(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function ga(a){return ha(a)?366:365}function ha(a){return a%4===0&&a%100!==0||a%400===0}function ia(){return ha(this.year())}function ja(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=Da(a).add(f,\"d\"),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function ka(a){return ja(a,this._week.dow,this._week.doy).week}function la(){return this._week.dow}function ma(){return this._week.doy}function na(a){var b=this.localeData().week(this);return null==a?b:this.add(7*(a-b),\"d\")}function oa(a){var b=ja(this,1,4).week;return null==a?b:this.add(7*(a-b),\"d\")}function pa(a,b,c,d,e){var f,g=6+e-d,h=fa(a,0,1+g),i=h.getUTCDay();return e>i&&(i+=7),c=null!=c?1*c:e,f=1+g+7*(b-1)-i+c,{year:f>0?a:a-1,dayOfYear:f>0?f:ga(a-1)+f}}function qa(a){var b=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==a?b:this.add(a-b,\"d\")}function ra(a,b,c){return null!=a?a:null!=b?b:c}function sa(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function ta(a){var b,c,d,e,f=[];if(!a._d){for(d=sa(a),a._w&&null==a._a[hd]&&null==a._a[gd]&&ua(a),a._dayOfYear&&(e=ra(a._a[fd],d[fd]),a._dayOfYear>ga(e)&&(j(a)._overflowDayOfYear=!0),c=fa(e,0,a._dayOfYear),a._a[gd]=c.getUTCMonth(),a._a[hd]=c.getUTCDate()),b=0;3>b&&null==a._a[b];++b)a._a[b]=f[b]=d[b];for(;7>b;b++)a._a[b]=f[b]=null==a._a[b]?2===b?1:0:a._a[b];24===a._a[id]&&0===a._a[jd]&&0===a._a[kd]&&0===a._a[ld]&&(a._nextDay=!0,a._a[id]=0),a._d=(a._useUTC?fa:ea).apply(null,f),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()-a._tzm),a._nextDay&&(a._a[id]=24)}}function ua(a){var b,c,d,e,f,g,h;b=a._w,null!=b.GG||null!=b.W||null!=b.E?(f=1,g=4,c=ra(b.GG,a._a[fd],ja(Da(),1,4).year),d=ra(b.W,1),e=ra(b.E,1)):(f=a._locale._week.dow,g=a._locale._week.doy,c=ra(b.gg,a._a[fd],ja(Da(),f,g).year),d=ra(b.w,1),null!=b.d?(e=b.d,f>e&&++d):e=null!=b.e?b.e+f:f),h=pa(c,d,e,g,f),a._a[fd]=h.year,a._dayOfYear=h.dayOfYear}function va(b){if(b._f===a.ISO_8601)return void ca(b);b._a=[],j(b).empty=!0;var c,d,e,f,g,h=\"\"+b._i,i=h.length,k=0;for(e=L(b._f,b._locale).match(Nc)||[],c=0;c<e.length;c++)f=e[c],d=(h.match(O(f,b))||[])[0],d&&(g=h.substr(0,h.indexOf(d)),g.length>0&&j(b).unusedInput.push(g),h=h.slice(h.indexOf(d)+d.length),k+=d.length),Qc[f]?(d?j(b).empty=!1:j(b).unusedTokens.push(f),S(f,d,b)):b._strict&&!d&&j(b).unusedTokens.push(f);j(b).charsLeftOver=i-k,h.length>0&&j(b).unusedInput.push(h),j(b).bigHour===!0&&b._a[id]<=12&&b._a[id]>0&&(j(b).bigHour=void 0),b._a[id]=wa(b._locale,b._a[id],b._meridiem),ta(b),$(b)}function wa(a,b,c){var d;return null==c?b:null!=a.meridiemHour?a.meridiemHour(b,c):null!=a.isPM?(d=a.isPM(c),d&&12>b&&(b+=12),d||12!==b||(b=0),b):b}function xa(a){var b,c,d,e,f;if(0===a._f.length)return j(a).invalidFormat=!0,void(a._d=new Date(NaN));for(e=0;e<a._f.length;e++)f=0,b=m({},a),null!=a._useUTC&&(b._useUTC=a._useUTC),b._f=a._f[e],va(b),k(b)&&(f+=j(b).charsLeftOver,f+=10*j(b).unusedTokens.length,j(b).score=f,(null==d||d>f)&&(d=f,c=b));g(a,c||b)}function ya(a){if(!a._d){var b=B(a._i);a._a=[b.year,b.month,b.day||b.date,b.hour,b.minute,b.second,b.millisecond],ta(a)}}function za(a){var b=new n($(Aa(a)));return b._nextDay&&(b.add(1,\"d\"),b._nextDay=void 0),b}function Aa(a){var b=a._i,e=a._f;return a._locale=a._locale||y(a._l),null===b||void 0===e&&\"\"===b?l({nullInput:!0}):(\"string\"==typeof b&&(a._i=b=a._locale.preparse(b)),o(b)?new n($(b)):(c(e)?xa(a):e?va(a):d(b)?a._d=b:Ba(a),a))}function Ba(b){var f=b._i;void 0===f?b._d=new Date:d(f)?b._d=new Date(+f):\"string\"==typeof f?da(b):c(f)?(b._a=e(f.slice(0),function(a){return parseInt(a,10)}),ta(b)):\"object\"==typeof f?ya(b):\"number\"==typeof f?b._d=new Date(f):a.createFromInputFallback(b)}function Ca(a,b,c,d,e){var f={};return\"boolean\"==typeof c&&(d=c,c=void 0),f._isAMomentObject=!0,f._useUTC=f._isUTC=e,f._l=c,f._i=a,f._f=b,f._strict=d,za(f)}function Da(a,b,c,d){return Ca(a,b,c,d,!1)}function Ea(a,b){var d,e;if(1===b.length&&c(b[0])&&(b=b[0]),!b.length)return Da();for(d=b[0],e=1;e<b.length;++e)(!b[e].isValid()||b[e][a](d))&&(d=b[e]);return d}function Fa(){var a=[].slice.call(arguments,0);return Ea(\"isBefore\",a)}function Ga(){var a=[].slice.call(arguments,0);return Ea(\"isAfter\",a)}function Ha(a){var b=B(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._locale=y(),this._bubble()}function Ia(a){return a instanceof Ha}function Ja(a,b){H(a,0,0,function(){var a=this.utcOffset(),c=\"+\";return 0>a&&(a=-a,c=\"-\"),c+G(~~(a/60),2)+b+G(~~a%60,2)})}function Ka(a){var b=(a||\"\").match(ad)||[],c=b[b.length-1]||[],d=(c+\"\").match(xd)||[\"-\",0,0],e=+(60*d[1])+q(d[2]);return\"+\"===d[0]?e:-e}function La(b,c){var e,f;return c._isUTC?(e=c.clone(),f=(o(b)||d(b)?+b:+Da(b))-+e,e._d.setTime(+e._d+f),a.updateOffset(e,!1),e):Da(b).local()}function Ma(a){return 15*-Math.round(a._d.getTimezoneOffset()/15)}function Na(b,c){var d,e=this._offset||0;return null!=b?(\"string\"==typeof b&&(b=Ka(b)),Math.abs(b)<16&&(b=60*b),!this._isUTC&&c&&(d=Ma(this)),this._offset=b,this._isUTC=!0,null!=d&&this.add(d,\"m\"),e!==b&&(!c||this._changeInProgress?bb(this,Ya(b-e,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ma(this)}function Oa(a,b){return null!=a?(\"string\"!=typeof a&&(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Pa(a){return this.utcOffset(0,a)}function Qa(a){return this._isUTC&&(this.utcOffset(0,a),this._isUTC=!1,a&&this.subtract(Ma(this),\"m\")),this}function Ra(){return this._tzm?this.utcOffset(this._tzm):\"string\"==typeof this._i&&this.utcOffset(Ka(this._i)),this}function Sa(a){return a=a?Da(a).utcOffset():0,(this.utcOffset()-a)%60===0}function Ta(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Ua(){if(\"undefined\"!=typeof this._isDSTShifted)return this._isDSTShifted;var a={};if(m(a,this),a=Aa(a),a._a){var b=a._isUTC?h(a._a):Da(a._a);this._isDSTShifted=this.isValid()&&r(a._a,b.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function Va(){return!this._isUTC}function Wa(){return this._isUTC}function Xa(){return this._isUTC&&0===this._offset}function Ya(a,b){var c,d,e,g=a,h=null;return Ia(a)?g={ms:a._milliseconds,d:a._days,M:a._months}:\"number\"==typeof a?(g={},b?g[b]=a:g.milliseconds=a):(h=yd.exec(a))?(c=\"-\"===h[1]?-1:1,g={y:0,d:q(h[hd])*c,h:q(h[id])*c,m:q(h[jd])*c,s:q(h[kd])*c,ms:q(h[ld])*c}):(h=zd.exec(a))?(c=\"-\"===h[1]?-1:1,g={y:Za(h[2],c),M:Za(h[3],c),d:Za(h[4],c),h:Za(h[5],c),m:Za(h[6],c),s:Za(h[7],c),w:Za(h[8],c)}):null==g?g={}:\"object\"==typeof g&&(\"from\"in g||\"to\"in g)&&(e=_a(Da(g.from),Da(g.to)),g={},g.ms=e.milliseconds,g.M=e.months),d=new Ha(g),Ia(a)&&f(a,\"_locale\")&&(d._locale=a._locale),d}function Za(a,b){var c=a&&parseFloat(a.replace(\",\",\".\"));return(isNaN(c)?0:c)*b}function $a(a,b){var c={milliseconds:0,months:0};return c.months=b.month()-a.month()+12*(b.year()-a.year()),a.clone().add(c.months,\"M\").isAfter(b)&&--c.months,c.milliseconds=+b-+a.clone().add(c.months,\"M\"),c}function _a(a,b){var c;return b=La(b,a),a.isBefore(b)?c=$a(a,b):(c=$a(b,a),c.milliseconds=-c.milliseconds,c.months=-c.months),c}function ab(a,b){return function(c,d){var e,f;return null===d||isNaN(+d)||(ba(b,\"moment().\"+b+\"(period, number) is deprecated. Please use moment().\"+b+\"(number, period).\"),f=c,c=d,d=f),c=\"string\"==typeof c?+c:c,e=Ya(c,d),bb(this,e,a),this}}function bb(b,c,d,e){var f=c._milliseconds,g=c._days,h=c._months;e=null==e?!0:e,f&&b._d.setTime(+b._d+f*d),g&&E(b,\"Date\",D(b,\"Date\")+g*d),h&&X(b,D(b,\"Month\")+h*d),e&&a.updateOffset(b,g||h)}function cb(a,b){var c=a||Da(),d=La(c,this).startOf(\"day\"),e=this.diff(d,\"days\",!0),f=-6>e?\"sameElse\":-1>e?\"lastWeek\":0>e?\"lastDay\":1>e?\"sameDay\":2>e?\"nextDay\":7>e?\"nextWeek\":\"sameElse\";return this.format(b&&b[f]||this.localeData().calendar(f,this,Da(c)))}function db(){return new n(this)}function eb(a,b){var c;return b=A(\"undefined\"!=typeof b?b:\"millisecond\"),\"millisecond\"===b?(a=o(a)?a:Da(a),+this>+a):(c=o(a)?+a:+Da(a),c<+this.clone().startOf(b))}function fb(a,b){var c;return b=A(\"undefined\"!=typeof b?b:\"millisecond\"),\"millisecond\"===b?(a=o(a)?a:Da(a),+a>+this):(c=o(a)?+a:+Da(a),+this.clone().endOf(b)<c)}function gb(a,b,c){return this.isAfter(a,c)&&this.isBefore(b,c)}function hb(a,b){var c;return b=A(b||\"millisecond\"),\"millisecond\"===b?(a=o(a)?a:Da(a),+this===+a):(c=+Da(a),+this.clone().startOf(b)<=c&&c<=+this.clone().endOf(b))}function ib(a,b,c){var d,e,f=La(a,this),g=6e4*(f.utcOffset()-this.utcOffset());return b=A(b),\"year\"===b||\"month\"===b||\"quarter\"===b?(e=jb(this,f),\"quarter\"===b?e/=3:\"year\"===b&&(e/=12)):(d=this-f,e=\"second\"===b?d/1e3:\"minute\"===b?d/6e4:\"hour\"===b?d/36e5:\"day\"===b?(d-g)/864e5:\"week\"===b?(d-g)/6048e5:d),c?e:p(e)}function jb(a,b){var c,d,e=12*(b.year()-a.year())+(b.month()-a.month()),f=a.clone().add(e,\"months\");return 0>b-f?(c=a.clone().add(e-1,\"months\"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,\"months\"),d=(b-f)/(c-f)),-(e+d)}function kb(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")}function lb(){var a=this.clone().utc();return 0<a.year()&&a.year()<=9999?\"function\"==typeof Date.prototype.toISOString?this.toDate().toISOString():K(a,\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\"):K(a,\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\")}function mb(b){var c=K(this,b||a.defaultFormat);return this.localeData().postformat(c)}function nb(a,b){return this.isValid()?Ya({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ob(a){return this.from(Da(),a)}function pb(a,b){return this.isValid()?Ya({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function qb(a){return this.to(Da(),a)}function rb(a){var b;return void 0===a?this._locale._abbr:(b=y(a),null!=b&&(this._locale=b),this)}function sb(){return this._locale}function tb(a){switch(a=A(a)){case\"year\":this.month(0);case\"quarter\":case\"month\":this.date(1);case\"week\":case\"isoWeek\":case\"day\":this.hours(0);case\"hour\":this.minutes(0);case\"minute\":this.seconds(0);case\"second\":this.milliseconds(0)}return\"week\"===a&&this.weekday(0),\"isoWeek\"===a&&this.isoWeekday(1),\"quarter\"===a&&this.month(3*Math.floor(this.month()/3)),this}function ub(a){return a=A(a),void 0===a||\"millisecond\"===a?this:this.startOf(a).add(1,\"isoWeek\"===a?\"week\":a).subtract(1,\"ms\")}function vb(){return+this._d-6e4*(this._offset||0)}function wb(){return Math.floor(+this/1e3)}function xb(){return this._offset?new Date(+this):this._d}function yb(){var a=this;return[a.year(),a.month(),a.date(),a.hour(),a.minute(),a.second(),a.millisecond()]}function zb(){var a=this;return{years:a.year(),months:a.month(),date:a.date(),hours:a.hours(),minutes:a.minutes(),seconds:a.seconds(),milliseconds:a.milliseconds()}}function Ab(){return k(this)}function Bb(){return g({},j(this))}function Cb(){return j(this).overflow}function Db(a,b){H(0,[a,a.length],0,b)}function Eb(a,b,c){return ja(Da([a,11,31+b-c]),b,c).week}function Fb(a){var b=ja(this,this.localeData()._week.dow,this.localeData()._week.doy).year;return null==a?b:this.add(a-b,\"y\")}function Gb(a){var b=ja(this,1,4).year;return null==a?b:this.add(a-b,\"y\")}function Hb(){return Eb(this.year(),1,4)}function Ib(){var a=this.localeData()._week;return Eb(this.year(),a.dow,a.doy)}function Jb(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)}function Kb(a,b){return\"string\"!=typeof a?a:isNaN(a)?(a=b.weekdaysParse(a),\"number\"==typeof a?a:null):parseInt(a,10)}function Lb(a){return this._weekdays[a.day()]}function Mb(a){return this._weekdaysShort[a.day()]}function Nb(a){return this._weekdaysMin[a.day()]}function Ob(a){var b,c,d;for(this._weekdaysParse=this._weekdaysParse||[],b=0;7>b;b++)if(this._weekdaysParse[b]||(c=Da([2e3,1]).day(b),d=\"^\"+this.weekdays(c,\"\")+\"|^\"+this.weekdaysShort(c,\"\")+\"|^\"+this.weekdaysMin(c,\"\"),this._weekdaysParse[b]=new RegExp(d.replace(\".\",\"\"),\"i\")),this._weekdaysParse[b].test(a))return b}function Pb(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Kb(a,this.localeData()),this.add(a-b,\"d\")):b}function Qb(a){var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,\"d\")}function Rb(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)}function Sb(a,b){H(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}function Tb(a,b){return b._meridiemParse}function Ub(a){return\"p\"===(a+\"\").toLowerCase().charAt(0)}function Vb(a,b,c){return a>11?c?\"pm\":\"PM\":c?\"am\":\"AM\"}function Wb(a,b){b[ld]=q(1e3*(\"0.\"+a))}function Xb(){return this._isUTC?\"UTC\":\"\"}function Yb(){return this._isUTC?\"Coordinated Universal Time\":\"\"}function Zb(a){return Da(1e3*a)}function $b(){return Da.apply(null,arguments).parseZone()}function _b(a,b,c){var d=this._calendar[a];return\"function\"==typeof d?d.call(b,c):d}function ac(a){var b=this._longDateFormat[a],c=this._longDateFormat[a.toUpperCase()];return b||!c?b:(this._longDateFormat[a]=c.replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a])}function bc(){return this._invalidDate}function cc(a){return this._ordinal.replace(\"%d\",a)}function dc(a){return a}function ec(a,b,c,d){var e=this._relativeTime[c];return\"function\"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)}function fc(a,b){var c=this._relativeTime[a>0?\"future\":\"past\"];return\"function\"==typeof c?c(b):c.replace(/%s/i,b)}function gc(a){var b,c;for(c in a)b=a[c],\"function\"==typeof b?this[c]=b:this[\"_\"+c]=b;this._ordinalParseLenient=new RegExp(this._ordinalParse.source+\"|\"+/\\d{1,2}/.source)}function hc(a,b,c,d){var e=y(),f=h().set(d,b);return e[c](f,a)}function ic(a,b,c,d,e){if(\"number\"==typeof a&&(b=a,a=void 0),a=a||\"\",null!=b)return hc(a,b,c,e);var f,g=[];for(f=0;d>f;f++)g[f]=hc(a,f,c,e);return g}function jc(a,b){return ic(a,b,\"months\",12,\"month\")}function kc(a,b){return ic(a,b,\"monthsShort\",12,\"month\")}function lc(a,b){return ic(a,b,\"weekdays\",7,\"day\")}function mc(a,b){return ic(a,b,\"weekdaysShort\",7,\"day\")}function nc(a,b){return ic(a,b,\"weekdaysMin\",7,\"day\")}function oc(){var a=this._data;return this._milliseconds=Wd(this._milliseconds),this._days=Wd(this._days),this._months=Wd(this._months),a.milliseconds=Wd(a.milliseconds),a.seconds=Wd(a.seconds),a.minutes=Wd(a.minutes),a.hours=Wd(a.hours),a.months=Wd(a.months),a.years=Wd(a.years),this}function pc(a,b,c,d){var e=Ya(b,c);return a._milliseconds+=d*e._milliseconds,a._days+=d*e._days,a._months+=d*e._months,a._bubble()}function qc(a,b){return pc(this,a,b,1)}function rc(a,b){return pc(this,a,b,-1)}function sc(a){return 0>a?Math.floor(a):Math.ceil(a)}function tc(){var a,b,c,d,e,f=this._milliseconds,g=this._days,h=this._months,i=this._data;return f>=0&&g>=0&&h>=0||0>=f&&0>=g&&0>=h||(f+=864e5*sc(vc(h)+g),g=0,h=0),i.milliseconds=f%1e3,a=p(f/1e3),i.seconds=a%60,b=p(a/60),i.minutes=b%60,c=p(b/60),i.hours=c%24,g+=p(c/24),e=p(uc(g)),h+=e,g-=sc(vc(e)),d=p(h/12),h%=12,i.days=g,i.months=h,i.years=d,this}function uc(a){return 4800*a/146097}function vc(a){return 146097*a/4800}function wc(a){var b,c,d=this._milliseconds;if(a=A(a),\"month\"===a||\"year\"===a)return b=this._days+d/864e5,c=this._months+uc(b),\"month\"===a?c:c/12;switch(b=this._days+Math.round(vc(this._months)),a){case\"week\":return b/7+d/6048e5;case\"day\":return b+d/864e5;case\"hour\":return 24*b+d/36e5;case\"minute\":return 1440*b+d/6e4;case\"second\":return 86400*b+d/1e3;case\"millisecond\":return Math.floor(864e5*b)+d;default:throw new Error(\"Unknown unit \"+a)}}function xc(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*q(this._months/12)}function yc(a){return function(){return this.as(a)}}function zc(a){return a=A(a),this[a+\"s\"]()}function Ac(a){return function(){return this._data[a]}}function Bc(){return p(this.days()/7)}function Cc(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function Dc(a,b,c){var d=Ya(a).abs(),e=ke(d.as(\"s\")),f=ke(d.as(\"m\")),g=ke(d.as(\"h\")),h=ke(d.as(\"d\")),i=ke(d.as(\"M\")),j=ke(d.as(\"y\")),k=e<le.s&&[\"s\",e]||1===f&&[\"m\"]||f<le.m&&[\"mm\",f]||1===g&&[\"h\"]||g<le.h&&[\"hh\",g]||1===h&&[\"d\"]||h<le.d&&[\"dd\",h]||1===i&&[\"M\"]||i<le.M&&[\"MM\",i]||1===j&&[\"y\"]||[\"yy\",j];return k[2]=b,k[3]=+a>0,k[4]=c,Cc.apply(null,k)}function Ec(a,b){return void 0===le[a]?!1:void 0===b?le[a]:(le[a]=b,!0)}function Fc(a){var b=this.localeData(),c=Dc(this,!a,b);return a&&(c=b.pastFuture(+this,c)),b.postformat(c)}function Gc(){var a,b,c,d=me(this._milliseconds)/1e3,e=me(this._days),f=me(this._months);a=p(d/60),b=p(a/60),d%=60,a%=60,c=p(f/12),f%=12;var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0>m?\"-\":\"\")+\"P\"+(g?g+\"Y\":\"\")+(h?h+\"M\":\"\")+(i?i+\"D\":\"\")+(j||k||l?\"T\":\"\")+(j?j+\"H\":\"\")+(k?k+\"M\":\"\")+(l?l+\"S\":\"\"):\"P0D\"}var Hc,Ic,Jc=a.momentProperties=[],Kc=!1,Lc={},Mc={},Nc=/(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,Oc=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Pc={},Qc={},Rc=/\\d/,Sc=/\\d\\d/,Tc=/\\d{3}/,Uc=/\\d{4}/,Vc=/[+-]?\\d{6}/,Wc=/\\d\\d?/,Xc=/\\d{1,3}/,Yc=/\\d{1,4}/,Zc=/[+-]?\\d{1,6}/,$c=/\\d+/,_c=/[+-]?\\d+/,ad=/Z|[+-]\\d\\d:?\\d\\d/gi,bd=/[+-]?\\d+(\\.\\d{1,3})?/,cd=/[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,dd={},ed={},fd=0,gd=1,hd=2,id=3,jd=4,kd=5,ld=6;H(\"M\",[\"MM\",2],\"Mo\",function(){return this.month()+1}),H(\"MMM\",0,0,function(a){return this.localeData().monthsShort(this,a)}),H(\"MMMM\",0,0,function(a){return this.localeData().months(this,a)}),z(\"month\",\"M\"),N(\"M\",Wc),N(\"MM\",Wc,Sc),N(\"MMM\",cd),N(\"MMMM\",cd),Q([\"M\",\"MM\"],function(a,b){b[gd]=q(a)-1}),Q([\"MMM\",\"MMMM\"],function(a,b,c,d){var e=c._locale.monthsParse(a,d,c._strict);null!=e?b[gd]=e:j(c).invalidMonth=a});var md=\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),nd=\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),od={};a.suppressDeprecationWarnings=!1;var pd=/^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,qd=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d{2}-\\d{2}/],[\"YYYY-MM-DD\",/\\d{4}-\\d{2}-\\d{2}/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d{2}-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d{2}/],[\"YYYY-DDD\",/\\d{4}-\\d{3}/]],rd=[[\"HH:mm:ss.SSSS\",/(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss\",/(T| )\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/(T| )\\d\\d:\\d\\d/],[\"HH\",/(T| )\\d\\d/]],sd=/^\\/?Date\\((\\-?\\d+)/i;a.createFromInputFallback=aa(\"moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.\",function(a){a._d=new Date(a._i+(a._useUTC?\" UTC\":\"\"))}),H(0,[\"YY\",2],0,function(){return this.year()%100}),H(0,[\"YYYY\",4],0,\"year\"),H(0,[\"YYYYY\",5],0,\"year\"),H(0,[\"YYYYYY\",6,!0],0,\"year\"),z(\"year\",\"y\"),N(\"Y\",_c),N(\"YY\",Wc,Sc),N(\"YYYY\",Yc,Uc),N(\"YYYYY\",Zc,Vc),N(\"YYYYYY\",Zc,Vc),Q([\"YYYYY\",\"YYYYYY\"],fd),Q(\"YYYY\",function(b,c){c[fd]=2===b.length?a.parseTwoDigitYear(b):q(b)}),Q(\"YY\",function(b,c){c[fd]=a.parseTwoDigitYear(b)}),a.parseTwoDigitYear=function(a){return q(a)+(q(a)>68?1900:2e3)};var td=C(\"FullYear\",!1);H(\"w\",[\"ww\",2],\"wo\",\"week\"),H(\"W\",[\"WW\",2],\"Wo\",\"isoWeek\"),z(\"week\",\"w\"),z(\"isoWeek\",\"W\"),N(\"w\",Wc),N(\"ww\",Wc,Sc),N(\"W\",Wc),N(\"WW\",Wc,Sc),R([\"w\",\"ww\",\"W\",\"WW\"],function(a,b,c,d){b[d.substr(0,1)]=q(a)});var ud={dow:0,doy:6};H(\"DDD\",[\"DDDD\",3],\"DDDo\",\"dayOfYear\"),z(\"dayOfYear\",\"DDD\"),N(\"DDD\",Xc),N(\"DDDD\",Tc),Q([\"DDD\",\"DDDD\"],function(a,b,c){c._dayOfYear=q(a)}),a.ISO_8601=function(){};var vd=aa(\"moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548\",function(){var a=Da.apply(null,arguments);return this>a?this:a}),wd=aa(\"moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548\",function(){var a=Da.apply(null,arguments);return a>this?this:a});Ja(\"Z\",\":\"),Ja(\"ZZ\",\"\"),N(\"Z\",ad),N(\"ZZ\",ad),Q([\"Z\",\"ZZ\"],function(a,b,c){c._useUTC=!0,c._tzm=Ka(a)});var xd=/([\\+\\-]|\\d\\d)/gi;a.updateOffset=function(){};var yd=/(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,zd=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;Ya.fn=Ha.prototype;var Ad=ab(1,\"add\"),Bd=ab(-1,\"subtract\");a.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\";var Cd=aa(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",function(a){return void 0===a?this.localeData():this.locale(a)});H(0,[\"gg\",2],0,function(){return this.weekYear()%100}),H(0,[\"GG\",2],0,function(){return this.isoWeekYear()%100}),Db(\"gggg\",\"weekYear\"),Db(\"ggggg\",\"weekYear\"),Db(\"GGGG\",\"isoWeekYear\"),Db(\"GGGGG\",\"isoWeekYear\"),z(\"weekYear\",\"gg\"),z(\"isoWeekYear\",\"GG\"),N(\"G\",_c),N(\"g\",_c),N(\"GG\",Wc,Sc),N(\"gg\",Wc,Sc),N(\"GGGG\",Yc,Uc),N(\"gggg\",Yc,Uc),N(\"GGGGG\",Zc,Vc),N(\"ggggg\",Zc,Vc),R([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],function(a,b,c,d){b[d.substr(0,2)]=q(a)}),R([\"gg\",\"GG\"],function(b,c,d,e){c[e]=a.parseTwoDigitYear(b)}),H(\"Q\",0,0,\"quarter\"),z(\"quarter\",\"Q\"),N(\"Q\",Rc),Q(\"Q\",function(a,b){b[gd]=3*(q(a)-1)}),H(\"D\",[\"DD\",2],\"Do\",\"date\"),z(\"date\",\"D\"),N(\"D\",Wc),N(\"DD\",Wc,Sc),N(\"Do\",function(a,b){return a?b._ordinalParse:b._ordinalParseLenient}),Q([\"D\",\"DD\"],hd),Q(\"Do\",function(a,b){b[hd]=q(a.match(Wc)[0],10)});var Dd=C(\"Date\",!0);H(\"d\",0,\"do\",\"day\"),H(\"dd\",0,0,function(a){return this.localeData().weekdaysMin(this,a)}),H(\"ddd\",0,0,function(a){return this.localeData().weekdaysShort(this,a)}),H(\"dddd\",0,0,function(a){return this.localeData().weekdays(this,a)}),H(\"e\",0,0,\"weekday\"),H(\"E\",0,0,\"isoWeekday\"),z(\"day\",\"d\"),z(\"weekday\",\"e\"),z(\"isoWeekday\",\"E\"),N(\"d\",Wc),N(\"e\",Wc),N(\"E\",Wc),N(\"dd\",cd),N(\"ddd\",cd),N(\"dddd\",cd),R([\"dd\",\"ddd\",\"dddd\"],function(a,b,c){var d=c._locale.weekdaysParse(a);null!=d?b.d=d:j(c).invalidWeekday=a}),R([\"d\",\"e\",\"E\"],function(a,b,c,d){b[d]=q(a)});var Ed=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),Fd=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),Gd=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\");H(\"H\",[\"HH\",2],0,\"hour\"),H(\"h\",[\"hh\",2],0,function(){return this.hours()%12||12}),Sb(\"a\",!0),Sb(\"A\",!1),z(\"hour\",\"h\"),N(\"a\",Tb),N(\"A\",Tb),N(\"H\",Wc),N(\"h\",Wc),N(\"HH\",Wc,Sc),N(\"hh\",Wc,Sc),Q([\"H\",\"HH\"],id),Q([\"a\",\"A\"],function(a,b,c){c._isPm=c._locale.isPM(a),c._meridiem=a}),Q([\"h\",\"hh\"],function(a,b,c){b[id]=q(a),j(c).bigHour=!0});var Hd=/[ap]\\.?m?\\.?/i,Id=C(\"Hours\",!0);H(\"m\",[\"mm\",2],0,\"minute\"),z(\"minute\",\"m\"),N(\"m\",Wc),N(\"mm\",Wc,Sc),Q([\"m\",\"mm\"],jd);var Jd=C(\"Minutes\",!1);H(\"s\",[\"ss\",2],0,\"second\"),z(\"second\",\"s\"),N(\"s\",Wc),N(\"ss\",Wc,Sc),Q([\"s\",\"ss\"],kd);var Kd=C(\"Seconds\",!1);H(\"S\",0,0,function(){return~~(this.millisecond()/100)}),H(0,[\"SS\",2],0,function(){return~~(this.millisecond()/10)}),H(0,[\"SSS\",3],0,\"millisecond\"),H(0,[\"SSSS\",4],0,function(){return 10*this.millisecond()}),H(0,[\"SSSSS\",5],0,function(){return 100*this.millisecond()}),H(0,[\"SSSSSS\",6],0,function(){return 1e3*this.millisecond()}),H(0,[\"SSSSSSS\",7],0,function(){return 1e4*this.millisecond()}),H(0,[\"SSSSSSSS\",8],0,function(){return 1e5*this.millisecond()}),H(0,[\"SSSSSSSSS\",9],0,function(){return 1e6*this.millisecond()}),z(\"millisecond\",\"ms\"),N(\"S\",Xc,Rc),N(\"SS\",Xc,Sc),N(\"SSS\",Xc,Tc);var Ld;for(Ld=\"SSSS\";Ld.length<=9;Ld+=\"S\")N(Ld,$c);for(Ld=\"S\";Ld.length<=9;Ld+=\"S\")Q(Ld,Wb);var Md=C(\"Milliseconds\",!1);H(\"z\",0,0,\"zoneAbbr\"),H(\"zz\",0,0,\"zoneName\");var Nd=n.prototype;Nd.add=Ad,Nd.calendar=cb,Nd.clone=db,Nd.diff=ib,Nd.endOf=ub,Nd.format=mb,Nd.from=nb,Nd.fromNow=ob,Nd.to=pb,Nd.toNow=qb,Nd.get=F,Nd.invalidAt=Cb,Nd.isAfter=eb,Nd.isBefore=fb,Nd.isBetween=gb,Nd.isSame=hb,Nd.isValid=Ab,Nd.lang=Cd,Nd.locale=rb,Nd.localeData=sb,Nd.max=wd,Nd.min=vd,Nd.parsingFlags=Bb,Nd.set=F,Nd.startOf=tb,Nd.subtract=Bd,Nd.toArray=yb,Nd.toObject=zb,Nd.toDate=xb,Nd.toISOString=lb,Nd.toJSON=lb,Nd.toString=kb,Nd.unix=wb,Nd.valueOf=vb,Nd.year=td,Nd.isLeapYear=ia,Nd.weekYear=Fb,Nd.isoWeekYear=Gb,Nd.quarter=Nd.quarters=Jb,Nd.month=Y,Nd.daysInMonth=Z,Nd.week=Nd.weeks=na,Nd.isoWeek=Nd.isoWeeks=oa,Nd.weeksInYear=Ib,Nd.isoWeeksInYear=Hb,Nd.date=Dd,Nd.day=Nd.days=Pb,Nd.weekday=Qb,Nd.isoWeekday=Rb,Nd.dayOfYear=qa,Nd.hour=Nd.hours=Id,Nd.minute=Nd.minutes=Jd,Nd.second=Nd.seconds=Kd,\r\nNd.millisecond=Nd.milliseconds=Md,Nd.utcOffset=Na,Nd.utc=Pa,Nd.local=Qa,Nd.parseZone=Ra,Nd.hasAlignedHourOffset=Sa,Nd.isDST=Ta,Nd.isDSTShifted=Ua,Nd.isLocal=Va,Nd.isUtcOffset=Wa,Nd.isUtc=Xa,Nd.isUTC=Xa,Nd.zoneAbbr=Xb,Nd.zoneName=Yb,Nd.dates=aa(\"dates accessor is deprecated. Use date instead.\",Dd),Nd.months=aa(\"months accessor is deprecated. Use month instead\",Y),Nd.years=aa(\"years accessor is deprecated. Use year instead\",td),Nd.zone=aa(\"moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779\",Oa);var Od=Nd,Pd={sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},Qd={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},Rd=\"Invalid date\",Sd=\"%d\",Td=/\\d{1,2}/,Ud={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},Vd=s.prototype;Vd._calendar=Pd,Vd.calendar=_b,Vd._longDateFormat=Qd,Vd.longDateFormat=ac,Vd._invalidDate=Rd,Vd.invalidDate=bc,Vd._ordinal=Sd,Vd.ordinal=cc,Vd._ordinalParse=Td,Vd.preparse=dc,Vd.postformat=dc,Vd._relativeTime=Ud,Vd.relativeTime=ec,Vd.pastFuture=fc,Vd.set=gc,Vd.months=U,Vd._months=md,Vd.monthsShort=V,Vd._monthsShort=nd,Vd.monthsParse=W,Vd.week=ka,Vd._week=ud,Vd.firstDayOfYear=ma,Vd.firstDayOfWeek=la,Vd.weekdays=Lb,Vd._weekdays=Ed,Vd.weekdaysMin=Nb,Vd._weekdaysMin=Gd,Vd.weekdaysShort=Mb,Vd._weekdaysShort=Fd,Vd.weekdaysParse=Ob,Vd.isPM=Ub,Vd._meridiemParse=Hd,Vd.meridiem=Vb,w(\"en\",{ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===q(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),a.lang=aa(\"moment.lang is deprecated. Use moment.locale instead.\",w),a.langData=aa(\"moment.langData is deprecated. Use moment.localeData instead.\",y);var Wd=Math.abs,Xd=yc(\"ms\"),Yd=yc(\"s\"),Zd=yc(\"m\"),$d=yc(\"h\"),_d=yc(\"d\"),ae=yc(\"w\"),be=yc(\"M\"),ce=yc(\"y\"),de=Ac(\"milliseconds\"),ee=Ac(\"seconds\"),fe=Ac(\"minutes\"),ge=Ac(\"hours\"),he=Ac(\"days\"),ie=Ac(\"months\"),je=Ac(\"years\"),ke=Math.round,le={s:45,m:45,h:22,d:26,M:11},me=Math.abs,ne=Ha.prototype;ne.abs=oc,ne.add=qc,ne.subtract=rc,ne.as=wc,ne.asMilliseconds=Xd,ne.asSeconds=Yd,ne.asMinutes=Zd,ne.asHours=$d,ne.asDays=_d,ne.asWeeks=ae,ne.asMonths=be,ne.asYears=ce,ne.valueOf=xc,ne._bubble=tc,ne.get=zc,ne.milliseconds=de,ne.seconds=ee,ne.minutes=fe,ne.hours=ge,ne.days=he,ne.weeks=Bc,ne.months=ie,ne.years=je,ne.humanize=Fc,ne.toISOString=Gc,ne.toString=Gc,ne.toJSON=Gc,ne.locale=rb,ne.localeData=sb,ne.toIsoString=aa(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",Gc),ne.lang=Cd,H(\"X\",0,0,\"unix\"),H(\"x\",0,0,\"valueOf\"),N(\"x\",_c),N(\"X\",bd),Q(\"X\",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),Q(\"x\",function(a,b,c){c._d=new Date(q(a))}),a.version=\"2.10.6\",b(Da),a.fn=Od,a.min=Fa,a.max=Ga,a.utc=h,a.unix=Zb,a.months=jc,a.isDate=d,a.locale=w,a.invalid=l,a.duration=Ya,a.isMoment=o,a.weekdays=lc,a.parseZone=$b,a.localeData=y,a.isDuration=Ia,a.monthsShort=kc,a.weekdaysMin=nc,a.defineLocale=x,a.weekdaysShort=mc,a.normalizeUnits=A,a.relativeTimeThreshold=Ec;var oe=a;return oe});","/*!\r\n * FullCalendar v2.5.0\r\n * Docs & License: http://fullcalendar.io/\r\n * (c) 2015 Adam Shaw\r\n */\r\n\r\n(function(factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine([ 'jquery', 'moment' ], factory);\r\n\t}\r\n\telse if (typeof exports === 'object') { // Node/CommonJS\r\n\t\tmodule.exports = factory(require('jquery'), require('moment'));\r\n\t}\r\n\telse {\r\n\t\tfactory(jQuery, moment);\r\n\t}\r\n})(function($, moment) {\r\n\r\n;;\r\n\r\nvar FC = $.fullCalendar = {\r\n\tversion: \"2.5.0\",\r\n\tinternalApiVersion: 1\r\n};\r\nvar fcViews = FC.views = {};\r\n\r\n\r\n$.fn.fullCalendar = function(options) {\r\n\tvar args = Array.prototype.slice.call(arguments, 1); // for a possible method call\r\n\tvar res = this; // what this function will return (this jQuery object by default)\r\n\r\n\tthis.each(function(i, _element) { // loop each DOM element involved\r\n\t\tvar element = $(_element);\r\n\t\tvar calendar = element.data('fullCalendar'); // get the existing calendar object (if any)\r\n\t\tvar singleRes; // the returned value of this single method call\r\n\r\n\t\t// a method call\r\n\t\tif (typeof options === 'string') {\r\n\t\t\tif (calendar && $.isFunction(calendar[options])) {\r\n\t\t\t\tsingleRes = calendar[options].apply(calendar, args);\r\n\t\t\t\tif (!i) {\r\n\t\t\t\t\tres = singleRes; // record the first method call result\r\n\t\t\t\t}\r\n\t\t\t\tif (options === 'destroy') { // for the destroy method, must remove Calendar object data\r\n\t\t\t\t\telement.removeData('fullCalendar');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// a new calendar initialization\r\n\t\telse if (!calendar) { // don't initialize twice\r\n\t\t\tcalendar = new Calendar(element, options);\r\n\t\t\telement.data('fullCalendar', calendar);\r\n\t\t\tcalendar.render();\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn res;\r\n};\r\n\r\n\r\nvar complexOptions = [ // names of options that are objects whose properties should be combined\r\n\t'header',\r\n\t'buttonText',\r\n\t'buttonIcons',\r\n\t'themeButtonIcons'\r\n];\r\n\r\n\r\n// Merges an array of option objects into a single object\r\nfunction mergeOptions(optionObjs) {\r\n\treturn mergeProps(optionObjs, complexOptions);\r\n}\r\n\r\n\r\n// Given options specified for the calendar's constructor, massages any legacy options into a non-legacy form.\r\n// Converts View-Option-Hashes into the View-Specific-Options format.\r\nfunction massageOverrides(input) {\r\n\tvar overrides = { views: input.views || {} }; // the output. ensure a `views` hash\r\n\tvar subObj;\r\n\r\n\t// iterate through all option override properties (except `views`)\r\n\t$.each(input, function(name, val) {\r\n\t\tif (name != 'views') {\r\n\r\n\t\t\t// could the value be a legacy View-Option-Hash?\r\n\t\t\tif (\r\n\t\t\t\t$.isPlainObject(val) &&\r\n\t\t\t\t!/(time|duration|interval)$/i.test(name) && // exclude duration options. might be given as objects\r\n\t\t\t\t$.inArray(name, complexOptions) == -1 // complex options aren't allowed to be View-Option-Hashes\r\n\t\t\t) {\r\n\t\t\t\tsubObj = null;\r\n\r\n\t\t\t\t// iterate through the properties of this possible View-Option-Hash value\r\n\t\t\t\t$.each(val, function(subName, subVal) {\r\n\r\n\t\t\t\t\t// is the property targeting a view?\r\n\t\t\t\t\tif (/^(month|week|day|default|basic(Week|Day)?|agenda(Week|Day)?)$/.test(subName)) {\r\n\t\t\t\t\t\tif (!overrides.views[subName]) { // ensure the view-target entry exists\r\n\t\t\t\t\t\t\toverrides.views[subName] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toverrides.views[subName][name] = subVal; // record the value in the `views` object\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { // a non-View-Option-Hash property\r\n\t\t\t\t\t\tif (!subObj) {\r\n\t\t\t\t\t\t\tsubObj = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsubObj[subName] = subVal; // accumulate these unrelated values for later\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (subObj) { // non-View-Option-Hash properties? transfer them as-is\r\n\t\t\t\t\toverrides[name] = subObj;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\toverrides[name] = val; // transfer normal options as-is\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\treturn overrides;\r\n}\r\n\r\n;;\r\n\r\n// exports\r\nFC.intersectRanges = intersectRanges;\r\nFC.applyAll = applyAll;\r\nFC.debounce = debounce;\r\nFC.isInt = isInt;\r\nFC.htmlEscape = htmlEscape;\r\nFC.cssToStr = cssToStr;\r\nFC.proxy = proxy;\r\nFC.capitaliseFirstLetter = capitaliseFirstLetter;\r\n\r\n\r\n/* FullCalendar-specific DOM Utilities\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n// Given the scrollbar widths of some other container, create borders/margins on rowEls in order to match the left\r\n// and right space that was offset by the scrollbars. A 1-pixel border first, then margin beyond that.\r\nfunction compensateScroll(rowEls, scrollbarWidths) {\r\n\tif (scrollbarWidths.left) {\r\n\t\trowEls.css({\r\n\t\t\t'border-left-width': 1,\r\n\t\t\t'margin-left': scrollbarWidths.left - 1\r\n\t\t});\r\n\t}\r\n\tif (scrollbarWidths.right) {\r\n\t\trowEls.css({\r\n\t\t\t'border-right-width': 1,\r\n\t\t\t'margin-right': scrollbarWidths.right - 1\r\n\t\t});\r\n\t}\r\n}\r\n\r\n\r\n// Undoes compensateScroll and restores all borders/margins\r\nfunction uncompensateScroll(rowEls) {\r\n\trowEls.css({\r\n\t\t'margin-left': '',\r\n\t\t'margin-right': '',\r\n\t\t'border-left-width': '',\r\n\t\t'border-right-width': ''\r\n\t});\r\n}\r\n\r\n\r\n// Make the mouse cursor express that an event is not allowed in the current area\r\nfunction disableCursor() {\r\n\t$('body').addClass('fc-not-allowed');\r\n}\r\n\r\n\r\n// Returns the mouse cursor to its original look\r\nfunction enableCursor() {\r\n\t$('body').removeClass('fc-not-allowed');\r\n}\r\n\r\n\r\n// Given a total available height to fill, have `els` (essentially child rows) expand to accomodate.\r\n// By default, all elements that are shorter than the recommended height are expanded uniformly, not considering\r\n// any other els that are already too tall. if `shouldRedistribute` is on, it considers these tall rows and \r\n// reduces the available height.\r\nfunction distributeHeight(els, availableHeight, shouldRedistribute) {\r\n\r\n\t// *FLOORING NOTE*: we floor in certain places because zoom can give inaccurate floating-point dimensions,\r\n\t// and it is better to be shorter than taller, to avoid creating unnecessary scrollbars.\r\n\r\n\tvar minOffset1 = Math.floor(availableHeight / els.length); // for non-last element\r\n\tvar minOffset2 = Math.floor(availableHeight - minOffset1 * (els.length - 1)); // for last element *FLOORING NOTE*\r\n\tvar flexEls = []; // elements that are allowed to expand. array of DOM nodes\r\n\tvar flexOffsets = []; // amount of vertical space it takes up\r\n\tvar flexHeights = []; // actual css height\r\n\tvar usedHeight = 0;\r\n\r\n\tundistributeHeight(els); // give all elements their natural height\r\n\r\n\t// find elements that are below the recommended height (expandable).\r\n\t// important to query for heights in a single first pass (to avoid reflow oscillation).\r\n\tels.each(function(i, el) {\r\n\t\tvar minOffset = i === els.length - 1 ? minOffset2 : minOffset1;\r\n\t\tvar naturalOffset = $(el).outerHeight(true);\r\n\r\n\t\tif (naturalOffset < minOffset) {\r\n\t\t\tflexEls.push(el);\r\n\t\t\tflexOffsets.push(naturalOffset);\r\n\t\t\tflexHeights.push($(el).height());\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// this element stretches past recommended height (non-expandable). mark the space as occupied.\r\n\t\t\tusedHeight += naturalOffset;\r\n\t\t}\r\n\t});\r\n\r\n\t// readjust the recommended height to only consider the height available to non-maxed-out rows.\r\n\tif (shouldRedistribute) {\r\n\t\tavailableHeight -= usedHeight;\r\n\t\tminOffset1 = Math.floor(availableHeight / flexEls.length);\r\n\t\tminOffset2 = Math.floor(availableHeight - minOffset1 * (flexEls.length - 1)); // *FLOORING NOTE*\r\n\t}\r\n\r\n\t// assign heights to all expandable elements\r\n\t$(flexEls).each(function(i, el) {\r\n\t\tvar minOffset = i === flexEls.length - 1 ? minOffset2 : minOffset1;\r\n\t\tvar naturalOffset = flexOffsets[i];\r\n\t\tvar naturalHeight = flexHeights[i];\r\n\t\tvar newHeight = minOffset - (naturalOffset - naturalHeight); // subtract the margin/padding\r\n\r\n\t\tif (naturalOffset < minOffset) { // we check this again because redistribution might have changed things\r\n\t\t\t$(el).height(newHeight);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n// Undoes distrubuteHeight, restoring all els to their natural height\r\nfunction undistributeHeight(els) {\r\n\tels.height('');\r\n}\r\n\r\n\r\n// Given `els`, a jQuery set of <td> cells, find the cell with the largest natural width and set the widths of all the\r\n// cells to be that width.\r\n// PREREQUISITE: if you want a cell to take up width, it needs to have a single inner element w/ display:inline\r\nfunction matchCellWidths(els) {\r\n\tvar maxInnerWidth = 0;\r\n\r\n\tels.find('> *').each(function(i, innerEl) {\r\n\t\tvar innerWidth = $(innerEl).outerWidth();\r\n\t\tif (innerWidth > maxInnerWidth) {\r\n\t\t\tmaxInnerWidth = innerWidth;\r\n\t\t}\r\n\t});\r\n\r\n\tmaxInnerWidth++; // sometimes not accurate of width the text needs to stay on one line. insurance\r\n\r\n\tels.width(maxInnerWidth);\r\n\r\n\treturn maxInnerWidth;\r\n}\r\n\r\n\r\n// Turns a container element into a scroller if its contents is taller than the allotted height.\r\n// Returns true if the element is now a scroller, false otherwise.\r\n// NOTE: this method is best because it takes weird zooming dimensions into account\r\nfunction setPotentialScroller(containerEl, height) {\r\n\tcontainerEl.height(height).addClass('fc-scroller');\r\n\r\n\t// are scrollbars needed?\r\n\tif (containerEl[0].scrollHeight - 1 > containerEl[0].clientHeight) { // !!! -1 because IE is often off-by-one :(\r\n\t\treturn true;\r\n\t}\r\n\r\n\tunsetScroller(containerEl); // undo\r\n\treturn false;\r\n}\r\n\r\n\r\n// Takes an element that might have been a scroller, and turns it back into a normal element.\r\nfunction unsetScroller(containerEl) {\r\n\tcontainerEl.height('').removeClass('fc-scroller');\r\n}\r\n\r\n\r\n/* General DOM Utilities\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nFC.getOuterRect = getOuterRect;\r\nFC.getClientRect = getClientRect;\r\nFC.getContentRect = getContentRect;\r\nFC.getScrollbarWidths = getScrollbarWidths;\r\n\r\n\r\n// borrowed from https://github.com/jquery/jquery-ui/blob/1.11.0/ui/core.js#L51\r\nfunction getScrollParent(el) {\r\n\tvar position = el.css('position'),\r\n\t\tscrollParent = el.parents().filter(function() {\r\n\t\t\tvar parent = $(this);\r\n\t\t\treturn (/(auto|scroll)/).test(\r\n\t\t\t\tparent.css('overflow') + parent.css('overflow-y') + parent.css('overflow-x')\r\n\t\t\t);\r\n\t\t}).eq(0);\r\n\r\n\treturn position === 'fixed' || !scrollParent.length ? $(el[0].ownerDocument || document) : scrollParent;\r\n}\r\n\r\n\r\n// Queries the outer bounding area of a jQuery element.\r\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\r\nfunction getOuterRect(el) {\r\n\tvar offset = el.offset();\r\n\r\n\treturn {\r\n\t\tleft: offset.left,\r\n\t\tright: offset.left + el.outerWidth(),\r\n\t\ttop: offset.top,\r\n\t\tbottom: offset.top + el.outerHeight()\r\n\t};\r\n}\r\n\r\n\r\n// Queries the area within the margin/border/scrollbars of a jQuery element. Does not go within the padding.\r\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\r\n// NOTE: should use clientLeft/clientTop, but very unreliable cross-browser.\r\nfunction getClientRect(el) {\r\n\tvar offset = el.offset();\r\n\tvar scrollbarWidths = getScrollbarWidths(el);\r\n\tvar left = offset.left + getCssFloat(el, 'border-left-width') + scrollbarWidths.left;\r\n\tvar top = offset.top + getCssFloat(el, 'border-top-width') + scrollbarWidths.top;\r\n\r\n\treturn {\r\n\t\tleft: left,\r\n\t\tright: left + el[0].clientWidth, // clientWidth includes padding but NOT scrollbars\r\n\t\ttop: top,\r\n\t\tbottom: top + el[0].clientHeight // clientHeight includes padding but NOT scrollbars\r\n\t};\r\n}\r\n\r\n\r\n// Queries the area within the margin/border/padding of a jQuery element. Assumed not to have scrollbars.\r\n// Returns a rectangle with absolute coordinates: left, right (exclusive), top, bottom (exclusive).\r\nfunction getContentRect(el) {\r\n\tvar offset = el.offset(); // just outside of border, margin not included\r\n\tvar left = offset.left + getCssFloat(el, 'border-left-width') + getCssFloat(el, 'padding-left');\r\n\tvar top = offset.top + getCssFloat(el, 'border-top-width') + getCssFloat(el, 'padding-top');\r\n\r\n\treturn {\r\n\t\tleft: left,\r\n\t\tright: left + el.width(),\r\n\t\ttop: top,\r\n\t\tbottom: top + el.height()\r\n\t};\r\n}\r\n\r\n\r\n// Returns the computed left/right/top/bottom scrollbar widths for the given jQuery element.\r\n// NOTE: should use clientLeft/clientTop, but very unreliable cross-browser.\r\nfunction getScrollbarWidths(el) {\r\n\tvar leftRightWidth = el.innerWidth() - el[0].clientWidth; // the paddings cancel out, leaving the scrollbars\r\n\tvar widths = {\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\ttop: 0,\r\n\t\tbottom: el.innerHeight() - el[0].clientHeight // the paddings cancel out, leaving the bottom scrollbar\r\n\t};\r\n\r\n\tif (getIsLeftRtlScrollbars() && el.css('direction') == 'rtl') { // is the scrollbar on the left side?\r\n\t\twidths.left = leftRightWidth;\r\n\t}\r\n\telse {\r\n\t\twidths.right = leftRightWidth;\r\n\t}\r\n\r\n\treturn widths;\r\n}\r\n\r\n\r\n// Logic for determining if, when the element is right-to-left, the scrollbar appears on the left side\r\n\r\nvar _isLeftRtlScrollbars = null;\r\n\r\nfunction getIsLeftRtlScrollbars() { // responsible for caching the computation\r\n\tif (_isLeftRtlScrollbars === null) {\r\n\t\t_isLeftRtlScrollbars = computeIsLeftRtlScrollbars();\r\n\t}\r\n\treturn _isLeftRtlScrollbars;\r\n}\r\n\r\nfunction computeIsLeftRtlScrollbars() { // creates an offscreen test element, then removes it\r\n\tvar el = $('<div><div/></div>')\r\n\t\t.css({\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: -1000,\r\n\t\t\tleft: 0,\r\n\t\t\tborder: 0,\r\n\t\t\tpadding: 0,\r\n\t\t\toverflow: 'scroll',\r\n\t\t\tdirection: 'rtl'\r\n\t\t})\r\n\t\t.appendTo('body');\r\n\tvar innerEl = el.children();\r\n\tvar res = innerEl.offset().left > el.offset().left; // is the inner div shifted to accommodate a left scrollbar?\r\n\tel.remove();\r\n\treturn res;\r\n}\r\n\r\n\r\n// Retrieves a jQuery element's computed CSS value as a floating-point number.\r\n// If the queried value is non-numeric (ex: IE can return \"medium\" for border width), will just return zero.\r\nfunction getCssFloat(el, prop) {\r\n\treturn parseFloat(el.css(prop)) || 0;\r\n}\r\n\r\n\r\n// Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)\r\nfunction isPrimaryMouseButton(ev) {\r\n\treturn ev.which == 1 && !ev.ctrlKey;\r\n}\r\n\r\n\r\n/* Geometry\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nFC.intersectRects = intersectRects;\r\n\r\n// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false\r\nfunction intersectRects(rect1, rect2) {\r\n\tvar res = {\r\n\t\tleft: Math.max(rect1.left, rect2.left),\r\n\t\tright: Math.min(rect1.right, rect2.right),\r\n\t\ttop: Math.max(rect1.top, rect2.top),\r\n\t\tbottom: Math.min(rect1.bottom, rect2.bottom)\r\n\t};\r\n\r\n\tif (res.left < res.right && res.top < res.bottom) {\r\n\t\treturn res;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n\r\n// Returns a new point that will have been moved to reside within the given rectangle\r\nfunction constrainPoint(point, rect) {\r\n\treturn {\r\n\t\tleft: Math.min(Math.max(point.left, rect.left), rect.right),\r\n\t\ttop: Math.min(Math.max(point.top, rect.top), rect.bottom)\r\n\t};\r\n}\r\n\r\n\r\n// Returns a point that is the center of the given rectangle\r\nfunction getRectCenter(rect) {\r\n\treturn {\r\n\t\tleft: (rect.left + rect.right) / 2,\r\n\t\ttop: (rect.top + rect.bottom) / 2\r\n\t};\r\n}\r\n\r\n\r\n// Subtracts point2's coordinates from point1's coordinates, returning a delta\r\nfunction diffPoints(point1, point2) {\r\n\treturn {\r\n\t\tleft: point1.left - point2.left,\r\n\t\ttop: point1.top - point2.top\r\n\t};\r\n}\r\n\r\n\r\n/* Object Ordering by Field\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nFC.parseFieldSpecs = parseFieldSpecs;\r\nFC.compareByFieldSpecs = compareByFieldSpecs;\r\nFC.compareByFieldSpec = compareByFieldSpec;\r\nFC.flexibleCompare = flexibleCompare;\r\n\r\n\r\nfunction parseFieldSpecs(input) {\r\n\tvar specs = [];\r\n\tvar tokens = [];\r\n\tvar i, token;\r\n\r\n\tif (typeof input === 'string') {\r\n\t\ttokens = input.split(/\\s*,\\s*/);\r\n\t}\r\n\telse if (typeof input === 'function') {\r\n\t\ttokens = [ input ];\r\n\t}\r\n\telse if ($.isArray(input)) {\r\n\t\ttokens = input;\r\n\t}\r\n\r\n\tfor (i = 0; i < tokens.length; i++) {\r\n\t\ttoken = tokens[i];\r\n\r\n\t\tif (typeof token === 'string') {\r\n\t\t\tspecs.push(\r\n\t\t\t\ttoken.charAt(0) == '-' ?\r\n\t\t\t\t\t{ field: token.substring(1), order: -1 } :\r\n\t\t\t\t\t{ field: token, order: 1 }\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (typeof token === 'function') {\r\n\t\t\tspecs.push({ func: token });\r\n\t\t}\r\n\t}\r\n\r\n\treturn specs;\r\n}\r\n\r\n\r\nfunction compareByFieldSpecs(obj1, obj2, fieldSpecs) {\r\n\tvar i;\r\n\tvar cmp;\r\n\r\n\tfor (i = 0; i < fieldSpecs.length; i++) {\r\n\t\tcmp = compareByFieldSpec(obj1, obj2, fieldSpecs[i]);\r\n\t\tif (cmp) {\r\n\t\t\treturn cmp;\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\n\r\nfunction compareByFieldSpec(obj1, obj2, fieldSpec) {\r\n\tif (fieldSpec.func) {\r\n\t\treturn fieldSpec.func(obj1, obj2);\r\n\t}\r\n\treturn flexibleCompare(obj1[fieldSpec.field], obj2[fieldSpec.field]) *\r\n\t\t(fieldSpec.order || 1);\r\n}\r\n\r\n\r\nfunction flexibleCompare(a, b) {\r\n\tif (!a && !b) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (b == null) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (a == null) {\r\n\t\treturn 1;\r\n\t}\r\n\tif ($.type(a) === 'string' || $.type(b) === 'string') {\r\n\t\treturn String(a).localeCompare(String(b));\r\n\t}\r\n\treturn a - b;\r\n}\r\n\r\n\r\n/* FullCalendar-specific Misc Utilities\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n// Computes the intersection of the two ranges. Returns undefined if no intersection.\r\n// Expects all dates to be normalized to the same timezone beforehand.\r\n// TODO: move to date section?\r\nfunction intersectRanges(subjectRange, constraintRange) {\r\n\tvar subjectStart = subjectRange.start;\r\n\tvar subjectEnd = subjectRange.end;\r\n\tvar constraintStart = constraintRange.start;\r\n\tvar constraintEnd = constraintRange.end;\r\n\tvar segStart, segEnd;\r\n\tvar isStart, isEnd;\r\n\r\n\tif (subjectEnd > constraintStart && subjectStart < constraintEnd) { // in bounds at all?\r\n\r\n\t\tif (subjectStart >= constraintStart) {\r\n\t\t\tsegStart = subjectStart.clone();\r\n\t\t\tisStart = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsegStart = constraintStart.clone();\r\n\t\t\tisStart =  false;\r\n\t\t}\r\n\r\n\t\tif (subjectEnd <= constraintEnd) {\r\n\t\t\tsegEnd = subjectEnd.clone();\r\n\t\t\tisEnd = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsegEnd = constraintEnd.clone();\r\n\t\t\tisEnd = false;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tstart: segStart,\r\n\t\t\tend: segEnd,\r\n\t\t\tisStart: isStart,\r\n\t\t\tisEnd: isEnd\r\n\t\t};\r\n\t}\r\n}\r\n\r\n\r\n/* Date Utilities\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nFC.computeIntervalUnit = computeIntervalUnit;\r\nFC.divideRangeByDuration = divideRangeByDuration;\r\nFC.divideDurationByDuration = divideDurationByDuration;\r\nFC.multiplyDuration = multiplyDuration;\r\nFC.durationHasTime = durationHasTime;\r\n\r\nvar dayIDs = [ 'sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat' ];\r\nvar intervalUnits = [ 'year', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond' ];\r\n\r\n\r\n// Diffs the two moments into a Duration where full-days are recorded first, then the remaining time.\r\n// Moments will have their timezones normalized.\r\nfunction diffDayTime(a, b) {\r\n\treturn moment.duration({\r\n\t\tdays: a.clone().stripTime().diff(b.clone().stripTime(), 'days'),\r\n\t\tms: a.time() - b.time() // time-of-day from day start. disregards timezone\r\n\t});\r\n}\r\n\r\n\r\n// Diffs the two moments via their start-of-day (regardless of timezone). Produces whole-day durations.\r\nfunction diffDay(a, b) {\r\n\treturn moment.duration({\r\n\t\tdays: a.clone().stripTime().diff(b.clone().stripTime(), 'days')\r\n\t});\r\n}\r\n\r\n\r\n// Diffs two moments, producing a duration, made of a whole-unit-increment of the given unit. Uses rounding.\r\nfunction diffByUnit(a, b, unit) {\r\n\treturn moment.duration(\r\n\t\tMath.round(a.diff(b, unit, true)), // returnFloat=true\r\n\t\tunit\r\n\t);\r\n}\r\n\r\n\r\n// Computes the unit name of the largest whole-unit period of time.\r\n// For example, 48 hours will be \"days\" whereas 49 hours will be \"hours\".\r\n// Accepts start/end, a range object, or an original duration object.\r\nfunction computeIntervalUnit(start, end) {\r\n\tvar i, unit;\r\n\tvar val;\r\n\r\n\tfor (i = 0; i < intervalUnits.length; i++) {\r\n\t\tunit = intervalUnits[i];\r\n\t\tval = computeRangeAs(unit, start, end);\r\n\r\n\t\tif (val >= 1 && isInt(val)) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\treturn unit; // will be \"milliseconds\" if nothing else matches\r\n}\r\n\r\n\r\n// Computes the number of units (like \"hours\") in the given range.\r\n// Range can be a {start,end} object, separate start/end args, or a Duration.\r\n// Results are based on Moment's .as() and .diff() methods, so results can depend on internal handling\r\n// of month-diffing logic (which tends to vary from version to version).\r\nfunction computeRangeAs(unit, start, end) {\r\n\r\n\tif (end != null) { // given start, end\r\n\t\treturn end.diff(start, unit, true);\r\n\t}\r\n\telse if (moment.isDuration(start)) { // given duration\r\n\t\treturn start.as(unit);\r\n\t}\r\n\telse { // given { start, end } range object\r\n\t\treturn start.end.diff(start.start, unit, true);\r\n\t}\r\n}\r\n\r\n\r\n// Intelligently divides a range (specified by a start/end params) by a duration\r\nfunction divideRangeByDuration(start, end, dur) {\r\n\tvar months;\r\n\r\n\tif (durationHasTime(dur)) {\r\n\t\treturn (end - start) / dur;\r\n\t}\r\n\tmonths = dur.asMonths();\r\n\tif (Math.abs(months) >= 1 && isInt(months)) {\r\n\t\treturn end.diff(start, 'months', true) / months;\r\n\t}\r\n\treturn end.diff(start, 'days', true) / dur.asDays();\r\n}\r\n\r\n\r\n// Intelligently divides one duration by another\r\nfunction divideDurationByDuration(dur1, dur2) {\r\n\tvar months1, months2;\r\n\r\n\tif (durationHasTime(dur1) || durationHasTime(dur2)) {\r\n\t\treturn dur1 / dur2;\r\n\t}\r\n\tmonths1 = dur1.asMonths();\r\n\tmonths2 = dur2.asMonths();\r\n\tif (\r\n\t\tMath.abs(months1) >= 1 && isInt(months1) &&\r\n\t\tMath.abs(months2) >= 1 && isInt(months2)\r\n\t) {\r\n\t\treturn months1 / months2;\r\n\t}\r\n\treturn dur1.asDays() / dur2.asDays();\r\n}\r\n\r\n\r\n// Intelligently multiplies a duration by a number\r\nfunction multiplyDuration(dur, n) {\r\n\tvar months;\r\n\r\n\tif (durationHasTime(dur)) {\r\n\t\treturn moment.duration(dur * n);\r\n\t}\r\n\tmonths = dur.asMonths();\r\n\tif (Math.abs(months) >= 1 && isInt(months)) {\r\n\t\treturn moment.duration({ months: months * n });\r\n\t}\r\n\treturn moment.duration({ days: dur.asDays() * n });\r\n}\r\n\r\n\r\n// Returns a boolean about whether the given duration has any time parts (hours/minutes/seconds/ms)\r\nfunction durationHasTime(dur) {\r\n\treturn Boolean(dur.hours() || dur.minutes() || dur.seconds() || dur.milliseconds());\r\n}\r\n\r\n\r\nfunction isNativeDate(input) {\r\n\treturn  Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;\r\n}\r\n\r\n\r\n// Returns a boolean about whether the given input is a time string, like \"06:40:00\" or \"06:00\"\r\nfunction isTimeString(str) {\r\n\treturn /^\\d+\\:\\d+(?:\\:\\d+\\.?(?:\\d{3})?)?$/.test(str);\r\n}\r\n\r\n\r\n/* Logging and Debug\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nFC.log = function() {\r\n\tvar console = window.console;\r\n\r\n\tif (console && console.log) {\r\n\t\treturn console.log.apply(console, arguments);\r\n\t}\r\n};\r\n\r\nFC.warn = function() {\r\n\tvar console = window.console;\r\n\r\n\tif (console && console.warn) {\r\n\t\treturn console.warn.apply(console, arguments);\r\n\t}\r\n\telse {\r\n\t\treturn FC.log.apply(FC, arguments);\r\n\t}\r\n};\r\n\r\n\r\n/* General Utilities\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nvar hasOwnPropMethod = {}.hasOwnProperty;\r\n\r\n\r\n// Merges an array of objects into a single object.\r\n// The second argument allows for an array of property names who's object values will be merged together.\r\nfunction mergeProps(propObjs, complexProps) {\r\n\tvar dest = {};\r\n\tvar i, name;\r\n\tvar complexObjs;\r\n\tvar j, val;\r\n\tvar props;\r\n\r\n\tif (complexProps) {\r\n\t\tfor (i = 0; i < complexProps.length; i++) {\r\n\t\t\tname = complexProps[i];\r\n\t\t\tcomplexObjs = [];\r\n\r\n\t\t\t// collect the trailing object values, stopping when a non-object is discovered\r\n\t\t\tfor (j = propObjs.length - 1; j >= 0; j--) {\r\n\t\t\t\tval = propObjs[j][name];\r\n\r\n\t\t\t\tif (typeof val === 'object') {\r\n\t\t\t\t\tcomplexObjs.unshift(val);\r\n\t\t\t\t}\r\n\t\t\t\telse if (val !== undefined) {\r\n\t\t\t\t\tdest[name] = val; // if there were no objects, this value will be used\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// if the trailing values were objects, use the merged value\r\n\t\t\tif (complexObjs.length) {\r\n\t\t\t\tdest[name] = mergeProps(complexObjs);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// copy values into the destination, going from last to first\r\n\tfor (i = propObjs.length - 1; i >= 0; i--) {\r\n\t\tprops = propObjs[i];\r\n\r\n\t\tfor (name in props) {\r\n\t\t\tif (!(name in dest)) { // if already assigned by previous props or complex props, don't reassign\r\n\t\t\t\tdest[name] = props[name];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn dest;\r\n}\r\n\r\n\r\n// Create an object that has the given prototype. Just like Object.create\r\nfunction createObject(proto) {\r\n\tvar f = function() {};\r\n\tf.prototype = proto;\r\n\treturn new f();\r\n}\r\n\r\n\r\nfunction copyOwnProps(src, dest) {\r\n\tfor (var name in src) {\r\n\t\tif (hasOwnProp(src, name)) {\r\n\t\t\tdest[name] = src[name];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// Copies over certain methods with the same names as Object.prototype methods. Overcomes an IE<=8 bug:\r\n// https://developer.mozilla.org/en-US/docs/ECMAScript_DontEnum_attribute#JScript_DontEnum_Bug\r\nfunction copyNativeMethods(src, dest) {\r\n\tvar names = [ 'constructor', 'toString', 'valueOf' ];\r\n\tvar i, name;\r\n\r\n\tfor (i = 0; i < names.length; i++) {\r\n\t\tname = names[i];\r\n\r\n\t\tif (src[name] !== Object.prototype[name]) {\r\n\t\t\tdest[name] = src[name];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction hasOwnProp(obj, name) {\r\n\treturn hasOwnPropMethod.call(obj, name);\r\n}\r\n\r\n\r\n// Is the given value a non-object non-function value?\r\nfunction isAtomic(val) {\r\n\treturn /undefined|null|boolean|number|string/.test($.type(val));\r\n}\r\n\r\n\r\nfunction applyAll(functions, thisObj, args) {\r\n\tif ($.isFunction(functions)) {\r\n\t\tfunctions = [ functions ];\r\n\t}\r\n\tif (functions) {\r\n\t\tvar i;\r\n\t\tvar ret;\r\n\t\tfor (i=0; i<functions.length; i++) {\r\n\t\t\tret = functions[i].apply(thisObj, args) || ret;\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n}\r\n\r\n\r\nfunction firstDefined() {\r\n\tfor (var i=0; i<arguments.length; i++) {\r\n\t\tif (arguments[i] !== undefined) {\r\n\t\t\treturn arguments[i];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nfunction htmlEscape(s) {\r\n\treturn (s + '').replace(/&/g, '&amp;')\r\n\t\t.replace(/</g, '&lt;')\r\n\t\t.replace(/>/g, '&gt;')\r\n\t\t.replace(/'/g, '&#039;')\r\n\t\t.replace(/\"/g, '&quot;')\r\n\t\t.replace(/\\n/g, '<br />');\r\n}\r\n\r\n\r\nfunction stripHtmlEntities(text) {\r\n\treturn text.replace(/&.*?;/g, '');\r\n}\r\n\r\n\r\n// Given a hash of CSS properties, returns a string of CSS.\r\n// Uses property names as-is (no camel-case conversion). Will not make statements for null/undefined values.\r\nfunction cssToStr(cssProps) {\r\n\tvar statements = [];\r\n\r\n\t$.each(cssProps, function(name, val) {\r\n\t\tif (val != null) {\r\n\t\t\tstatements.push(name + ':' + val);\r\n\t\t}\r\n\t});\r\n\r\n\treturn statements.join(';');\r\n}\r\n\r\n\r\nfunction capitaliseFirstLetter(str) {\r\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n\r\nfunction compareNumbers(a, b) { // for .sort()\r\n\treturn a - b;\r\n}\r\n\r\n\r\nfunction isInt(n) {\r\n\treturn n % 1 === 0;\r\n}\r\n\r\n\r\n// Returns a method bound to the given object context.\r\n// Just like one of the jQuery.proxy signatures, but without the undesired behavior of treating the same method with\r\n// different contexts as identical when binding/unbinding events.\r\nfunction proxy(obj, methodName) {\r\n\tvar method = obj[methodName];\r\n\r\n\treturn function() {\r\n\t\treturn method.apply(obj, arguments);\r\n\t};\r\n}\r\n\r\n\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds.\r\n// https://github.com/jashkenas/underscore/blob/1.6.0/underscore.js#L714\r\nfunction debounce(func, wait) {\r\n\tvar timeoutId;\r\n\tvar args;\r\n\tvar context;\r\n\tvar timestamp; // of most recent call\r\n\tvar later = function() {\r\n\t\tvar last = +new Date() - timestamp;\r\n\t\tif (last < wait && last > 0) {\r\n\t\t\ttimeoutId = setTimeout(later, wait - last);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttimeoutId = null;\r\n\t\t\tfunc.apply(context, args);\r\n\t\t\tif (!timeoutId) {\r\n\t\t\t\tcontext = args = null;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn function() {\r\n\t\tcontext = this;\r\n\t\targs = arguments;\r\n\t\ttimestamp = +new Date();\r\n\t\tif (!timeoutId) {\r\n\t\t\ttimeoutId = setTimeout(later, wait);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n;;\r\n\r\nvar ambigDateOfMonthRegex = /^\\s*\\d{4}-\\d\\d$/;\r\nvar ambigTimeOrZoneRegex =\r\n\t/^\\s*\\d{4}-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?)?$/;\r\nvar newMomentProto = moment.fn; // where we will attach our new methods\r\nvar oldMomentProto = $.extend({}, newMomentProto); // copy of original moment methods\r\nvar allowValueOptimization;\r\nvar setUTCValues; // function defined below\r\nvar setLocalValues; // function defined below\r\n\r\n\r\n// Creating\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n// Creates a new moment, similar to the vanilla moment(...) constructor, but with\r\n// extra features (ambiguous time, enhanced formatting). When given an existing moment,\r\n// it will function as a clone (and retain the zone of the moment). Anything else will\r\n// result in a moment in the local zone.\r\nFC.moment = function() {\r\n\treturn makeMoment(arguments);\r\n};\r\n\r\n// Sames as FC.moment, but forces the resulting moment to be in the UTC timezone.\r\nFC.moment.utc = function() {\r\n\tvar mom = makeMoment(arguments, true);\r\n\r\n\t// Force it into UTC because makeMoment doesn't guarantee it\r\n\t// (if given a pre-existing moment for example)\r\n\tif (mom.hasTime()) { // don't give ambiguously-timed moments a UTC zone\r\n\t\tmom.utc();\r\n\t}\r\n\r\n\treturn mom;\r\n};\r\n\r\n// Same as FC.moment, but when given an ISO8601 string, the timezone offset is preserved.\r\n// ISO8601 strings with no timezone offset will become ambiguously zoned.\r\nFC.moment.parseZone = function() {\r\n\treturn makeMoment(arguments, true, true);\r\n};\r\n\r\n// Builds an enhanced moment from args. When given an existing moment, it clones. When given a\r\n// native Date, or called with no arguments (the current time), the resulting moment will be local.\r\n// Anything else needs to be \"parsed\" (a string or an array), and will be affected by:\r\n//    parseAsUTC - if there is no zone information, should we parse the input in UTC?\r\n//    parseZone - if there is zone information, should we force the zone of the moment?\r\nfunction makeMoment(args, parseAsUTC, parseZone) {\r\n\tvar input = args[0];\r\n\tvar isSingleString = args.length == 1 && typeof input === 'string';\r\n\tvar isAmbigTime;\r\n\tvar isAmbigZone;\r\n\tvar ambigMatch;\r\n\tvar mom;\r\n\r\n\tif (moment.isMoment(input)) {\r\n\t\tmom = moment.apply(null, args); // clone it\r\n\t\ttransferAmbigs(input, mom); // the ambig flags weren't transfered with the clone\r\n\t}\r\n\telse if (isNativeDate(input) || input === undefined) {\r\n\t\tmom = moment.apply(null, args); // will be local\r\n\t}\r\n\telse { // \"parsing\" is required\r\n\t\tisAmbigTime = false;\r\n\t\tisAmbigZone = false;\r\n\r\n\t\tif (isSingleString) {\r\n\t\t\tif (ambigDateOfMonthRegex.test(input)) {\r\n\t\t\t\t// accept strings like '2014-05', but convert to the first of the month\r\n\t\t\t\tinput += '-01';\r\n\t\t\t\targs = [ input ]; // for when we pass it on to moment's constructor\r\n\t\t\t\tisAmbigTime = true;\r\n\t\t\t\tisAmbigZone = true;\r\n\t\t\t}\r\n\t\t\telse if ((ambigMatch = ambigTimeOrZoneRegex.exec(input))) {\r\n\t\t\t\tisAmbigTime = !ambigMatch[5]; // no time part?\r\n\t\t\t\tisAmbigZone = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($.isArray(input)) {\r\n\t\t\t// arrays have no timezone information, so assume ambiguous zone\r\n\t\t\tisAmbigZone = true;\r\n\t\t}\r\n\t\t// otherwise, probably a string with a format\r\n\r\n\t\tif (parseAsUTC || isAmbigTime) {\r\n\t\t\tmom = moment.utc.apply(moment, args);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmom = moment.apply(null, args);\r\n\t\t}\r\n\r\n\t\tif (isAmbigTime) {\r\n\t\t\tmom._ambigTime = true;\r\n\t\t\tmom._ambigZone = true; // ambiguous time always means ambiguous zone\r\n\t\t}\r\n\t\telse if (parseZone) { // let's record the inputted zone somehow\r\n\t\t\tif (isAmbigZone) {\r\n\t\t\t\tmom._ambigZone = true;\r\n\t\t\t}\r\n\t\t\telse if (isSingleString) {\r\n\t\t\t\tif (mom.utcOffset) {\r\n\t\t\t\t\tmom.utcOffset(input); // if not a valid zone, will assign UTC\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmom.zone(input); // for moment-pre-2.9\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tmom._fullCalendar = true; // flag for extended functionality\r\n\r\n\treturn mom;\r\n}\r\n\r\n\r\n// A clone method that works with the flags related to our enhanced functionality.\r\n// In the future, use moment.momentProperties\r\nnewMomentProto.clone = function() {\r\n\tvar mom = oldMomentProto.clone.apply(this, arguments);\r\n\r\n\t// these flags weren't transfered with the clone\r\n\ttransferAmbigs(this, mom);\r\n\tif (this._fullCalendar) {\r\n\t\tmom._fullCalendar = true;\r\n\t}\r\n\r\n\treturn mom;\r\n};\r\n\r\n\r\n// Week Number\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n\r\n// Returns the week number, considering the locale's custom week number calcuation\r\n// `weeks` is an alias for `week`\r\nnewMomentProto.week = newMomentProto.weeks = function(input) {\r\n\tvar weekCalc = (this._locale || this._lang) // works pre-moment-2.8\r\n\t\t._fullCalendar_weekCalc;\r\n\r\n\tif (input == null && typeof weekCalc === 'function') { // custom function only works for getter\r\n\t\treturn weekCalc(this);\r\n\t}\r\n\telse if (weekCalc === 'ISO') {\r\n\t\treturn oldMomentProto.isoWeek.apply(this, arguments); // ISO getter/setter\r\n\t}\r\n\r\n\treturn oldMomentProto.week.apply(this, arguments); // local getter/setter\r\n};\r\n\r\n\r\n// Time-of-day\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n// GETTER\r\n// Returns a Duration with the hours/minutes/seconds/ms values of the moment.\r\n// If the moment has an ambiguous time, a duration of 00:00 will be returned.\r\n//\r\n// SETTER\r\n// You can supply a Duration, a Moment, or a Duration-like argument.\r\n// When setting the time, and the moment has an ambiguous time, it then becomes unambiguous.\r\nnewMomentProto.time = function(time) {\r\n\r\n\t// Fallback to the original method (if there is one) if this moment wasn't created via FullCalendar.\r\n\t// `time` is a generic enough method name where this precaution is necessary to avoid collisions w/ other plugins.\r\n\tif (!this._fullCalendar) {\r\n\t\treturn oldMomentProto.time.apply(this, arguments);\r\n\t}\r\n\r\n\tif (time == null) { // getter\r\n\t\treturn moment.duration({\r\n\t\t\thours: this.hours(),\r\n\t\t\tminutes: this.minutes(),\r\n\t\t\tseconds: this.seconds(),\r\n\t\t\tmilliseconds: this.milliseconds()\r\n\t\t});\r\n\t}\r\n\telse { // setter\r\n\r\n\t\tthis._ambigTime = false; // mark that the moment now has a time\r\n\r\n\t\tif (!moment.isDuration(time) && !moment.isMoment(time)) {\r\n\t\t\ttime = moment.duration(time);\r\n\t\t}\r\n\r\n\t\t// The day value should cause overflow (so 24 hours becomes 00:00:00 of next day).\r\n\t\t// Only for Duration times, not Moment times.\r\n\t\tvar dayHours = 0;\r\n\t\tif (moment.isDuration(time)) {\r\n\t\t\tdayHours = Math.floor(time.asDays()) * 24;\r\n\t\t}\r\n\r\n\t\t// We need to set the individual fields.\r\n\t\t// Can't use startOf('day') then add duration. In case of DST at start of day.\r\n\t\treturn this.hours(dayHours + time.hours())\r\n\t\t\t.minutes(time.minutes())\r\n\t\t\t.seconds(time.seconds())\r\n\t\t\t.milliseconds(time.milliseconds());\r\n\t}\r\n};\r\n\r\n// Converts the moment to UTC, stripping out its time-of-day and timezone offset,\r\n// but preserving its YMD. A moment with a stripped time will display no time\r\n// nor timezone offset when .format() is called.\r\nnewMomentProto.stripTime = function() {\r\n\tvar a;\r\n\r\n\tif (!this._ambigTime) {\r\n\r\n\t\t// get the values before any conversion happens\r\n\t\ta = this.toArray(); // array of y/m/d/h/m/s/ms\r\n\r\n\t\t// TODO: use keepLocalTime in the future\r\n\t\tthis.utc(); // set the internal UTC flag (will clear the ambig flags)\r\n\t\tsetUTCValues(this, a.slice(0, 3)); // set the year/month/date. time will be zero\r\n\r\n\t\t// Mark the time as ambiguous. This needs to happen after the .utc() call, which might call .utcOffset(),\r\n\t\t// which clears all ambig flags. Same with setUTCValues with moment-timezone.\r\n\t\tthis._ambigTime = true;\r\n\t\tthis._ambigZone = true; // if ambiguous time, also ambiguous timezone offset\r\n\t}\r\n\r\n\treturn this; // for chaining\r\n};\r\n\r\n// Returns if the moment has a non-ambiguous time (boolean)\r\nnewMomentProto.hasTime = function() {\r\n\treturn !this._ambigTime;\r\n};\r\n\r\n\r\n// Timezone\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n// Converts the moment to UTC, stripping out its timezone offset, but preserving its\r\n// YMD and time-of-day. A moment with a stripped timezone offset will display no\r\n// timezone offset when .format() is called.\r\n// TODO: look into Moment's keepLocalTime functionality\r\nnewMomentProto.stripZone = function() {\r\n\tvar a, wasAmbigTime;\r\n\r\n\tif (!this._ambigZone) {\r\n\r\n\t\t// get the values before any conversion happens\r\n\t\ta = this.toArray(); // array of y/m/d/h/m/s/ms\r\n\t\twasAmbigTime = this._ambigTime;\r\n\r\n\t\tthis.utc(); // set the internal UTC flag (might clear the ambig flags, depending on Moment internals)\r\n\t\tsetUTCValues(this, a); // will set the year/month/date/hours/minutes/seconds/ms\r\n\r\n\t\t// the above call to .utc()/.utcOffset() unfortunately might clear the ambig flags, so restore\r\n\t\tthis._ambigTime = wasAmbigTime || false;\r\n\r\n\t\t// Mark the zone as ambiguous. This needs to happen after the .utc() call, which might call .utcOffset(),\r\n\t\t// which clears the ambig flags. Same with setUTCValues with moment-timezone.\r\n\t\tthis._ambigZone = true;\r\n\t}\r\n\r\n\treturn this; // for chaining\r\n};\r\n\r\n// Returns of the moment has a non-ambiguous timezone offset (boolean)\r\nnewMomentProto.hasZone = function() {\r\n\treturn !this._ambigZone;\r\n};\r\n\r\n\r\n// this method implicitly marks a zone\r\nnewMomentProto.local = function() {\r\n\tvar a = this.toArray(); // year,month,date,hours,minutes,seconds,ms as an array\r\n\tvar wasAmbigZone = this._ambigZone;\r\n\r\n\toldMomentProto.local.apply(this, arguments);\r\n\r\n\t// ensure non-ambiguous\r\n\t// this probably already happened via local() -> utcOffset(), but don't rely on Moment's internals\r\n\tthis._ambigTime = false;\r\n\tthis._ambigZone = false;\r\n\r\n\tif (wasAmbigZone) {\r\n\t\t// If the moment was ambiguously zoned, the date fields were stored as UTC.\r\n\t\t// We want to preserve these, but in local time.\r\n\t\t// TODO: look into Moment's keepLocalTime functionality\r\n\t\tsetLocalValues(this, a);\r\n\t}\r\n\r\n\treturn this; // for chaining\r\n};\r\n\r\n\r\n// implicitly marks a zone\r\nnewMomentProto.utc = function() {\r\n\toldMomentProto.utc.apply(this, arguments);\r\n\r\n\t// ensure non-ambiguous\r\n\t// this probably already happened via utc() -> utcOffset(), but don't rely on Moment's internals\r\n\tthis._ambigTime = false;\r\n\tthis._ambigZone = false;\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n// methods for arbitrarily manipulating timezone offset.\r\n// should clear time/zone ambiguity when called.\r\n$.each([\r\n\t'zone', // only in moment-pre-2.9. deprecated afterwards\r\n\t'utcOffset'\r\n], function(i, name) {\r\n\tif (oldMomentProto[name]) { // original method exists?\r\n\r\n\t\t// this method implicitly marks a zone (will probably get called upon .utc() and .local())\r\n\t\tnewMomentProto[name] = function(tzo) {\r\n\r\n\t\t\tif (tzo != null) { // setter\r\n\t\t\t\t// these assignments needs to happen before the original zone method is called.\r\n\t\t\t\t// I forget why, something to do with a browser crash.\r\n\t\t\t\tthis._ambigTime = false;\r\n\t\t\t\tthis._ambigZone = false;\r\n\t\t\t}\r\n\r\n\t\t\treturn oldMomentProto[name].apply(this, arguments);\r\n\t\t};\r\n\t}\r\n});\r\n\r\n\r\n// Formatting\r\n// -------------------------------------------------------------------------------------------------\r\n\r\nnewMomentProto.format = function() {\r\n\tif (this._fullCalendar && arguments[0]) { // an enhanced moment? and a format string provided?\r\n\t\treturn formatDate(this, arguments[0]); // our extended formatting\r\n\t}\r\n\tif (this._ambigTime) {\r\n\t\treturn oldMomentFormat(this, 'YYYY-MM-DD');\r\n\t}\r\n\tif (this._ambigZone) {\r\n\t\treturn oldMomentFormat(this, 'YYYY-MM-DD[T]HH:mm:ss');\r\n\t}\r\n\treturn oldMomentProto.format.apply(this, arguments);\r\n};\r\n\r\nnewMomentProto.toISOString = function() {\r\n\tif (this._ambigTime) {\r\n\t\treturn oldMomentFormat(this, 'YYYY-MM-DD');\r\n\t}\r\n\tif (this._ambigZone) {\r\n\t\treturn oldMomentFormat(this, 'YYYY-MM-DD[T]HH:mm:ss');\r\n\t}\r\n\treturn oldMomentProto.toISOString.apply(this, arguments);\r\n};\r\n\r\n\r\n// Querying\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n// Is the moment within the specified range? `end` is exclusive.\r\n// FYI, this method is not a standard Moment method, so always do our enhanced logic.\r\nnewMomentProto.isWithin = function(start, end) {\r\n\tvar a = commonlyAmbiguate([ this, start, end ]);\r\n\treturn a[0] >= a[1] && a[0] < a[2];\r\n};\r\n\r\n// When isSame is called with units, timezone ambiguity is normalized before the comparison happens.\r\n// If no units specified, the two moments must be identically the same, with matching ambig flags.\r\nnewMomentProto.isSame = function(input, units) {\r\n\tvar a;\r\n\r\n\t// only do custom logic if this is an enhanced moment\r\n\tif (!this._fullCalendar) {\r\n\t\treturn oldMomentProto.isSame.apply(this, arguments);\r\n\t}\r\n\r\n\tif (units) {\r\n\t\ta = commonlyAmbiguate([ this, input ], true); // normalize timezones but don't erase times\r\n\t\treturn oldMomentProto.isSame.call(a[0], a[1], units);\r\n\t}\r\n\telse {\r\n\t\tinput = FC.moment.parseZone(input); // normalize input\r\n\t\treturn oldMomentProto.isSame.call(this, input) &&\r\n\t\t\tBoolean(this._ambigTime) === Boolean(input._ambigTime) &&\r\n\t\t\tBoolean(this._ambigZone) === Boolean(input._ambigZone);\r\n\t}\r\n};\r\n\r\n// Make these query methods work with ambiguous moments\r\n$.each([\r\n\t'isBefore',\r\n\t'isAfter'\r\n], function(i, methodName) {\r\n\tnewMomentProto[methodName] = function(input, units) {\r\n\t\tvar a;\r\n\r\n\t\t// only do custom logic if this is an enhanced moment\r\n\t\tif (!this._fullCalendar) {\r\n\t\t\treturn oldMomentProto[methodName].apply(this, arguments);\r\n\t\t}\r\n\r\n\t\ta = commonlyAmbiguate([ this, input ]);\r\n\t\treturn oldMomentProto[methodName].call(a[0], a[1], units);\r\n\t};\r\n});\r\n\r\n\r\n// Misc Internals\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n// given an array of moment-like inputs, return a parallel array w/ moments similarly ambiguated.\r\n// for example, of one moment has ambig time, but not others, all moments will have their time stripped.\r\n// set `preserveTime` to `true` to keep times, but only normalize zone ambiguity.\r\n// returns the original moments if no modifications are necessary.\r\nfunction commonlyAmbiguate(inputs, preserveTime) {\r\n\tvar anyAmbigTime = false;\r\n\tvar anyAmbigZone = false;\r\n\tvar len = inputs.length;\r\n\tvar moms = [];\r\n\tvar i, mom;\r\n\r\n\t// parse inputs into real moments and query their ambig flags\r\n\tfor (i = 0; i < len; i++) {\r\n\t\tmom = inputs[i];\r\n\t\tif (!moment.isMoment(mom)) {\r\n\t\t\tmom = FC.moment.parseZone(mom);\r\n\t\t}\r\n\t\tanyAmbigTime = anyAmbigTime || mom._ambigTime;\r\n\t\tanyAmbigZone = anyAmbigZone || mom._ambigZone;\r\n\t\tmoms.push(mom);\r\n\t}\r\n\r\n\t// strip each moment down to lowest common ambiguity\r\n\t// use clones to avoid modifying the original moments\r\n\tfor (i = 0; i < len; i++) {\r\n\t\tmom = moms[i];\r\n\t\tif (!preserveTime && anyAmbigTime && !mom._ambigTime) {\r\n\t\t\tmoms[i] = mom.clone().stripTime();\r\n\t\t}\r\n\t\telse if (anyAmbigZone && !mom._ambigZone) {\r\n\t\t\tmoms[i] = mom.clone().stripZone();\r\n\t\t}\r\n\t}\r\n\r\n\treturn moms;\r\n}\r\n\r\n// Transfers all the flags related to ambiguous time/zone from the `src` moment to the `dest` moment\r\n// TODO: look into moment.momentProperties for this.\r\nfunction transferAmbigs(src, dest) {\r\n\tif (src._ambigTime) {\r\n\t\tdest._ambigTime = true;\r\n\t}\r\n\telse if (dest._ambigTime) {\r\n\t\tdest._ambigTime = false;\r\n\t}\r\n\r\n\tif (src._ambigZone) {\r\n\t\tdest._ambigZone = true;\r\n\t}\r\n\telse if (dest._ambigZone) {\r\n\t\tdest._ambigZone = false;\r\n\t}\r\n}\r\n\r\n\r\n// Sets the year/month/date/etc values of the moment from the given array.\r\n// Inefficient because it calls each individual setter.\r\nfunction setMomentValues(mom, a) {\r\n\tmom.year(a[0] || 0)\r\n\t\t.month(a[1] || 0)\r\n\t\t.date(a[2] || 0)\r\n\t\t.hours(a[3] || 0)\r\n\t\t.minutes(a[4] || 0)\r\n\t\t.seconds(a[5] || 0)\r\n\t\t.milliseconds(a[6] || 0);\r\n}\r\n\r\n// Can we set the moment's internal date directly?\r\nallowValueOptimization = '_d' in moment() && 'updateOffset' in moment;\r\n\r\n// Utility function. Accepts a moment and an array of the UTC year/month/date/etc values to set.\r\n// Assumes the given moment is already in UTC mode.\r\nsetUTCValues = allowValueOptimization ? function(mom, a) {\r\n\t// simlate what moment's accessors do\r\n\tmom._d.setTime(Date.UTC.apply(Date, a));\r\n\tmoment.updateOffset(mom, false); // keepTime=false\r\n} : setMomentValues;\r\n\r\n// Utility function. Accepts a moment and an array of the local year/month/date/etc values to set.\r\n// Assumes the given moment is already in local mode.\r\nsetLocalValues = allowValueOptimization ? function(mom, a) {\r\n\t// simlate what moment's accessors do\r\n\tmom._d.setTime(+new Date( // FYI, there is now way to apply an array of args to a constructor\r\n\t\ta[0] || 0,\r\n\t\ta[1] || 0,\r\n\t\ta[2] || 0,\r\n\t\ta[3] || 0,\r\n\t\ta[4] || 0,\r\n\t\ta[5] || 0,\r\n\t\ta[6] || 0\r\n\t));\r\n\tmoment.updateOffset(mom, false); // keepTime=false\r\n} : setMomentValues;\r\n\r\n;;\r\n\r\n// Single Date Formatting\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n\r\n// call this if you want Moment's original format method to be used\r\nfunction oldMomentFormat(mom, formatStr) {\r\n\treturn oldMomentProto.format.call(mom, formatStr); // oldMomentProto defined in moment-ext.js\r\n}\r\n\r\n\r\n// Formats `date` with a Moment formatting string, but allow our non-zero areas and\r\n// additional token.\r\nfunction formatDate(date, formatStr) {\r\n\treturn formatDateWithChunks(date, getFormatStringChunks(formatStr));\r\n}\r\n\r\n\r\nfunction formatDateWithChunks(date, chunks) {\r\n\tvar s = '';\r\n\tvar i;\r\n\r\n\tfor (i=0; i<chunks.length; i++) {\r\n\t\ts += formatDateWithChunk(date, chunks[i]);\r\n\t}\r\n\r\n\treturn s;\r\n}\r\n\r\n\r\n// addition formatting tokens we want recognized\r\nvar tokenOverrides = {\r\n\tt: function(date) { // \"a\" or \"p\"\r\n\t\treturn oldMomentFormat(date, 'a').charAt(0);\r\n\t},\r\n\tT: function(date) { // \"A\" or \"P\"\r\n\t\treturn oldMomentFormat(date, 'A').charAt(0);\r\n\t}\r\n};\r\n\r\n\r\nfunction formatDateWithChunk(date, chunk) {\r\n\tvar token;\r\n\tvar maybeStr;\r\n\r\n\tif (typeof chunk === 'string') { // a literal string\r\n\t\treturn chunk;\r\n\t}\r\n\telse if ((token = chunk.token)) { // a token, like \"YYYY\"\r\n\t\tif (tokenOverrides[token]) {\r\n\t\t\treturn tokenOverrides[token](date); // use our custom token\r\n\t\t}\r\n\t\treturn oldMomentFormat(date, token);\r\n\t}\r\n\telse if (chunk.maybe) { // a grouping of other chunks that must be non-zero\r\n\t\tmaybeStr = formatDateWithChunks(date, chunk.maybe);\r\n\t\tif (maybeStr.match(/[1-9]/)) {\r\n\t\t\treturn maybeStr;\r\n\t\t}\r\n\t}\r\n\r\n\treturn '';\r\n}\r\n\r\n\r\n// Date Range Formatting\r\n// -------------------------------------------------------------------------------------------------\r\n// TODO: make it work with timezone offset\r\n\r\n// Using a formatting string meant for a single date, generate a range string, like\r\n// \"Sep 2 - 9 2013\", that intelligently inserts a separator where the dates differ.\r\n// If the dates are the same as far as the format string is concerned, just return a single\r\n// rendering of one date, without any separator.\r\nfunction formatRange(date1, date2, formatStr, separator, isRTL) {\r\n\tvar localeData;\r\n\r\n\tdate1 = FC.moment.parseZone(date1);\r\n\tdate2 = FC.moment.parseZone(date2);\r\n\r\n\tlocaleData = (date1.localeData || date1.lang).call(date1); // works with moment-pre-2.8\r\n\r\n\t// Expand localized format strings, like \"LL\" -> \"MMMM D YYYY\"\r\n\tformatStr = localeData.longDateFormat(formatStr) || formatStr;\r\n\t// BTW, this is not important for `formatDate` because it is impossible to put custom tokens\r\n\t// or non-zero areas in Moment's localized format strings.\r\n\r\n\tseparator = separator || ' - ';\r\n\r\n\treturn formatRangeWithChunks(\r\n\t\tdate1,\r\n\t\tdate2,\r\n\t\tgetFormatStringChunks(formatStr),\r\n\t\tseparator,\r\n\t\tisRTL\r\n\t);\r\n}\r\nFC.formatRange = formatRange; // expose\r\n\r\n\r\nfunction formatRangeWithChunks(date1, date2, chunks, separator, isRTL) {\r\n\tvar unzonedDate1 = date1.clone().stripZone(); // for formatSimilarChunk\r\n\tvar unzonedDate2 = date2.clone().stripZone(); // \"\r\n\tvar chunkStr; // the rendering of the chunk\r\n\tvar leftI;\r\n\tvar leftStr = '';\r\n\tvar rightI;\r\n\tvar rightStr = '';\r\n\tvar middleI;\r\n\tvar middleStr1 = '';\r\n\tvar middleStr2 = '';\r\n\tvar middleStr = '';\r\n\r\n\t// Start at the leftmost side of the formatting string and continue until you hit a token\r\n\t// that is not the same between dates.\r\n\tfor (leftI=0; leftI<chunks.length; leftI++) {\r\n\t\tchunkStr = formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2, chunks[leftI]);\r\n\t\tif (chunkStr === false) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tleftStr += chunkStr;\r\n\t}\r\n\r\n\t// Similarly, start at the rightmost side of the formatting string and move left\r\n\tfor (rightI=chunks.length-1; rightI>leftI; rightI--) {\r\n\t\tchunkStr = formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2,  chunks[rightI]);\r\n\t\tif (chunkStr === false) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\trightStr = chunkStr + rightStr;\r\n\t}\r\n\r\n\t// The area in the middle is different for both of the dates.\r\n\t// Collect them distinctly so we can jam them together later.\r\n\tfor (middleI=leftI; middleI<=rightI; middleI++) {\r\n\t\tmiddleStr1 += formatDateWithChunk(date1, chunks[middleI]);\r\n\t\tmiddleStr2 += formatDateWithChunk(date2, chunks[middleI]);\r\n\t}\r\n\r\n\tif (middleStr1 || middleStr2) {\r\n\t\tif (isRTL) {\r\n\t\t\tmiddleStr = middleStr2 + separator + middleStr1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmiddleStr = middleStr1 + separator + middleStr2;\r\n\t\t}\r\n\t}\r\n\r\n\treturn leftStr + middleStr + rightStr;\r\n}\r\n\r\n\r\nvar similarUnitMap = {\r\n\tY: 'year',\r\n\tM: 'month',\r\n\tD: 'day', // day of month\r\n\td: 'day', // day of week\r\n\t// prevents a separator between anything time-related...\r\n\tA: 'second', // AM/PM\r\n\ta: 'second', // am/pm\r\n\tT: 'second', // A/P\r\n\tt: 'second', // a/p\r\n\tH: 'second', // hour (24)\r\n\th: 'second', // hour (12)\r\n\tm: 'second', // minute\r\n\ts: 'second' // second\r\n};\r\n// TODO: week maybe?\r\n\r\n\r\n// Given a formatting chunk, and given that both dates are similar in the regard the\r\n// formatting chunk is concerned, format date1 against `chunk`. Otherwise, return `false`.\r\nfunction formatSimilarChunk(date1, date2, unzonedDate1, unzonedDate2, chunk) {\r\n\tvar token;\r\n\tvar unit;\r\n\r\n\tif (typeof chunk === 'string') { // a literal string\r\n\t\treturn chunk;\r\n\t}\r\n\telse if ((token = chunk.token)) {\r\n\t\tunit = similarUnitMap[token.charAt(0)];\r\n\r\n\t\t// are the dates the same for this unit of measurement?\r\n\t\t// use the unzoned dates for this calculation because unreliable when near DST (bug #2396)\r\n\t\tif (unit && unzonedDate1.isSame(unzonedDate2, unit)) {\r\n\t\t\treturn oldMomentFormat(date1, token); // would be the same if we used `date2`\r\n\t\t\t// BTW, don't support custom tokens\r\n\t\t}\r\n\t}\r\n\r\n\treturn false; // the chunk is NOT the same for the two dates\r\n\t// BTW, don't support splitting on non-zero areas\r\n}\r\n\r\n\r\n// Chunking Utils\r\n// -------------------------------------------------------------------------------------------------\r\n\r\n\r\nvar formatStringChunkCache = {};\r\n\r\n\r\nfunction getFormatStringChunks(formatStr) {\r\n\tif (formatStr in formatStringChunkCache) {\r\n\t\treturn formatStringChunkCache[formatStr];\r\n\t}\r\n\treturn (formatStringChunkCache[formatStr] = chunkFormatString(formatStr));\r\n}\r\n\r\n\r\n// Break the formatting string into an array of chunks\r\nfunction chunkFormatString(formatStr) {\r\n\tvar chunks = [];\r\n\tvar chunker = /\\[([^\\]]*)\\]|\\(([^\\)]*)\\)|(LTS|LT|(\\w)\\4*o?)|([^\\w\\[\\(]+)/g; // TODO: more descrimination\r\n\tvar match;\r\n\r\n\twhile ((match = chunker.exec(formatStr))) {\r\n\t\tif (match[1]) { // a literal string inside [ ... ]\r\n\t\t\tchunks.push(match[1]);\r\n\t\t}\r\n\t\telse if (match[2]) { // non-zero formatting inside ( ... )\r\n\t\t\tchunks.push({ maybe: chunkFormatString(match[2]) });\r\n\t\t}\r\n\t\telse if (match[3]) { // a formatting token\r\n\t\t\tchunks.push({ token: match[3] });\r\n\t\t}\r\n\t\telse if (match[5]) { // an unenclosed literal string\r\n\t\t\tchunks.push(match[5]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn chunks;\r\n}\r\n\r\n;;\r\n\r\nFC.Class = Class; // export\r\n\r\n// Class that all other classes will inherit from\r\nfunction Class() { }\r\n\r\n\r\n// Called on a class to create a subclass.\r\n// Last argument contains instance methods. Any argument before the last are considered mixins.\r\nClass.extend = function() {\r\n\tvar len = arguments.length;\r\n\tvar i;\r\n\tvar members;\r\n\r\n\tfor (i = 0; i < len; i++) {\r\n\t\tmembers = arguments[i];\r\n\t\tif (i < len - 1) { // not the last argument?\r\n\t\t\tmixIntoClass(this, members);\r\n\t\t}\r\n\t}\r\n\r\n\treturn extendClass(this, members || {}); // members will be undefined if no arguments\r\n};\r\n\r\n\r\n// Adds new member variables/methods to the class's prototype.\r\n// Can be called with another class, or a plain object hash containing new members.\r\nClass.mixin = function(members) {\r\n\tmixIntoClass(this, members);\r\n};\r\n\r\n\r\nfunction extendClass(superClass, members) {\r\n\tvar subClass;\r\n\r\n\t// ensure a constructor for the subclass, forwarding all arguments to the super-constructor if it doesn't exist\r\n\tif (hasOwnProp(members, 'constructor')) {\r\n\t\tsubClass = members.constructor;\r\n\t}\r\n\tif (typeof subClass !== 'function') {\r\n\t\tsubClass = members.constructor = function() {\r\n\t\t\tsuperClass.apply(this, arguments);\r\n\t\t};\r\n\t}\r\n\r\n\t// build the base prototype for the subclass, which is an new object chained to the superclass's prototype\r\n\tsubClass.prototype = createObject(superClass.prototype);\r\n\r\n\t// copy each member variable/method onto the the subclass's prototype\r\n\tcopyOwnProps(members, subClass.prototype);\r\n\tcopyNativeMethods(members, subClass.prototype); // hack for IE8\r\n\r\n\t// copy over all class variables/methods to the subclass, such as `extend` and `mixin`\r\n\tcopyOwnProps(superClass, subClass);\r\n\r\n\treturn subClass;\r\n}\r\n\r\n\r\nfunction mixIntoClass(theClass, members) {\r\n\tcopyOwnProps(members.prototype || members, theClass.prototype); // TODO: copyNativeMethods?\r\n}\r\n;;\r\n\r\nvar Emitter = FC.Emitter = Class.extend({\r\n\r\n\tcallbackHash: null,\r\n\r\n\r\n\ton: function(name, callback) {\r\n\t\tthis.getCallbacks(name).add(callback);\r\n\t\treturn this; // for chaining\r\n\t},\r\n\r\n\r\n\toff: function(name, callback) {\r\n\t\tthis.getCallbacks(name).remove(callback);\r\n\t\treturn this; // for chaining\r\n\t},\r\n\r\n\r\n\ttrigger: function(name) { // args...\r\n\t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\r\n\t\tthis.triggerWith(name, this, args);\r\n\r\n\t\treturn this; // for chaining\r\n\t},\r\n\r\n\r\n\ttriggerWith: function(name, context, args) {\r\n\t\tvar callbacks = this.getCallbacks(name);\r\n\r\n\t\tcallbacks.fireWith(context, args);\r\n\r\n\t\treturn this; // for chaining\r\n\t},\r\n\r\n\r\n\tgetCallbacks: function(name) {\r\n\t\tvar callbacks;\r\n\r\n\t\tif (!this.callbackHash) {\r\n\t\t\tthis.callbackHash = {};\r\n\t\t}\r\n\r\n\t\tcallbacks = this.callbackHash[name];\r\n\t\tif (!callbacks) {\r\n\t\t\tcallbacks = this.callbackHash[name] = $.Callbacks();\r\n\t\t}\r\n\r\n\t\treturn callbacks;\r\n\t}\r\n\r\n});\r\n;;\r\n\r\n/* A rectangular panel that is absolutely positioned over other content\r\n------------------------------------------------------------------------------------------------------------------------\r\nOptions:\r\n\t- className (string)\r\n\t- content (HTML string or jQuery element set)\r\n\t- parentEl\r\n\t- top\r\n\t- left\r\n\t- right (the x coord of where the right edge should be. not a \"CSS\" right)\r\n\t- autoHide (boolean)\r\n\t- show (callback)\r\n\t- hide (callback)\r\n*/\r\n\r\nvar Popover = Class.extend({\r\n\r\n\tisHidden: true,\r\n\toptions: null,\r\n\tel: null, // the container element for the popover. generated by this object\r\n\tdocumentMousedownProxy: null, // document mousedown handler bound to `this`\r\n\tmargin: 10, // the space required between the popover and the edges of the scroll container\r\n\r\n\r\n\tconstructor: function(options) {\r\n\t\tthis.options = options || {};\r\n\t},\r\n\r\n\r\n\t// Shows the popover on the specified position. Renders it if not already\r\n\tshow: function() {\r\n\t\tif (this.isHidden) {\r\n\t\t\tif (!this.el) {\r\n\t\t\t\tthis.render();\r\n\t\t\t}\r\n\t\t\tthis.el.show();\r\n\t\t\tthis.position();\r\n\t\t\tthis.isHidden = false;\r\n\t\t\tthis.trigger('show');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Hides the popover, through CSS, but does not remove it from the DOM\r\n\thide: function() {\r\n\t\tif (!this.isHidden) {\r\n\t\t\tthis.el.hide();\r\n\t\t\tthis.isHidden = true;\r\n\t\t\tthis.trigger('hide');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Creates `this.el` and renders content inside of it\r\n\trender: function() {\r\n\t\tvar _this = this;\r\n\t\tvar options = this.options;\r\n\r\n\t\tthis.el = $('<div class=\"fc-popover\"/>')\r\n\t\t\t.addClass(options.className || '')\r\n\t\t\t.css({\r\n\t\t\t\t// position initially to the top left to avoid creating scrollbars\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: 0\r\n\t\t\t})\r\n\t\t\t.append(options.content)\r\n\t\t\t.appendTo(options.parentEl);\r\n\r\n\t\t// when a click happens on anything inside with a 'fc-close' className, hide the popover\r\n\t\tthis.el.on('click', '.fc-close', function() {\r\n\t\t\t_this.hide();\r\n\t\t});\r\n\r\n\t\tif (options.autoHide) {\r\n\t\t\t$(document).on('mousedown', this.documentMousedownProxy = proxy(this, 'documentMousedown'));\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Triggered when the user clicks *anywhere* in the document, for the autoHide feature\r\n\tdocumentMousedown: function(ev) {\r\n\t\t// only hide the popover if the click happened outside the popover\r\n\t\tif (this.el && !$(ev.target).closest(this.el).length) {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Hides and unregisters any handlers\r\n\tremoveElement: function() {\r\n\t\tthis.hide();\r\n\r\n\t\tif (this.el) {\r\n\t\t\tthis.el.remove();\r\n\t\t\tthis.el = null;\r\n\t\t}\r\n\r\n\t\t$(document).off('mousedown', this.documentMousedownProxy);\r\n\t},\r\n\r\n\r\n\t// Positions the popover optimally, using the top/left/right options\r\n\tposition: function() {\r\n\t\tvar options = this.options;\r\n\t\tvar origin = this.el.offsetParent().offset();\r\n\t\tvar width = this.el.outerWidth();\r\n\t\tvar height = this.el.outerHeight();\r\n\t\tvar windowEl = $(window);\r\n\t\tvar viewportEl = getScrollParent(this.el);\r\n\t\tvar viewportTop;\r\n\t\tvar viewportLeft;\r\n\t\tvar viewportOffset;\r\n\t\tvar top; // the \"position\" (not \"offset\") values for the popover\r\n\t\tvar left; //\r\n\r\n\t\t// compute top and left\r\n\t\ttop = options.top || 0;\r\n\t\tif (options.left !== undefined) {\r\n\t\t\tleft = options.left;\r\n\t\t}\r\n\t\telse if (options.right !== undefined) {\r\n\t\t\tleft = options.right - width; // derive the left value from the right value\r\n\t\t}\r\n\t\telse {\r\n\t\t\tleft = 0;\r\n\t\t}\r\n\r\n\t\tif (viewportEl.is(window) || viewportEl.is(document)) { // normalize getScrollParent's result\r\n\t\t\tviewportEl = windowEl;\r\n\t\t\tviewportTop = 0; // the window is always at the top left\r\n\t\t\tviewportLeft = 0; // (and .offset() won't work if called here)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tviewportOffset = viewportEl.offset();\r\n\t\t\tviewportTop = viewportOffset.top;\r\n\t\t\tviewportLeft = viewportOffset.left;\r\n\t\t}\r\n\r\n\t\t// if the window is scrolled, it causes the visible area to be further down\r\n\t\tviewportTop += windowEl.scrollTop();\r\n\t\tviewportLeft += windowEl.scrollLeft();\r\n\r\n\t\t// constrain to the view port. if constrained by two edges, give precedence to top/left\r\n\t\tif (options.viewportConstrain !== false) {\r\n\t\t\ttop = Math.min(top, viewportTop + viewportEl.outerHeight() - height - this.margin);\r\n\t\t\ttop = Math.max(top, viewportTop + this.margin);\r\n\t\t\tleft = Math.min(left, viewportLeft + viewportEl.outerWidth() - width - this.margin);\r\n\t\t\tleft = Math.max(left, viewportLeft + this.margin);\r\n\t\t}\r\n\r\n\t\tthis.el.css({\r\n\t\t\ttop: top - origin.top,\r\n\t\t\tleft: left - origin.left\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t// Triggers a callback. Calls a function in the option hash of the same name.\r\n\t// Arguments beyond the first `name` are forwarded on.\r\n\t// TODO: better code reuse for this. Repeat code\r\n\ttrigger: function(name) {\r\n\t\tif (this.options[name]) {\r\n\t\t\tthis.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\n/*\r\nA cache for the left/right/top/bottom/width/height values for one or more elements.\r\nWorks with both offset (from topleft document) and position (from offsetParent).\r\n\r\noptions:\r\n- els\r\n- isHorizontal\r\n- isVertical\r\n*/\r\nvar CoordCache = FC.CoordCache = Class.extend({\r\n\r\n\tels: null, // jQuery set (assumed to be siblings)\r\n\tforcedOffsetParentEl: null, // options can override the natural offsetParent\r\n\torigin: null, // {left,top} position of offsetParent of els\r\n\tboundingRect: null, // constrain cordinates to this rectangle. {left,right,top,bottom} or null\r\n\tisHorizontal: false, // whether to query for left/right/width\r\n\tisVertical: false, // whether to query for top/bottom/height\r\n\r\n\t// arrays of coordinates (offsets from topleft of document)\r\n\tlefts: null,\r\n\trights: null,\r\n\ttops: null,\r\n\tbottoms: null,\r\n\r\n\r\n\tconstructor: function(options) {\r\n\t\tthis.els = $(options.els);\r\n\t\tthis.isHorizontal = options.isHorizontal;\r\n\t\tthis.isVertical = options.isVertical;\r\n\t\tthis.forcedOffsetParentEl = options.offsetParent ? $(options.offsetParent) : null;\r\n\t},\r\n\r\n\r\n\t// Queries the els for coordinates and stores them.\r\n\t// Call this method before using and of the get* methods below.\r\n\tbuild: function() {\r\n\t\tvar offsetParentEl = this.forcedOffsetParentEl || this.els.eq(0).offsetParent();\r\n\r\n\t\tthis.origin = offsetParentEl.offset();\r\n\t\tthis.boundingRect = this.queryBoundingRect();\r\n\r\n\t\tif (this.isHorizontal) {\r\n\t\t\tthis.buildElHorizontals();\r\n\t\t}\r\n\t\tif (this.isVertical) {\r\n\t\t\tthis.buildElVerticals();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Destroys all internal data about coordinates, freeing memory\r\n\tclear: function() {\r\n\t\tthis.origin = null;\r\n\t\tthis.boundingRect = null;\r\n\t\tthis.lefts = null;\r\n\t\tthis.rights = null;\r\n\t\tthis.tops = null;\r\n\t\tthis.bottoms = null;\r\n\t},\r\n\r\n\r\n\t// Compute and return what the elements' bounding rectangle is, from the user's perspective.\r\n\t// Right now, only returns a rectangle if constrained by an overflow:scroll element.\r\n\tqueryBoundingRect: function() {\r\n\t\tvar scrollParentEl = getScrollParent(this.els.eq(0));\r\n\r\n\t\tif (!scrollParentEl.is(document)) {\r\n\t\t\treturn getClientRect(scrollParentEl);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Populates the left/right internal coordinate arrays\r\n\tbuildElHorizontals: function() {\r\n\t\tvar lefts = [];\r\n\t\tvar rights = [];\r\n\r\n\t\tthis.els.each(function(i, node) {\r\n\t\t\tvar el = $(node);\r\n\t\t\tvar left = el.offset().left;\r\n\t\t\tvar width = el.outerWidth();\r\n\r\n\t\t\tlefts.push(left);\r\n\t\t\trights.push(left + width);\r\n\t\t});\r\n\r\n\t\tthis.lefts = lefts;\r\n\t\tthis.rights = rights;\r\n\t},\r\n\r\n\r\n\t// Populates the top/bottom internal coordinate arrays\r\n\tbuildElVerticals: function() {\r\n\t\tvar tops = [];\r\n\t\tvar bottoms = [];\r\n\r\n\t\tthis.els.each(function(i, node) {\r\n\t\t\tvar el = $(node);\r\n\t\t\tvar top = el.offset().top;\r\n\t\t\tvar height = el.outerHeight();\r\n\r\n\t\t\ttops.push(top);\r\n\t\t\tbottoms.push(top + height);\r\n\t\t});\r\n\r\n\t\tthis.tops = tops;\r\n\t\tthis.bottoms = bottoms;\r\n\t},\r\n\r\n\r\n\t// Given a left offset (from document left), returns the index of the el that it horizontally intersects.\r\n\t// If no intersection is made, or outside of the boundingRect, returns undefined.\r\n\tgetHorizontalIndex: function(leftOffset) {\r\n\t\tvar boundingRect = this.boundingRect;\r\n\t\tvar lefts = this.lefts;\r\n\t\tvar rights = this.rights;\r\n\t\tvar len = lefts.length;\r\n\t\tvar i;\r\n\r\n\t\tif (!boundingRect || (leftOffset >= boundingRect.left && leftOffset < boundingRect.right)) {\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tif (leftOffset >= lefts[i] && leftOffset < rights[i]) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Given a top offset (from document top), returns the index of the el that it vertically intersects.\r\n\t// If no intersection is made, or outside of the boundingRect, returns undefined.\r\n\tgetVerticalIndex: function(topOffset) {\r\n\t\tvar boundingRect = this.boundingRect;\r\n\t\tvar tops = this.tops;\r\n\t\tvar bottoms = this.bottoms;\r\n\t\tvar len = tops.length;\r\n\t\tvar i;\r\n\r\n\t\tif (!boundingRect || (topOffset >= boundingRect.top && topOffset < boundingRect.bottom)) {\r\n\t\t\tfor (i = 0; i < len; i++) {\r\n\t\t\t\tif (topOffset >= tops[i] && topOffset < bottoms[i]) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Gets the left offset (from document left) of the element at the given index\r\n\tgetLeftOffset: function(leftIndex) {\r\n\t\treturn this.lefts[leftIndex];\r\n\t},\r\n\r\n\r\n\t// Gets the left position (from offsetParent left) of the element at the given index\r\n\tgetLeftPosition: function(leftIndex) {\r\n\t\treturn this.lefts[leftIndex] - this.origin.left;\r\n\t},\r\n\r\n\r\n\t// Gets the right offset (from document left) of the element at the given index.\r\n\t// This value is NOT relative to the document's right edge, like the CSS concept of \"right\" would be.\r\n\tgetRightOffset: function(leftIndex) {\r\n\t\treturn this.rights[leftIndex];\r\n\t},\r\n\r\n\r\n\t// Gets the right position (from offsetParent left) of the element at the given index.\r\n\t// This value is NOT relative to the offsetParent's right edge, like the CSS concept of \"right\" would be.\r\n\tgetRightPosition: function(leftIndex) {\r\n\t\treturn this.rights[leftIndex] - this.origin.left;\r\n\t},\r\n\r\n\r\n\t// Gets the width of the element at the given index\r\n\tgetWidth: function(leftIndex) {\r\n\t\treturn this.rights[leftIndex] - this.lefts[leftIndex];\r\n\t},\r\n\r\n\r\n\t// Gets the top offset (from document top) of the element at the given index\r\n\tgetTopOffset: function(topIndex) {\r\n\t\treturn this.tops[topIndex];\r\n\t},\r\n\r\n\r\n\t// Gets the top position (from offsetParent top) of the element at the given position\r\n\tgetTopPosition: function(topIndex) {\r\n\t\treturn this.tops[topIndex] - this.origin.top;\r\n\t},\r\n\r\n\t// Gets the bottom offset (from the document top) of the element at the given index.\r\n\t// This value is NOT relative to the offsetParent's bottom edge, like the CSS concept of \"bottom\" would be.\r\n\tgetBottomOffset: function(topIndex) {\r\n\t\treturn this.bottoms[topIndex];\r\n\t},\r\n\r\n\r\n\t// Gets the bottom position (from the offsetParent top) of the element at the given index.\r\n\t// This value is NOT relative to the offsetParent's bottom edge, like the CSS concept of \"bottom\" would be.\r\n\tgetBottomPosition: function(topIndex) {\r\n\t\treturn this.bottoms[topIndex] - this.origin.top;\r\n\t},\r\n\r\n\r\n\t// Gets the height of the element at the given index\r\n\tgetHeight: function(topIndex) {\r\n\t\treturn this.bottoms[topIndex] - this.tops[topIndex];\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\n/* Tracks a drag's mouse movement, firing various handlers\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n// TODO: use Emitter\r\n\r\nvar DragListener = FC.DragListener = Class.extend({\r\n\r\n\toptions: null,\r\n\r\n\tisListening: false,\r\n\tisDragging: false,\r\n\r\n\t// coordinates of the initial mousedown\r\n\toriginX: null,\r\n\toriginY: null,\r\n\r\n\t// handler attached to the document, bound to the DragListener's `this`\r\n\tmousemoveProxy: null,\r\n\tmouseupProxy: null,\r\n\r\n\t// for IE8 bug-fighting behavior, for now\r\n\tsubjectEl: null, // the element being draged. optional\r\n\tsubjectHref: null,\r\n\r\n\tscrollEl: null,\r\n\tscrollBounds: null, // { top, bottom, left, right }\r\n\tscrollTopVel: null, // pixels per second\r\n\tscrollLeftVel: null, // pixels per second\r\n\tscrollIntervalId: null, // ID of setTimeout for scrolling animation loop\r\n\tscrollHandlerProxy: null, // this-scoped function for handling when scrollEl is scrolled\r\n\r\n\tscrollSensitivity: 30, // pixels from edge for scrolling to start\r\n\tscrollSpeed: 200, // pixels per second, at maximum speed\r\n\tscrollIntervalMs: 50, // millisecond wait between scroll increment\r\n\r\n\r\n\tconstructor: function(options) {\r\n\t\toptions = options || {};\r\n\t\tthis.options = options;\r\n\t\tthis.subjectEl = options.subjectEl;\r\n\t},\r\n\r\n\r\n\t// Call this when the user does a mousedown. Will probably lead to startListening\r\n\tmousedown: function(ev) {\r\n\t\tif (isPrimaryMouseButton(ev)) {\r\n\r\n\t\t\tev.preventDefault(); // prevents native selection in most browsers\r\n\r\n\t\t\tthis.startListening(ev);\r\n\r\n\t\t\t// start the drag immediately if there is no minimum distance for a drag start\r\n\t\t\tif (!this.options.distance) {\r\n\t\t\t\tthis.startDrag(ev);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Call this to start tracking mouse movements\r\n\tstartListening: function(ev) {\r\n\t\tvar scrollParent;\r\n\r\n\t\tif (!this.isListening) {\r\n\r\n\t\t\t// grab scroll container and attach handler\r\n\t\t\tif (ev && this.options.scroll) {\r\n\t\t\t\tscrollParent = getScrollParent($(ev.target));\r\n\t\t\t\tif (!scrollParent.is(window) && !scrollParent.is(document)) {\r\n\t\t\t\t\tthis.scrollEl = scrollParent;\r\n\r\n\t\t\t\t\t// scope to `this`, and use `debounce` to make sure rapid calls don't happen\r\n\t\t\t\t\tthis.scrollHandlerProxy = debounce(proxy(this, 'scrollHandler'), 100);\r\n\t\t\t\t\tthis.scrollEl.on('scroll', this.scrollHandlerProxy);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$(document)\r\n\t\t\t\t.on('mousemove', this.mousemoveProxy = proxy(this, 'mousemove'))\r\n\t\t\t\t.on('mouseup', this.mouseupProxy = proxy(this, 'mouseup'))\r\n\t\t\t\t.on('selectstart', this.preventDefault); // prevents native selection in IE<=8\r\n\r\n\t\t\tif (ev) {\r\n\t\t\t\tthis.originX = ev.pageX;\r\n\t\t\t\tthis.originY = ev.pageY;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// if no starting information was given, origin will be the topleft corner of the screen.\r\n\t\t\t\t// if so, dx/dy in the future will be the absolute coordinates.\r\n\t\t\t\tthis.originX = 0;\r\n\t\t\t\tthis.originY = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.isListening = true;\r\n\t\t\tthis.listenStart(ev);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when drag listening has started (but a real drag has not necessarily began)\r\n\tlistenStart: function(ev) {\r\n\t\tthis.trigger('listenStart', ev);\r\n\t},\r\n\r\n\r\n\t// Called when the user moves the mouse\r\n\tmousemove: function(ev) {\r\n\t\tvar dx = ev.pageX - this.originX;\r\n\t\tvar dy = ev.pageY - this.originY;\r\n\t\tvar minDistance;\r\n\t\tvar distanceSq; // current distance from the origin, squared\r\n\r\n\t\tif (!this.isDragging) { // if not already dragging...\r\n\t\t\t// then start the drag if the minimum distance criteria is met\r\n\t\t\tminDistance = this.options.distance || 1;\r\n\t\t\tdistanceSq = dx * dx + dy * dy;\r\n\t\t\tif (distanceSq >= minDistance * minDistance) { // use pythagorean theorem\r\n\t\t\t\tthis.startDrag(ev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis.drag(dx, dy, ev); // report a drag, even if this mousemove initiated the drag\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Call this to initiate a legitimate drag.\r\n\t// This function is called internally from this class, but can also be called explicitly from outside\r\n\tstartDrag: function(ev) {\r\n\r\n\t\tif (!this.isListening) { // startDrag must have manually initiated\r\n\t\t\tthis.startListening();\r\n\t\t}\r\n\r\n\t\tif (!this.isDragging) {\r\n\t\t\tthis.isDragging = true;\r\n\t\t\tthis.dragStart(ev);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when the actual drag has started (went beyond minDistance)\r\n\tdragStart: function(ev) {\r\n\t\tvar subjectEl = this.subjectEl;\r\n\r\n\t\tthis.trigger('dragStart', ev);\r\n\r\n\t\t// remove a mousedown'd <a>'s href so it is not visited (IE8 bug)\r\n\t\tif ((this.subjectHref = subjectEl ? subjectEl.attr('href') : null)) {\r\n\t\t\tsubjectEl.removeAttr('href');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called while the mouse is being moved and when we know a legitimate drag is taking place\r\n\tdrag: function(dx, dy, ev) {\r\n\t\tthis.trigger('drag', dx, dy, ev);\r\n\t\tthis.updateScroll(ev); // will possibly cause scrolling\r\n\t},\r\n\r\n\r\n\t// Called when the user does a mouseup\r\n\tmouseup: function(ev) {\r\n\t\tthis.stopListening(ev);\r\n\t},\r\n\r\n\r\n\t// Called when the drag is over. Will not cause listening to stop however.\r\n\t// A concluding 'cellOut' event will NOT be triggered.\r\n\tstopDrag: function(ev) {\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis.stopScrolling();\r\n\t\t\tthis.dragStop(ev);\r\n\t\t\tthis.isDragging = false;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when dragging has been stopped\r\n\tdragStop: function(ev) {\r\n\t\tvar _this = this;\r\n\r\n\t\tthis.trigger('dragStop', ev);\r\n\r\n\t\t// restore a mousedown'd <a>'s href (for IE8 bug)\r\n\t\tsetTimeout(function() { // must be outside of the click's execution\r\n\t\t\tif (_this.subjectHref) {\r\n\t\t\t\t_this.subjectEl.attr('href', _this.subjectHref);\r\n\t\t\t}\r\n\t\t}, 0);\r\n\t},\r\n\r\n\r\n\t// Call this to stop listening to the user's mouse events\r\n\tstopListening: function(ev) {\r\n\t\tthis.stopDrag(ev); // if there's a current drag, kill it\r\n\r\n\t\tif (this.isListening) {\r\n\r\n\t\t\t// remove the scroll handler if there is a scrollEl\r\n\t\t\tif (this.scrollEl) {\r\n\t\t\t\tthis.scrollEl.off('scroll', this.scrollHandlerProxy);\r\n\t\t\t\tthis.scrollHandlerProxy = null;\r\n\t\t\t}\r\n\r\n\t\t\t$(document)\r\n\t\t\t\t.off('mousemove', this.mousemoveProxy)\r\n\t\t\t\t.off('mouseup', this.mouseupProxy)\r\n\t\t\t\t.off('selectstart', this.preventDefault);\r\n\r\n\t\t\tthis.mousemoveProxy = null;\r\n\t\t\tthis.mouseupProxy = null;\r\n\r\n\t\t\tthis.isListening = false;\r\n\t\t\tthis.listenStop(ev);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when drag listening has stopped\r\n\tlistenStop: function(ev) {\r\n\t\tthis.trigger('listenStop', ev);\r\n\t},\r\n\r\n\r\n\t// Triggers a callback. Calls a function in the option hash of the same name.\r\n\t// Arguments beyond the first `name` are forwarded on.\r\n\ttrigger: function(name) {\r\n\t\tif (this.options[name]) {\r\n\t\t\tthis.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Stops a given mouse event from doing it's native browser action. In our case, text selection.\r\n\tpreventDefault: function(ev) {\r\n\t\tev.preventDefault();\r\n\t},\r\n\r\n\r\n\t/* Scrolling\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Computes and stores the bounding rectangle of scrollEl\r\n\tcomputeScrollBounds: function() {\r\n\t\tvar el = this.scrollEl;\r\n\r\n\t\tthis.scrollBounds = el ? getOuterRect(el) : null;\r\n\t\t\t// TODO: use getClientRect in future. but prevents auto scrolling when on top of scrollbars\r\n\t},\r\n\r\n\r\n\t// Called when the dragging is in progress and scrolling should be updated\r\n\tupdateScroll: function(ev) {\r\n\t\tvar sensitivity = this.scrollSensitivity;\r\n\t\tvar bounds = this.scrollBounds;\r\n\t\tvar topCloseness, bottomCloseness;\r\n\t\tvar leftCloseness, rightCloseness;\r\n\t\tvar topVel = 0;\r\n\t\tvar leftVel = 0;\r\n\r\n\t\tif (bounds) { // only scroll if scrollEl exists\r\n\r\n\t\t\t// compute closeness to edges. valid range is from 0.0 - 1.0\r\n\t\t\ttopCloseness = (sensitivity - (ev.pageY - bounds.top)) / sensitivity;\r\n\t\t\tbottomCloseness = (sensitivity - (bounds.bottom - ev.pageY)) / sensitivity;\r\n\t\t\tleftCloseness = (sensitivity - (ev.pageX - bounds.left)) / sensitivity;\r\n\t\t\trightCloseness = (sensitivity - (bounds.right - ev.pageX)) / sensitivity;\r\n\r\n\t\t\t// translate vertical closeness into velocity.\r\n\t\t\t// mouse must be completely in bounds for velocity to happen.\r\n\t\t\tif (topCloseness >= 0 && topCloseness <= 1) {\r\n\t\t\t\ttopVel = topCloseness * this.scrollSpeed * -1; // negative. for scrolling up\r\n\t\t\t}\r\n\t\t\telse if (bottomCloseness >= 0 && bottomCloseness <= 1) {\r\n\t\t\t\ttopVel = bottomCloseness * this.scrollSpeed;\r\n\t\t\t}\r\n\r\n\t\t\t// translate horizontal closeness into velocity\r\n\t\t\tif (leftCloseness >= 0 && leftCloseness <= 1) {\r\n\t\t\t\tleftVel = leftCloseness * this.scrollSpeed * -1; // negative. for scrolling left\r\n\t\t\t}\r\n\t\t\telse if (rightCloseness >= 0 && rightCloseness <= 1) {\r\n\t\t\t\tleftVel = rightCloseness * this.scrollSpeed;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setScrollVel(topVel, leftVel);\r\n\t},\r\n\r\n\r\n\t// Sets the speed-of-scrolling for the scrollEl\r\n\tsetScrollVel: function(topVel, leftVel) {\r\n\r\n\t\tthis.scrollTopVel = topVel;\r\n\t\tthis.scrollLeftVel = leftVel;\r\n\r\n\t\tthis.constrainScrollVel(); // massages into realistic values\r\n\r\n\t\t// if there is non-zero velocity, and an animation loop hasn't already started, then START\r\n\t\tif ((this.scrollTopVel || this.scrollLeftVel) && !this.scrollIntervalId) {\r\n\t\t\tthis.scrollIntervalId = setInterval(\r\n\t\t\t\tproxy(this, 'scrollIntervalFunc'), // scope to `this`\r\n\t\t\t\tthis.scrollIntervalMs\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Forces scrollTopVel and scrollLeftVel to be zero if scrolling has already gone all the way\r\n\tconstrainScrollVel: function() {\r\n\t\tvar el = this.scrollEl;\r\n\r\n\t\tif (this.scrollTopVel < 0) { // scrolling up?\r\n\t\t\tif (el.scrollTop() <= 0) { // already scrolled all the way up?\r\n\t\t\t\tthis.scrollTopVel = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.scrollTopVel > 0) { // scrolling down?\r\n\t\t\tif (el.scrollTop() + el[0].clientHeight >= el[0].scrollHeight) { // already scrolled all the way down?\r\n\t\t\t\tthis.scrollTopVel = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.scrollLeftVel < 0) { // scrolling left?\r\n\t\t\tif (el.scrollLeft() <= 0) { // already scrolled all the left?\r\n\t\t\t\tthis.scrollLeftVel = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (this.scrollLeftVel > 0) { // scrolling right?\r\n\t\t\tif (el.scrollLeft() + el[0].clientWidth >= el[0].scrollWidth) { // already scrolled all the way right?\r\n\t\t\t\tthis.scrollLeftVel = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// This function gets called during every iteration of the scrolling animation loop\r\n\tscrollIntervalFunc: function() {\r\n\t\tvar el = this.scrollEl;\r\n\t\tvar frac = this.scrollIntervalMs / 1000; // considering animation frequency, what the vel should be mult'd by\r\n\r\n\t\t// change the value of scrollEl's scroll\r\n\t\tif (this.scrollTopVel) {\r\n\t\t\tel.scrollTop(el.scrollTop() + this.scrollTopVel * frac);\r\n\t\t}\r\n\t\tif (this.scrollLeftVel) {\r\n\t\t\tel.scrollLeft(el.scrollLeft() + this.scrollLeftVel * frac);\r\n\t\t}\r\n\r\n\t\tthis.constrainScrollVel(); // since the scroll values changed, recompute the velocities\r\n\r\n\t\t// if scrolled all the way, which causes the vels to be zero, stop the animation loop\r\n\t\tif (!this.scrollTopVel && !this.scrollLeftVel) {\r\n\t\t\tthis.stopScrolling();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Kills any existing scrolling animation loop\r\n\tstopScrolling: function() {\r\n\t\tif (this.scrollIntervalId) {\r\n\t\t\tclearInterval(this.scrollIntervalId);\r\n\t\t\tthis.scrollIntervalId = null;\r\n\r\n\t\t\t// when all done with scrolling, recompute positions since they probably changed\r\n\t\t\tthis.scrollStop();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Get called when the scrollEl is scrolled (NOTE: this is delayed via debounce)\r\n\tscrollHandler: function() {\r\n\t\t// recompute all coordinates, but *only* if this is *not* part of our scrolling animation\r\n\t\tif (!this.scrollIntervalId) {\r\n\t\t\tthis.scrollStop();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when scrolling has stopped, whether through auto scroll, or the user scrolling\r\n\tscrollStop: function() {\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\n/* Tracks mouse movements over a component and raises events about which hit the mouse is over.\r\n------------------------------------------------------------------------------------------------------------------------\r\noptions:\r\n- subjectEl\r\n- subjectCenter\r\n*/\r\n\r\nvar HitDragListener = DragListener.extend({\r\n\r\n\tcomponent: null, // converts coordinates to hits\r\n\t\t// methods: prepareHits, releaseHits, queryHit\r\n\r\n\torigHit: null, // the hit the mouse was over when listening started\r\n\thit: null, // the hit the mouse is over\r\n\tcoordAdjust: null, // delta that will be added to the mouse coordinates when computing collisions\r\n\r\n\r\n\tconstructor: function(component, options) {\r\n\t\tDragListener.call(this, options); // call the super-constructor\r\n\r\n\t\tthis.component = component;\r\n\t},\r\n\r\n\r\n\t// Called when drag listening starts (but a real drag has not necessarily began).\r\n\t// ev might be undefined if dragging was started manually.\r\n\tlistenStart: function(ev) {\r\n\t\tvar subjectEl = this.subjectEl;\r\n\t\tvar subjectRect;\r\n\t\tvar origPoint;\r\n\t\tvar point;\r\n\r\n\t\tDragListener.prototype.listenStart.apply(this, arguments); // call the super-method\r\n\r\n\t\tthis.computeCoords();\r\n\r\n\t\tif (ev) {\r\n\t\t\torigPoint = { left: ev.pageX, top: ev.pageY };\r\n\t\t\tpoint = origPoint;\r\n\r\n\t\t\t// constrain the point to bounds of the element being dragged\r\n\t\t\tif (subjectEl) {\r\n\t\t\t\tsubjectRect = getOuterRect(subjectEl); // used for centering as well\r\n\t\t\t\tpoint = constrainPoint(point, subjectRect);\r\n\t\t\t}\r\n\r\n\t\t\tthis.origHit = this.queryHit(point.left, point.top);\r\n\r\n\t\t\t// treat the center of the subject as the collision point?\r\n\t\t\tif (subjectEl && this.options.subjectCenter) {\r\n\r\n\t\t\t\t// only consider the area the subject overlaps the hit. best for large subjects.\r\n\t\t\t\t// TODO: skip this if hit didn't supply left/right/top/bottom\r\n\t\t\t\tif (this.origHit) {\r\n\t\t\t\t\tsubjectRect = intersectRects(this.origHit, subjectRect) ||\r\n\t\t\t\t\t\tsubjectRect; // in case there is no intersection\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpoint = getRectCenter(subjectRect);\r\n\t\t\t}\r\n\r\n\t\t\tthis.coordAdjust = diffPoints(point, origPoint); // point - origPoint\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.origHit = null;\r\n\t\t\tthis.coordAdjust = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Recomputes the drag-critical positions of elements\r\n\tcomputeCoords: function() {\r\n\t\tthis.component.prepareHits();\r\n\t\tthis.computeScrollBounds(); // why is this here???\r\n\t},\r\n\r\n\r\n\t// Called when the actual drag has started\r\n\tdragStart: function(ev) {\r\n\t\tvar hit;\r\n\r\n\t\tDragListener.prototype.dragStart.apply(this, arguments); // call the super-method\r\n\r\n\t\t// might be different from this.origHit if the min-distance is large\r\n\t\thit = this.queryHit(ev.pageX, ev.pageY);\r\n\r\n\t\t// report the initial hit the mouse is over\r\n\t\t// especially important if no min-distance and drag starts immediately\r\n\t\tif (hit) {\r\n\t\t\tthis.hitOver(hit);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when the drag moves\r\n\tdrag: function(dx, dy, ev) {\r\n\t\tvar hit;\r\n\r\n\t\tDragListener.prototype.drag.apply(this, arguments); // call the super-method\r\n\r\n\t\thit = this.queryHit(ev.pageX, ev.pageY);\r\n\r\n\t\tif (!isHitsEqual(hit, this.hit)) { // a different hit than before?\r\n\t\t\tif (this.hit) {\r\n\t\t\t\tthis.hitOut();\r\n\t\t\t}\r\n\t\t\tif (hit) {\r\n\t\t\t\tthis.hitOver(hit);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when dragging has been stopped\r\n\tdragStop: function() {\r\n\t\tthis.hitDone();\r\n\t\tDragListener.prototype.dragStop.apply(this, arguments); // call the super-method\r\n\t},\r\n\r\n\r\n\t// Called when a the mouse has just moved over a new hit\r\n\thitOver: function(hit) {\r\n\t\tvar isOrig = isHitsEqual(hit, this.origHit);\r\n\r\n\t\tthis.hit = hit;\r\n\r\n\t\tthis.trigger('hitOver', this.hit, isOrig, this.origHit);\r\n\t},\r\n\r\n\r\n\t// Called when the mouse has just moved out of a hit\r\n\thitOut: function() {\r\n\t\tif (this.hit) {\r\n\t\t\tthis.trigger('hitOut', this.hit);\r\n\t\t\tthis.hitDone();\r\n\t\t\tthis.hit = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called after a hitOut. Also called before a dragStop\r\n\thitDone: function() {\r\n\t\tif (this.hit) {\r\n\t\t\tthis.trigger('hitDone', this.hit);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when drag listening has stopped\r\n\tlistenStop: function() {\r\n\t\tDragListener.prototype.listenStop.apply(this, arguments); // call the super-method\r\n\r\n\t\tthis.origHit = null;\r\n\t\tthis.hit = null;\r\n\r\n\t\tthis.component.releaseHits();\r\n\t},\r\n\r\n\r\n\t// Called when scrolling has stopped, whether through auto scroll, or the user scrolling\r\n\tscrollStop: function() {\r\n\t\tDragListener.prototype.scrollStop.apply(this, arguments); // call the super-method\r\n\r\n\t\tthis.computeCoords(); // hits' absolute positions will be in new places. recompute\r\n\t},\r\n\r\n\r\n\t// Gets the hit underneath the coordinates for the given mouse event\r\n\tqueryHit: function(left, top) {\r\n\r\n\t\tif (this.coordAdjust) {\r\n\t\t\tleft += this.coordAdjust.left;\r\n\t\t\ttop += this.coordAdjust.top;\r\n\t\t}\r\n\r\n\t\treturn this.component.queryHit(left, top);\r\n\t}\r\n\r\n});\r\n\r\n\r\n// Returns `true` if the hits are identically equal. `false` otherwise. Must be from the same component.\r\n// Two null values will be considered equal, as two \"out of the component\" states are the same.\r\nfunction isHitsEqual(hit0, hit1) {\r\n\r\n\tif (!hit0 && !hit1) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (hit0 && hit1) {\r\n\t\treturn hit0.component === hit1.component &&\r\n\t\t\tisHitPropsWithin(hit0, hit1) &&\r\n\t\t\tisHitPropsWithin(hit1, hit0); // ensures all props are identical\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n\r\n// Returns true if all of subHit's non-standard properties are within superHit\r\nfunction isHitPropsWithin(subHit, superHit) {\r\n\tfor (var propName in subHit) {\r\n\t\tif (!/^(component|left|right|top|bottom)$/.test(propName)) {\r\n\t\t\tif (subHit[propName] !== superHit[propName]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n;;\r\n\r\n/* Creates a clone of an element and lets it track the mouse as it moves\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nvar MouseFollower = Class.extend({\r\n\r\n\toptions: null,\r\n\r\n\tsourceEl: null, // the element that will be cloned and made to look like it is dragging\r\n\tel: null, // the clone of `sourceEl` that will track the mouse\r\n\tparentEl: null, // the element that `el` (the clone) will be attached to\r\n\r\n\t// the initial position of el, relative to the offset parent. made to match the initial offset of sourceEl\r\n\ttop0: null,\r\n\tleft0: null,\r\n\r\n\t// the initial position of the mouse\r\n\tmouseY0: null,\r\n\tmouseX0: null,\r\n\r\n\t// the number of pixels the mouse has moved from its initial position\r\n\ttopDelta: null,\r\n\tleftDelta: null,\r\n\r\n\tmousemoveProxy: null, // document mousemove handler, bound to the MouseFollower's `this`\r\n\r\n\tisFollowing: false,\r\n\tisHidden: false,\r\n\tisAnimating: false, // doing the revert animation?\r\n\r\n\tconstructor: function(sourceEl, options) {\r\n\t\tthis.options = options = options || {};\r\n\t\tthis.sourceEl = sourceEl;\r\n\t\tthis.parentEl = options.parentEl ? $(options.parentEl) : sourceEl.parent(); // default to sourceEl's parent\r\n\t},\r\n\r\n\r\n\t// Causes the element to start following the mouse\r\n\tstart: function(ev) {\r\n\t\tif (!this.isFollowing) {\r\n\t\t\tthis.isFollowing = true;\r\n\r\n\t\t\tthis.mouseY0 = ev.pageY;\r\n\t\t\tthis.mouseX0 = ev.pageX;\r\n\t\t\tthis.topDelta = 0;\r\n\t\t\tthis.leftDelta = 0;\r\n\r\n\t\t\tif (!this.isHidden) {\r\n\t\t\t\tthis.updatePosition();\r\n\t\t\t}\r\n\r\n\t\t\t$(document).on('mousemove', this.mousemoveProxy = proxy(this, 'mousemove'));\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Causes the element to stop following the mouse. If shouldRevert is true, will animate back to original position.\r\n\t// `callback` gets invoked when the animation is complete. If no animation, it is invoked immediately.\r\n\tstop: function(shouldRevert, callback) {\r\n\t\tvar _this = this;\r\n\t\tvar revertDuration = this.options.revertDuration;\r\n\r\n\t\tfunction complete() {\r\n\t\t\tthis.isAnimating = false;\r\n\t\t\t_this.removeElement();\r\n\r\n\t\t\tthis.top0 = this.left0 = null; // reset state for future updatePosition calls\r\n\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isFollowing && !this.isAnimating) { // disallow more than one stop animation at a time\r\n\t\t\tthis.isFollowing = false;\r\n\r\n\t\t\t$(document).off('mousemove', this.mousemoveProxy);\r\n\r\n\t\t\tif (shouldRevert && revertDuration && !this.isHidden) { // do a revert animation?\r\n\t\t\t\tthis.isAnimating = true;\r\n\t\t\t\tthis.el.animate({\r\n\t\t\t\t\ttop: this.top0,\r\n\t\t\t\t\tleft: this.left0\r\n\t\t\t\t}, {\r\n\t\t\t\t\tduration: revertDuration,\r\n\t\t\t\t\tcomplete: complete\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcomplete();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Gets the tracking element. Create it if necessary\r\n\tgetEl: function() {\r\n\t\tvar el = this.el;\r\n\r\n\t\tif (!el) {\r\n\t\t\tthis.sourceEl.width(); // hack to force IE8 to compute correct bounding box\r\n\t\t\tel = this.el = this.sourceEl.clone()\r\n\t\t\t\t.css({\r\n\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\tvisibility: '', // in case original element was hidden (commonly through hideEvents())\r\n\t\t\t\t\tdisplay: this.isHidden ? 'none' : '', // for when initially hidden\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tright: 'auto', // erase and set width instead\r\n\t\t\t\t\tbottom: 'auto', // erase and set height instead\r\n\t\t\t\t\twidth: this.sourceEl.width(), // explicit height in case there was a 'right' value\r\n\t\t\t\t\theight: this.sourceEl.height(), // explicit width in case there was a 'bottom' value\r\n\t\t\t\t\topacity: this.options.opacity || '',\r\n\t\t\t\t\tzIndex: this.options.zIndex\r\n\t\t\t\t})\r\n\t\t\t\t.appendTo(this.parentEl);\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t},\r\n\r\n\r\n\t// Removes the tracking element if it has already been created\r\n\tremoveElement: function() {\r\n\t\tif (this.el) {\r\n\t\t\tthis.el.remove();\r\n\t\t\tthis.el = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Update the CSS position of the tracking element\r\n\tupdatePosition: function() {\r\n\t\tvar sourceOffset;\r\n\t\tvar origin;\r\n\r\n\t\tthis.getEl(); // ensure this.el\r\n\r\n\t\t// make sure origin info was computed\r\n\t\tif (this.top0 === null) {\r\n\t\t\tthis.sourceEl.width(); // hack to force IE8 to compute correct bounding box\r\n\t\t\tsourceOffset = this.sourceEl.offset();\r\n\t\t\torigin = this.el.offsetParent().offset();\r\n\t\t\tthis.top0 = sourceOffset.top - origin.top;\r\n\t\t\tthis.left0 = sourceOffset.left - origin.left;\r\n\t\t}\r\n\r\n\t\tthis.el.css({\r\n\t\t\ttop: this.top0 + this.topDelta,\r\n\t\t\tleft: this.left0 + this.leftDelta\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t// Gets called when the user moves the mouse\r\n\tmousemove: function(ev) {\r\n\t\tthis.topDelta = ev.pageY - this.mouseY0;\r\n\t\tthis.leftDelta = ev.pageX - this.mouseX0;\r\n\r\n\t\tif (!this.isHidden) {\r\n\t\t\tthis.updatePosition();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Temporarily makes the tracking element invisible. Can be called before following starts\r\n\thide: function() {\r\n\t\tif (!this.isHidden) {\r\n\t\t\tthis.isHidden = true;\r\n\t\t\tif (this.el) {\r\n\t\t\t\tthis.el.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Show the tracking element after it has been temporarily hidden\r\n\tshow: function() {\r\n\t\tif (this.isHidden) {\r\n\t\t\tthis.isHidden = false;\r\n\t\t\tthis.updatePosition();\r\n\t\t\tthis.getEl().show();\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\n/* An abstract class comprised of a \"grid\" of areas that each represent a specific datetime\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nvar Grid = FC.Grid = Class.extend({\r\n\r\n\tview: null, // a View object\r\n\tisRTL: null, // shortcut to the view's isRTL option\r\n\r\n\tstart: null,\r\n\tend: null,\r\n\r\n\tel: null, // the containing element\r\n\telsByFill: null, // a hash of jQuery element sets used for rendering each fill. Keyed by fill name.\r\n\r\n\texternalDragStartProxy: null, // binds the Grid's scope to externalDragStart (in DayGrid.events)\r\n\r\n\t// derived from options\r\n\teventTimeFormat: null,\r\n\tdisplayEventTime: null,\r\n\tdisplayEventEnd: null,\r\n\r\n\tminResizeDuration: null, // TODO: hack. set by subclasses. minumum event resize duration\r\n\r\n\t// if defined, holds the unit identified (ex: \"year\" or \"month\") that determines the level of granularity\r\n\t// of the date areas. if not defined, assumes to be day and time granularity.\r\n\t// TODO: port isTimeScale into same system?\r\n\tlargeUnit: null,\r\n\r\n\r\n\tconstructor: function(view) {\r\n\t\tthis.view = view;\r\n\t\tthis.isRTL = view.opt('isRTL');\r\n\r\n\t\tthis.elsByFill = {};\r\n\t\tthis.externalDragStartProxy = proxy(this, 'externalDragStart');\r\n\t},\r\n\r\n\r\n\t/* Options\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Generates the format string used for event time text, if not explicitly defined by 'timeFormat'\r\n\tcomputeEventTimeFormat: function() {\r\n\t\treturn this.view.opt('smallTimeFormat');\r\n\t},\r\n\r\n\r\n\t// Determines whether events should have their end times displayed, if not explicitly defined by 'displayEventTime'.\r\n\t// Only applies to non-all-day events.\r\n\tcomputeDisplayEventTime: function() {\r\n\t\treturn true;\r\n\t},\r\n\r\n\r\n\t// Determines whether events should have their end times displayed, if not explicitly defined by 'displayEventEnd'\r\n\tcomputeDisplayEventEnd: function() {\r\n\t\treturn true;\r\n\t},\r\n\r\n\r\n\t/* Dates\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Tells the grid about what period of time to display.\r\n\t// Any date-related internal data should be generated.\r\n\tsetRange: function(range) {\r\n\t\tthis.start = range.start.clone();\r\n\t\tthis.end = range.end.clone();\r\n\r\n\t\tthis.rangeUpdated();\r\n\t\tthis.processRangeOptions();\r\n\t},\r\n\r\n\r\n\t// Called when internal variables that rely on the range should be updated\r\n\trangeUpdated: function() {\r\n\t},\r\n\r\n\r\n\t// Updates values that rely on options and also relate to range\r\n\tprocessRangeOptions: function() {\r\n\t\tvar view = this.view;\r\n\t\tvar displayEventTime;\r\n\t\tvar displayEventEnd;\r\n\r\n\t\tthis.eventTimeFormat =\r\n\t\t\tview.opt('eventTimeFormat') ||\r\n\t\t\tview.opt('timeFormat') || // deprecated\r\n\t\t\tthis.computeEventTimeFormat();\r\n\r\n\t\tdisplayEventTime = view.opt('displayEventTime');\r\n\t\tif (displayEventTime == null) {\r\n\t\t\tdisplayEventTime = this.computeDisplayEventTime(); // might be based off of range\r\n\t\t}\r\n\r\n\t\tdisplayEventEnd = view.opt('displayEventEnd');\r\n\t\tif (displayEventEnd == null) {\r\n\t\t\tdisplayEventEnd = this.computeDisplayEventEnd(); // might be based off of range\r\n\t\t}\r\n\r\n\t\tthis.displayEventTime = displayEventTime;\r\n\t\tthis.displayEventEnd = displayEventEnd;\r\n\t},\r\n\r\n\r\n\t// Converts a span (has unzoned start/end and any other grid-specific location information)\r\n\t// into an array of segments (pieces of events whose format is decided by the grid).\r\n\tspanToSegs: function(span) {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t// Diffs the two dates, returning a duration, based on granularity of the grid\r\n\t// TODO: port isTimeScale into this system?\r\n\tdiffDates: function(a, b) {\r\n\t\tif (this.largeUnit) {\r\n\t\t\treturn diffByUnit(a, b, this.largeUnit);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn diffDayTime(a, b);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Hit Area\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Called before one or more queryHit calls might happen. Should prepare any cached coordinates for queryHit\r\n\tprepareHits: function() {\r\n\t},\r\n\r\n\r\n\t// Called when queryHit calls have subsided. Good place to clear any coordinate caches.\r\n\treleaseHits: function() {\r\n\t},\r\n\r\n\r\n\t// Given coordinates from the topleft of the document, return data about the date-related area underneath.\r\n\t// Can return an object with arbitrary properties (although top/right/left/bottom are encouraged).\r\n\t// Must have a `grid` property, a reference to this current grid. TODO: avoid this\r\n\t// The returned object will be processed by getHitSpan and getHitEl.\r\n\tqueryHit: function(leftOffset, topOffset) {\r\n\t},\r\n\r\n\r\n\t// Given position-level information about a date-related area within the grid,\r\n\t// should return an object with at least a start/end date. Can provide other information as well.\r\n\tgetHitSpan: function(hit) {\r\n\t},\r\n\r\n\r\n\t// Given position-level information about a date-related area within the grid,\r\n\t// should return a jQuery element that best represents it. passed to dayClick callback.\r\n\tgetHitEl: function(hit) {\r\n\t},\r\n\r\n\r\n\t/* Rendering\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Sets the container element that the grid should render inside of.\r\n\t// Does other DOM-related initializations.\r\n\tsetElement: function(el) {\r\n\t\tvar _this = this;\r\n\r\n\t\tthis.el = el;\r\n\r\n\t\t// attach a handler to the grid's root element.\r\n\t\t// jQuery will take care of unregistering them when removeElement gets called.\r\n\t\tel.on('mousedown', function(ev) {\r\n\t\t\tif (\r\n\t\t\t\t!$(ev.target).is('.fc-event-container *, .fc-more') && // not an an event element, or \"more..\" link\r\n\t\t\t\t!$(ev.target).closest('.fc-popover').length // not on a popover (like the \"more..\" events one)\r\n\t\t\t) {\r\n\t\t\t\t_this.dayMousedown(ev);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// attach event-element-related handlers. in Grid.events\r\n\t\t// same garbage collection note as above.\r\n\t\tthis.bindSegHandlers();\r\n\r\n\t\tthis.bindGlobalHandlers();\r\n\t},\r\n\r\n\r\n\t// Removes the grid's container element from the DOM. Undoes any other DOM-related attachments.\r\n\t// DOES NOT remove any content beforehand (doesn't clear events or call unrenderDates), unlike View\r\n\tremoveElement: function() {\r\n\t\tthis.unbindGlobalHandlers();\r\n\r\n\t\tthis.el.remove();\r\n\r\n\t\t// NOTE: we don't null-out this.el for the same reasons we don't do it within View::removeElement\r\n\t},\r\n\r\n\r\n\t// Renders the basic structure of grid view before any content is rendered\r\n\trenderSkeleton: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Renders the grid's date-related content (like areas that represent days/times).\r\n\t// Assumes setRange has already been called and the skeleton has already been rendered.\r\n\trenderDates: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Unrenders the grid's date-related content\r\n\tunrenderDates: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t/* Handlers\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Binds DOM handlers to elements that reside outside the grid, such as the document\r\n\tbindGlobalHandlers: function() {\r\n\t\t$(document).on('dragstart sortstart', this.externalDragStartProxy); // jqui\r\n\t},\r\n\r\n\r\n\t// Unbinds DOM handlers from elements that reside outside the grid\r\n\tunbindGlobalHandlers: function() {\r\n\t\t$(document).off('dragstart sortstart', this.externalDragStartProxy); // jqui\r\n\t},\r\n\r\n\r\n\t// Process a mousedown on an element that represents a day. For day clicking and selecting.\r\n\tdayMousedown: function(ev) {\r\n\t\tvar _this = this;\r\n\t\tvar view = this.view;\r\n\t\tvar isSelectable = view.opt('selectable');\r\n\t\tvar dayClickHit; // null if invalid dayClick\r\n\t\tvar selectionSpan; // null if invalid selection\r\n\r\n\t\t// this listener tracks a mousedown on a day element, and a subsequent drag.\r\n\t\t// if the drag ends on the same day, it is a 'dayClick'.\r\n\t\t// if 'selectable' is enabled, this listener also detects selections.\r\n\t\tvar dragListener = new HitDragListener(this, {\r\n\t\t\t//distance: 5, // needs more work if we want dayClick to fire correctly\r\n\t\t\tscroll: view.opt('dragScroll'),\r\n\t\t\tdragStart: function() {\r\n\t\t\t\tview.unselect(); // since we could be rendering a new selection, we want to clear any old one\r\n\t\t\t},\r\n\t\t\thitOver: function(hit, isOrig, origHit) {\r\n\t\t\t\tif (origHit) { // click needs to have started on a hit\r\n\t\t\t\t\tdayClickHit = isOrig ? hit : null; // single-hit selection is a day click\r\n\t\t\t\t\tif (isSelectable) {\r\n\t\t\t\t\t\tselectionSpan = _this.computeSelection(\r\n\t\t\t\t\t\t\t_this.getHitSpan(origHit),\r\n\t\t\t\t\t\t\t_this.getHitSpan(hit)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif (selectionSpan) {\r\n\t\t\t\t\t\t\t_this.renderSelection(selectionSpan);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (selectionSpan === false) {\r\n\t\t\t\t\t\t\tdisableCursor();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thitOut: function() {\r\n\t\t\t\tdayClickHit = null;\r\n\t\t\t\tselectionSpan = null;\r\n\t\t\t\t_this.unrenderSelection();\r\n\t\t\t\tenableCursor();\r\n\t\t\t},\r\n\t\t\tlistenStop: function(ev) {\r\n\t\t\t\tif (dayClickHit) {\r\n\t\t\t\t\tview.triggerDayClick(\r\n\t\t\t\t\t\t_this.getHitSpan(dayClickHit),\r\n\t\t\t\t\t\t_this.getHitEl(dayClickHit),\r\n\t\t\t\t\t\tev\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (selectionSpan) {\r\n\t\t\t\t\t// the selection will already have been rendered. just report it\r\n\t\t\t\t\tview.reportSelection(selectionSpan, ev);\r\n\t\t\t\t}\r\n\t\t\t\tenableCursor();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdragListener.mousedown(ev); // start listening, which will eventually initiate a dragStart\r\n\t},\r\n\r\n\r\n\t/* Event Helper\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\t// TODO: should probably move this to Grid.events, like we did event dragging / resizing\r\n\r\n\r\n\t// Renders a mock event at the given event location, which contains zoned start/end properties.\r\n\trenderEventLocationHelper: function(eventLocation, sourceSeg) {\r\n\t\tvar fakeEvent = this.fabricateHelperEvent(eventLocation, sourceSeg);\r\n\r\n\t\tthis.renderHelper(fakeEvent, sourceSeg); // do the actual rendering\r\n\t},\r\n\r\n\r\n\t// Builds a fake event given zoned event date properties and a segment is should be inspired from.\r\n\t// The range's end can be null, in which case the mock event that is rendered will have a null end time.\r\n\t// `sourceSeg` is the internal segment object involved in the drag. If null, something external is dragging.\r\n\tfabricateHelperEvent: function(eventLocation, sourceSeg) {\r\n\t\tvar fakeEvent = sourceSeg ? createObject(sourceSeg.event) : {}; // mask the original event object if possible\r\n\r\n\t\tfakeEvent.start = eventLocation.start.clone();\r\n\t\tfakeEvent.end = eventLocation.end ? eventLocation.end.clone() : null;\r\n\t\tfakeEvent.allDay = null; // force it to be freshly computed by normalizeEventDates\r\n\t\tthis.view.calendar.normalizeEventDates(fakeEvent);\r\n\r\n\t\t// this extra className will be useful for differentiating real events from mock events in CSS\r\n\t\tfakeEvent.className = (fakeEvent.className || []).concat('fc-helper');\r\n\r\n\t\t// if something external is being dragged in, don't render a resizer\r\n\t\tif (!sourceSeg) {\r\n\t\t\tfakeEvent.editable = false;\r\n\t\t}\r\n\r\n\t\treturn fakeEvent;\r\n\t},\r\n\r\n\r\n\t// Renders a mock event. Given zoned event date properties.\r\n\trenderHelper: function(eventLocation, sourceSeg) {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t// Unrenders a mock event\r\n\tunrenderHelper: function() {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t/* Selection\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of a selection. Will highlight by default but can be overridden by subclasses.\r\n\t// Given a span (unzoned start/end and other misc data)\r\n\trenderSelection: function(span) {\r\n\t\tthis.renderHighlight(span);\r\n\t},\r\n\r\n\r\n\t// Unrenders any visual indications of a selection. Will unrender a highlight by default.\r\n\tunrenderSelection: function() {\r\n\t\tthis.unrenderHighlight();\r\n\t},\r\n\r\n\r\n\t// Given the first and last date-spans of a selection, returns another date-span object.\r\n\t// Subclasses can override and provide additional data in the span object. Will be passed to renderSelection().\r\n\t// Will return false if the selection is invalid and this should be indicated to the user.\r\n\t// Will return null/undefined if a selection invalid but no error should be reported.\r\n\tcomputeSelection: function(span0, span1) {\r\n\t\tvar span = this.computeSelectionSpan(span0, span1);\r\n\r\n\t\tif (span && !this.view.calendar.isSelectionSpanAllowed(span)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn span;\r\n\t},\r\n\r\n\r\n\t// Given two spans, must return the combination of the two.\r\n\t// TODO: do this separation of concerns (combining VS validation) for event dnd/resize too.\r\n\tcomputeSelectionSpan: function(span0, span1) {\r\n\t\tvar dates = [ span0.start, span0.end, span1.start, span1.end ];\r\n\r\n\t\tdates.sort(compareNumbers); // sorts chronologically. works with Moments\r\n\r\n\t\treturn { start: dates[0].clone(), end: dates[3].clone() };\r\n\t},\r\n\r\n\r\n\t/* Highlight\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders an emphasis on the given date range. Given a span (unzoned start/end and other misc data)\r\n\trenderHighlight: function(span) {\r\n\t\tthis.renderFill('highlight', this.spanToSegs(span));\r\n\t},\r\n\r\n\r\n\t// Unrenders the emphasis on a date range\r\n\tunrenderHighlight: function() {\r\n\t\tthis.unrenderFill('highlight');\r\n\t},\r\n\r\n\r\n\t// Generates an array of classNames for rendering the highlight. Used by the fill system.\r\n\thighlightSegClasses: function() {\r\n\t\treturn [ 'fc-highlight' ];\r\n\t},\r\n\r\n\r\n\t/* Fill System (highlight, background events, business hours)\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a set of rectangles over the given segments of time.\r\n\t// MUST RETURN a subset of segs, the segs that were actually rendered.\r\n\t// Responsible for populating this.elsByFill. TODO: better API for expressing this requirement\r\n\trenderFill: function(type, segs) {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t// Unrenders a specific type of fill that is currently rendered on the grid\r\n\tunrenderFill: function(type) {\r\n\t\tvar el = this.elsByFill[type];\r\n\r\n\t\tif (el) {\r\n\t\t\tel.remove();\r\n\t\t\tdelete this.elsByFill[type];\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Renders and assigns an `el` property for each fill segment. Generic enough to work with different types.\r\n\t// Only returns segments that successfully rendered.\r\n\t// To be harnessed by renderFill (implemented by subclasses).\r\n\t// Analagous to renderFgSegEls.\r\n\trenderFillSegEls: function(type, segs) {\r\n\t\tvar _this = this;\r\n\t\tvar segElMethod = this[type + 'SegEl'];\r\n\t\tvar html = '';\r\n\t\tvar renderedSegs = [];\r\n\t\tvar i;\r\n\r\n\t\tif (segs.length) {\r\n\r\n\t\t\t// build a large concatenation of segment HTML\r\n\t\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\t\thtml += this.fillSegHtml(type, segs[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Grab individual elements from the combined HTML string. Use each as the default rendering.\r\n\t\t\t// Then, compute the 'el' for each segment.\r\n\t\t\t$(html).each(function(i, node) {\r\n\t\t\t\tvar seg = segs[i];\r\n\t\t\t\tvar el = $(node);\r\n\r\n\t\t\t\t// allow custom filter methods per-type\r\n\t\t\t\tif (segElMethod) {\r\n\t\t\t\t\tel = segElMethod.call(_this, seg, el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el) { // custom filters did not cancel the render\r\n\t\t\t\t\tel = $(el); // allow custom filter to return raw DOM node\r\n\r\n\t\t\t\t\t// correct element type? (would be bad if a non-TD were inserted into a table for example)\r\n\t\t\t\t\tif (el.is(_this.fillSegTag)) {\r\n\t\t\t\t\t\tseg.el = el;\r\n\t\t\t\t\t\trenderedSegs.push(seg);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn renderedSegs;\r\n\t},\r\n\r\n\r\n\tfillSegTag: 'div', // subclasses can override\r\n\r\n\r\n\t// Builds the HTML needed for one fill segment. Generic enought o work with different types.\r\n\tfillSegHtml: function(type, seg) {\r\n\r\n\t\t// custom hooks per-type\r\n\t\tvar classesMethod = this[type + 'SegClasses'];\r\n\t\tvar cssMethod = this[type + 'SegCss'];\r\n\r\n\t\tvar classes = classesMethod ? classesMethod.call(this, seg) : [];\r\n\t\tvar css = cssToStr(cssMethod ? cssMethod.call(this, seg) : {});\r\n\r\n\t\treturn '<' + this.fillSegTag +\r\n\t\t\t(classes.length ? ' class=\"' + classes.join(' ') + '\"' : '') +\r\n\t\t\t(css ? ' style=\"' + css + '\"' : '') +\r\n\t\t\t' />';\r\n\t},\r\n\r\n\r\n\r\n\t/* Generic rendering utilities for subclasses\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Computes HTML classNames for a single-day element\r\n\tgetDayClasses: function(date) {\r\n\t\tvar view = this.view;\r\n\t\tvar today = view.calendar.getNow().stripTime();\r\n\t\tvar classes = [ 'fc-' + dayIDs[date.day()] ];\r\n\r\n\t\tif (\r\n\t\t\tview.intervalDuration.as('months') == 1 &&\r\n\t\t\tdate.month() != view.intervalStart.month()\r\n\t\t) {\r\n\t\t\tclasses.push('fc-other-month');\r\n\t\t}\r\n\r\n\t\tif (date.isSame(today, 'day')) {\r\n\t\t\tclasses.push(\r\n\t\t\t\t'fc-today',\r\n\t\t\t\tview.highlightStateClass\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (date < today) {\r\n\t\t\tclasses.push('fc-past');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclasses.push('fc-future');\r\n\t\t}\r\n\r\n\t\treturn classes;\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\n/* Event-rendering and event-interaction methods for the abstract Grid class\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nGrid.mixin({\r\n\r\n\tmousedOverSeg: null, // the segment object the user's mouse is over. null if over nothing\r\n\tisDraggingSeg: false, // is a segment being dragged? boolean\r\n\tisResizingSeg: false, // is a segment being resized? boolean\r\n\tisDraggingExternal: false, // jqui-dragging an external element? boolean\r\n\tsegs: null, // the event segments currently rendered in the grid\r\n\r\n\r\n\t// Renders the given events onto the grid\r\n\trenderEvents: function(events) {\r\n\t\tvar bgEvents = [];\r\n\t\tvar fgEvents = [];\r\n\t\tvar i;\r\n\r\n\t\tfor (i = 0; i < events.length; i++) {\r\n\t\t\t(isBgEvent(events[i]) ? bgEvents : fgEvents).push(events[i]);\r\n\t\t}\r\n\r\n\t\tthis.segs = [].concat( // record all segs\r\n\t\t\tthis.renderBgEvents(bgEvents),\r\n\t\t\tthis.renderFgEvents(fgEvents)\r\n\t\t);\r\n\t},\r\n\r\n\r\n\trenderBgEvents: function(events) {\r\n\t\tvar segs = this.eventsToSegs(events);\r\n\r\n\t\t// renderBgSegs might return a subset of segs, segs that were actually rendered\r\n\t\treturn this.renderBgSegs(segs) || segs;\r\n\t},\r\n\r\n\r\n\trenderFgEvents: function(events) {\r\n\t\tvar segs = this.eventsToSegs(events);\r\n\r\n\t\t// renderFgSegs might return a subset of segs, segs that were actually rendered\r\n\t\treturn this.renderFgSegs(segs) || segs;\r\n\t},\r\n\r\n\r\n\t// Unrenders all events currently rendered on the grid\r\n\tunrenderEvents: function() {\r\n\t\tthis.triggerSegMouseout(); // trigger an eventMouseout if user's mouse is over an event\r\n\r\n\t\tthis.unrenderFgSegs();\r\n\t\tthis.unrenderBgSegs();\r\n\r\n\t\tthis.segs = null;\r\n\t},\r\n\r\n\r\n\t// Retrieves all rendered segment objects currently rendered on the grid\r\n\tgetEventSegs: function() {\r\n\t\treturn this.segs || [];\r\n\t},\r\n\r\n\r\n\t/* Foreground Segment Rendering\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders foreground event segments onto the grid. May return a subset of segs that were rendered.\r\n\trenderFgSegs: function(segs) {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t// Unrenders all currently rendered foreground segments\r\n\tunrenderFgSegs: function() {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t// Renders and assigns an `el` property for each foreground event segment.\r\n\t// Only returns segments that successfully rendered.\r\n\t// A utility that subclasses may use.\r\n\trenderFgSegEls: function(segs, disableResizing) {\r\n\t\tvar view = this.view;\r\n\t\tvar html = '';\r\n\t\tvar renderedSegs = [];\r\n\t\tvar i;\r\n\r\n\t\tif (segs.length) { // don't build an empty html string\r\n\r\n\t\t\t// build a large concatenation of event segment HTML\r\n\t\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\t\thtml += this.fgSegHtml(segs[i], disableResizing);\r\n\t\t\t}\r\n\r\n\t\t\t// Grab individual elements from the combined HTML string. Use each as the default rendering.\r\n\t\t\t// Then, compute the 'el' for each segment. An el might be null if the eventRender callback returned false.\r\n\t\t\t$(html).each(function(i, node) {\r\n\t\t\t\tvar seg = segs[i];\r\n\t\t\t\tvar el = view.resolveEventEl(seg.event, $(node));\r\n\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\tel.data('fc-seg', seg); // used by handlers\r\n\t\t\t\t\tseg.el = el;\r\n\t\t\t\t\trenderedSegs.push(seg);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn renderedSegs;\r\n\t},\r\n\r\n\r\n\t// Generates the HTML for the default rendering of a foreground event segment. Used by renderFgSegEls()\r\n\tfgSegHtml: function(seg, disableResizing) {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t/* Background Segment Rendering\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders the given background event segments onto the grid.\r\n\t// Returns a subset of the segs that were actually rendered.\r\n\trenderBgSegs: function(segs) {\r\n\t\treturn this.renderFill('bgEvent', segs);\r\n\t},\r\n\r\n\r\n\t// Unrenders all the currently rendered background event segments\r\n\tunrenderBgSegs: function() {\r\n\t\tthis.unrenderFill('bgEvent');\r\n\t},\r\n\r\n\r\n\t// Renders a background event element, given the default rendering. Called by the fill system.\r\n\tbgEventSegEl: function(seg, el) {\r\n\t\treturn this.view.resolveEventEl(seg.event, el); // will filter through eventRender\r\n\t},\r\n\r\n\r\n\t// Generates an array of classNames to be used for the default rendering of a background event.\r\n\t// Called by the fill system.\r\n\tbgEventSegClasses: function(seg) {\r\n\t\tvar event = seg.event;\r\n\t\tvar source = event.source || {};\r\n\r\n\t\treturn [ 'fc-bgevent' ].concat(\r\n\t\t\tevent.className,\r\n\t\t\tsource.className || []\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Generates a semicolon-separated CSS string to be used for the default rendering of a background event.\r\n\t// Called by the fill system.\r\n\t// TODO: consolidate with getEventSkinCss?\r\n\tbgEventSegCss: function(seg) {\r\n\t\tvar view = this.view;\r\n\t\tvar event = seg.event;\r\n\t\tvar source = event.source || {};\r\n\r\n\t\treturn {\r\n\t\t\t'background-color':\r\n\t\t\t\tevent.backgroundColor ||\r\n\t\t\t\tevent.color ||\r\n\t\t\t\tsource.backgroundColor ||\r\n\t\t\t\tsource.color ||\r\n\t\t\t\tview.opt('eventBackgroundColor') ||\r\n\t\t\t\tview.opt('eventColor')\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t// Generates an array of classNames to be used for the rendering business hours overlay. Called by the fill system.\r\n\tbusinessHoursSegClasses: function(seg) {\r\n\t\treturn [ 'fc-nonbusiness', 'fc-bgevent' ];\r\n\t},\r\n\r\n\r\n\t/* Handlers\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Attaches event-element-related handlers to the container element and leverage bubbling\r\n\tbindSegHandlers: function() {\r\n\t\tvar _this = this;\r\n\t\tvar view = this.view;\r\n\r\n\t\t$.each(\r\n\t\t\t{\r\n\t\t\t\tmouseenter: function(seg, ev) {\r\n\t\t\t\t\t_this.triggerSegMouseover(seg, ev);\r\n\t\t\t\t},\r\n\t\t\t\tmouseleave: function(seg, ev) {\r\n\t\t\t\t\t_this.triggerSegMouseout(seg, ev);\r\n\t\t\t\t},\r\n\t\t\t\tclick: function(seg, ev) {\r\n\t\t\t\t\treturn view.trigger('eventClick', this, seg.event, ev); // can return `false` to cancel\r\n\t\t\t\t},\r\n\t\t\t\tmousedown: function(seg, ev) {\r\n\t\t\t\t\tif ($(ev.target).is('.fc-resizer') && view.isEventResizable(seg.event)) {\r\n\t\t\t\t\t\t_this.segResizeMousedown(seg, ev, $(ev.target).is('.fc-start-resizer'));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (view.isEventDraggable(seg.event)) {\r\n\t\t\t\t\t\t_this.segDragMousedown(seg, ev);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfunction(name, func) {\r\n\t\t\t\t// attach the handler to the container element and only listen for real event elements via bubbling\r\n\t\t\t\t_this.el.on(name, '.fc-event-container > *', function(ev) {\r\n\t\t\t\t\tvar seg = $(this).data('fc-seg'); // grab segment data. put there by View::renderEvents\r\n\r\n\t\t\t\t\t// only call the handlers if there is not a drag/resize in progress\r\n\t\t\t\t\tif (seg && !_this.isDraggingSeg && !_this.isResizingSeg) {\r\n\t\t\t\t\t\treturn func.call(this, seg, ev); // `this` will be the event element\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Updates internal state and triggers handlers for when an event element is moused over\r\n\ttriggerSegMouseover: function(seg, ev) {\r\n\t\tif (!this.mousedOverSeg) {\r\n\t\t\tthis.mousedOverSeg = seg;\r\n\t\t\tthis.view.trigger('eventMouseover', seg.el[0], seg.event, ev);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Updates internal state and triggers handlers for when an event element is moused out.\r\n\t// Can be given no arguments, in which case it will mouseout the segment that was previously moused over.\r\n\ttriggerSegMouseout: function(seg, ev) {\r\n\t\tev = ev || {}; // if given no args, make a mock mouse event\r\n\r\n\t\tif (this.mousedOverSeg) {\r\n\t\t\tseg = seg || this.mousedOverSeg; // if given no args, use the currently moused-over segment\r\n\t\t\tthis.mousedOverSeg = null;\r\n\t\t\tthis.view.trigger('eventMouseout', seg.el[0], seg.event, ev);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Event Dragging\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Called when the user does a mousedown on an event, which might lead to dragging.\r\n\t// Generic enough to work with any type of Grid.\r\n\tsegDragMousedown: function(seg, ev) {\r\n\t\tvar _this = this;\r\n\t\tvar view = this.view;\r\n\t\tvar calendar = view.calendar;\r\n\t\tvar el = seg.el;\r\n\t\tvar event = seg.event;\r\n\t\tvar dropLocation; // zoned event date properties\r\n\r\n\t\t// A clone of the original element that will move with the mouse\r\n\t\tvar mouseFollower = new MouseFollower(seg.el, {\r\n\t\t\tparentEl: view.el,\r\n\t\t\topacity: view.opt('dragOpacity'),\r\n\t\t\trevertDuration: view.opt('dragRevertDuration'),\r\n\t\t\tzIndex: 2 // one above the .fc-view\r\n\t\t});\r\n\r\n\t\t// Tracks mouse movement over the *view's* coordinate map. Allows dragging and dropping between subcomponents\r\n\t\t// of the view.\r\n\t\tvar dragListener = new HitDragListener(view, {\r\n\t\t\tdistance: 5,\r\n\t\t\tscroll: view.opt('dragScroll'),\r\n\t\t\tsubjectEl: el,\r\n\t\t\tsubjectCenter: true,\r\n\t\t\tlistenStart: function(ev) {\r\n\t\t\t\tmouseFollower.hide(); // don't show until we know this is a real drag\r\n\t\t\t\tmouseFollower.start(ev);\r\n\t\t\t},\r\n\t\t\tdragStart: function(ev) {\r\n\t\t\t\t_this.triggerSegMouseout(seg, ev); // ensure a mouseout on the manipulated event has been reported\r\n\t\t\t\t_this.segDragStart(seg, ev);\r\n\t\t\t\tview.hideEvent(event); // hide all event segments. our mouseFollower will take over\r\n\t\t\t},\r\n\t\t\thitOver: function(hit, isOrig, origHit) {\r\n\r\n\t\t\t\t// starting hit could be forced (DayGrid.limit)\r\n\t\t\t\tif (seg.hit) {\r\n\t\t\t\t\torigHit = seg.hit;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// since we are querying the parent view, might not belong to this grid\r\n\t\t\t\tdropLocation = _this.computeEventDrop(\r\n\t\t\t\t\torigHit.component.getHitSpan(origHit),\r\n\t\t\t\t\thit.component.getHitSpan(hit),\r\n\t\t\t\t\tevent\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (dropLocation &&!calendar.isEventSpanAllowed(_this.eventToSpan(dropLocation), event)) {\r\n\t\t\t\t\tdisableCursor();\r\n\t\t\t\t\tdropLocation = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if a valid drop location, have the subclass render a visual indication\r\n\t\t\t\tif (dropLocation && view.renderDrag(dropLocation, seg)) {\r\n\t\t\t\t\tmouseFollower.hide(); // if the subclass is already using a mock event \"helper\", hide our own\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tmouseFollower.show(); // otherwise, have the helper follow the mouse (no snapping)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isOrig) {\r\n\t\t\t\t\tdropLocation = null; // needs to have moved hits to be a valid drop\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thitOut: function() { // called before mouse moves to a different hit OR moved out of all hits\r\n\t\t\t\tview.unrenderDrag(); // unrender whatever was done in renderDrag\r\n\t\t\t\tmouseFollower.show(); // show in case we are moving out of all hits\r\n\t\t\t\tdropLocation = null;\r\n\t\t\t},\r\n\t\t\thitDone: function() { // Called after a hitOut OR before a dragStop\r\n\t\t\t\tenableCursor();\r\n\t\t\t},\r\n\t\t\tdragStop: function(ev) {\r\n\t\t\t\t// do revert animation if hasn't changed. calls a callback when finished (whether animation or not)\r\n\t\t\t\tmouseFollower.stop(!dropLocation, function() {\r\n\t\t\t\t\tview.unrenderDrag();\r\n\t\t\t\t\tview.showEvent(event);\r\n\t\t\t\t\t_this.segDragStop(seg, ev);\r\n\r\n\t\t\t\t\tif (dropLocation) {\r\n\t\t\t\t\t\tview.reportEventDrop(event, dropLocation, this.largeUnit, el, ev);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tlistenStop: function() {\r\n\t\t\t\tmouseFollower.stop(); // put in listenStop in case there was a mousedown but the drag never started\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdragListener.mousedown(ev); // start listening, which will eventually lead to a dragStart\r\n\t},\r\n\r\n\r\n\t// Called before event segment dragging starts\r\n\tsegDragStart: function(seg, ev) {\r\n\t\tthis.isDraggingSeg = true;\r\n\t\tthis.view.trigger('eventDragStart', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\r\n\t},\r\n\r\n\r\n\t// Called after event segment dragging stops\r\n\tsegDragStop: function(seg, ev) {\r\n\t\tthis.isDraggingSeg = false;\r\n\t\tthis.view.trigger('eventDragStop', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\r\n\t},\r\n\r\n\r\n\t// Given the spans an event drag began, and the span event was dropped, calculates the new zoned start/end/allDay\r\n\t// values for the event. Subclasses may override and set additional properties to be used by renderDrag.\r\n\t// A falsy returned value indicates an invalid drop.\r\n\tcomputeEventDrop: function(startSpan, endSpan, event) {\r\n\t\tvar calendar = this.view.calendar;\r\n\t\tvar dragStart = startSpan.start;\r\n\t\tvar dragEnd = endSpan.start;\r\n\t\tvar delta;\r\n\t\tvar dropLocation; // zoned event date properties\r\n\r\n\t\tif (dragStart.hasTime() === dragEnd.hasTime()) {\r\n\t\t\tdelta = this.diffDates(dragEnd, dragStart);\r\n\r\n\t\t\t// if an all-day event was in a timed area and it was dragged to a different time,\r\n\t\t\t// guarantee an end and adjust start/end to have times\r\n\t\t\tif (event.allDay && durationHasTime(delta)) {\r\n\t\t\t\tdropLocation = {\r\n\t\t\t\t\tstart: event.start.clone(),\r\n\t\t\t\t\tend: calendar.getEventEnd(event), // will be an ambig day\r\n\t\t\t\t\tallDay: false // for normalizeEventTimes\r\n\t\t\t\t};\r\n\t\t\t\tcalendar.normalizeEventTimes(dropLocation);\r\n\t\t\t}\r\n\t\t\t// othewise, work off existing values\r\n\t\t\telse {\r\n\t\t\t\tdropLocation = {\r\n\t\t\t\t\tstart: event.start.clone(),\r\n\t\t\t\t\tend: event.end ? event.end.clone() : null,\r\n\t\t\t\t\tallDay: event.allDay // keep it the same\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tdropLocation.start.add(delta);\r\n\t\t\tif (dropLocation.end) {\r\n\t\t\t\tdropLocation.end.add(delta);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// if switching from day <-> timed, start should be reset to the dropped date, and the end cleared\r\n\t\t\tdropLocation = {\r\n\t\t\t\tstart: dragEnd.clone(),\r\n\t\t\t\tend: null, // end should be cleared\r\n\t\t\t\tallDay: !dragEnd.hasTime()\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn dropLocation;\r\n\t},\r\n\r\n\r\n\t// Utility for apply dragOpacity to a jQuery set\r\n\tapplyDragOpacity: function(els) {\r\n\t\tvar opacity = this.view.opt('dragOpacity');\r\n\r\n\t\tif (opacity != null) {\r\n\t\t\tels.each(function(i, node) {\r\n\t\t\t\t// Don't use jQuery (will set an IE filter), do it the old fashioned way.\r\n\t\t\t\t// In IE8, a helper element will disappears if there's a filter.\r\n\t\t\t\tnode.style.opacity = opacity;\r\n\t\t\t});\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* External Element Dragging\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Called when a jQuery UI drag is initiated anywhere in the DOM\r\n\texternalDragStart: function(ev, ui) {\r\n\t\tvar view = this.view;\r\n\t\tvar el;\r\n\t\tvar accept;\r\n\r\n\t\tif (view.opt('droppable')) { // only listen if this setting is on\r\n\t\t\tel = $((ui ? ui.item : null) || ev.target);\r\n\r\n\t\t\t// Test that the dragged element passes the dropAccept selector or filter function.\r\n\t\t\t// FYI, the default is \"*\" (matches all)\r\n\t\t\taccept = view.opt('dropAccept');\r\n\t\t\tif ($.isFunction(accept) ? accept.call(el[0], el) : el.is(accept)) {\r\n\t\t\t\tif (!this.isDraggingExternal) { // prevent double-listening if fired twice\r\n\t\t\t\t\tthis.listenToExternalDrag(el, ev, ui);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Called when a jQuery UI drag starts and it needs to be monitored for dropping\r\n\tlistenToExternalDrag: function(el, ev, ui) {\r\n\t\tvar _this = this;\r\n\t\tvar meta = getDraggedElMeta(el); // extra data about event drop, including possible event to create\r\n\t\tvar dropLocation; // a null value signals an unsuccessful drag\r\n\r\n\t\t// listener that tracks mouse movement over date-associated pixel regions\r\n\t\tvar dragListener = new HitDragListener(this, {\r\n\t\t\tlistenStart: function() {\r\n\t\t\t\t_this.isDraggingExternal = true;\r\n\t\t\t},\r\n\t\t\thitOver: function(hit) {\r\n\t\t\t\tdropLocation = _this.computeExternalDrop(\r\n\t\t\t\t\thit.component.getHitSpan(hit), // since we are querying the parent view, might not belong to this grid\r\n\t\t\t\t\tmeta\r\n\t\t\t\t);\r\n\t\t\t\tif (dropLocation) {\r\n\t\t\t\t\t_this.renderDrag(dropLocation); // called without a seg parameter\r\n\t\t\t\t}\r\n\t\t\t\telse { // invalid hit\r\n\t\t\t\t\tdisableCursor();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thitOut: function() {\r\n\t\t\t\tdropLocation = null; // signal unsuccessful\r\n\t\t\t\t_this.unrenderDrag();\r\n\t\t\t\tenableCursor();\r\n\t\t\t},\r\n\t\t\tdragStop: function() {\r\n\t\t\t\t_this.unrenderDrag();\r\n\t\t\t\tenableCursor();\r\n\r\n\t\t\t\tif (dropLocation) { // element was dropped on a valid hit\r\n\t\t\t\t\t_this.view.reportExternalDrop(meta, dropLocation, el, ev, ui);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlistenStop: function() {\r\n\t\t\t\t_this.isDraggingExternal = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdragListener.startDrag(ev); // start listening immediately\r\n\t},\r\n\r\n\r\n\t// Given a hit to be dropped upon, and misc data associated with the jqui drag (guaranteed to be a plain object),\r\n\t// returns the zoned start/end dates for the event that would result from the hypothetical drop. end might be null.\r\n\t// Returning a null value signals an invalid drop hit.\r\n\tcomputeExternalDrop: function(span, meta) {\r\n\t\tvar calendar = this.view.calendar;\r\n\t\tvar dropLocation = {\r\n\t\t\tstart: calendar.applyTimezone(span.start), // simulate a zoned event start date\r\n\t\t\tend: null\r\n\t\t};\r\n\r\n\t\t// if dropped on an all-day span, and element's metadata specified a time, set it\r\n\t\tif (meta.startTime && !dropLocation.start.hasTime()) {\r\n\t\t\tdropLocation.start.time(meta.startTime);\r\n\t\t}\r\n\r\n\t\tif (meta.duration) {\r\n\t\t\tdropLocation.end = dropLocation.start.clone().add(meta.duration);\r\n\t\t}\r\n\r\n\t\tif (!calendar.isExternalSpanAllowed(this.eventToSpan(dropLocation), dropLocation, meta.eventProps)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn dropLocation;\r\n\t},\r\n\r\n\r\n\r\n\t/* Drag Rendering (for both events and an external elements)\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of an event or external element being dragged.\r\n\t// `dropLocation` contains hypothetical start/end/allDay values the event would have if dropped. end can be null.\r\n\t// `seg` is the internal segment object that is being dragged. If dragging an external element, `seg` is null.\r\n\t// A truthy returned value indicates this method has rendered a helper element.\r\n\trenderDrag: function(dropLocation, seg) {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t// Unrenders a visual indication of an event or external element being dragged\r\n\tunrenderDrag: function() {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t/* Resizing\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Called when the user does a mousedown on an event's resizer, which might lead to resizing.\r\n\t// Generic enough to work with any type of Grid.\r\n\tsegResizeMousedown: function(seg, ev, isStart) {\r\n\t\tvar _this = this;\r\n\t\tvar view = this.view;\r\n\t\tvar calendar = view.calendar;\r\n\t\tvar el = seg.el;\r\n\t\tvar event = seg.event;\r\n\t\tvar eventEnd = calendar.getEventEnd(event);\r\n\t\tvar resizeLocation; // zoned event date properties. falsy if invalid resize\r\n\r\n\t\t// Tracks mouse movement over the *grid's* coordinate map\r\n\t\tvar dragListener = new HitDragListener(this, {\r\n\t\t\tdistance: 5,\r\n\t\t\tscroll: view.opt('dragScroll'),\r\n\t\t\tsubjectEl: el,\r\n\t\t\tdragStart: function(ev) {\r\n\t\t\t\t_this.triggerSegMouseout(seg, ev); // ensure a mouseout on the manipulated event has been reported\r\n\t\t\t\t_this.segResizeStart(seg, ev);\r\n\t\t\t},\r\n\t\t\thitOver: function(hit, isOrig, origHit) {\r\n\t\t\t\tvar origHitSpan = _this.getHitSpan(origHit);\r\n\t\t\t\tvar hitSpan = _this.getHitSpan(hit);\r\n\r\n\t\t\t\tresizeLocation = isStart ?\r\n\t\t\t\t\t_this.computeEventStartResize(origHitSpan, hitSpan, event) :\r\n\t\t\t\t\t_this.computeEventEndResize(origHitSpan, hitSpan, event);\r\n\r\n\t\t\t\tif (resizeLocation) {\r\n\t\t\t\t\tif (!calendar.isEventSpanAllowed(_this.eventToSpan(resizeLocation), event)) {\r\n\t\t\t\t\t\tdisableCursor();\r\n\t\t\t\t\t\tresizeLocation = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// no change? (TODO: how does this work with timezones?)\r\n\t\t\t\t\telse if (resizeLocation.start.isSame(event.start) && resizeLocation.end.isSame(eventEnd)) {\r\n\t\t\t\t\t\tresizeLocation = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (resizeLocation) {\r\n\t\t\t\t\tview.hideEvent(event);\r\n\t\t\t\t\t_this.renderEventResize(resizeLocation, seg);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thitOut: function() { // called before mouse moves to a different hit OR moved out of all hits\r\n\t\t\t\tresizeLocation = null;\r\n\t\t\t},\r\n\t\t\thitDone: function() { // resets the rendering to show the original event\r\n\t\t\t\t_this.unrenderEventResize();\r\n\t\t\t\tview.showEvent(event);\r\n\t\t\t\tenableCursor();\r\n\t\t\t},\r\n\t\t\tdragStop: function(ev) {\r\n\t\t\t\t_this.segResizeStop(seg, ev);\r\n\r\n\t\t\t\tif (resizeLocation) { // valid date to resize to?\r\n\t\t\t\t\tview.reportEventResize(event, resizeLocation, this.largeUnit, el, ev);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdragListener.mousedown(ev); // start listening, which will eventually lead to a dragStart\r\n\t},\r\n\r\n\r\n\t// Called before event segment resizing starts\r\n\tsegResizeStart: function(seg, ev) {\r\n\t\tthis.isResizingSeg = true;\r\n\t\tthis.view.trigger('eventResizeStart', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\r\n\t},\r\n\r\n\r\n\t// Called after event segment resizing stops\r\n\tsegResizeStop: function(seg, ev) {\r\n\t\tthis.isResizingSeg = false;\r\n\t\tthis.view.trigger('eventResizeStop', seg.el[0], seg.event, ev, {}); // last argument is jqui dummy\r\n\t},\r\n\r\n\r\n\t// Returns new date-information for an event segment being resized from its start\r\n\tcomputeEventStartResize: function(startSpan, endSpan, event) {\r\n\t\treturn this.computeEventResize('start', startSpan, endSpan, event);\r\n\t},\r\n\r\n\r\n\t// Returns new date-information for an event segment being resized from its end\r\n\tcomputeEventEndResize: function(startSpan, endSpan, event) {\r\n\t\treturn this.computeEventResize('end', startSpan, endSpan, event);\r\n\t},\r\n\r\n\r\n\t// Returns new zoned date information for an event segment being resized from its start OR end\r\n\t// `type` is either 'start' or 'end'\r\n\tcomputeEventResize: function(type, startSpan, endSpan, event) {\r\n\t\tvar calendar = this.view.calendar;\r\n\t\tvar delta = this.diffDates(endSpan[type], startSpan[type]);\r\n\t\tvar resizeLocation; // zoned event date properties\r\n\t\tvar defaultDuration;\r\n\r\n\t\t// build original values to work from, guaranteeing a start and end\r\n\t\tresizeLocation = {\r\n\t\t\tstart: event.start.clone(),\r\n\t\t\tend: calendar.getEventEnd(event),\r\n\t\t\tallDay: event.allDay\r\n\t\t};\r\n\r\n\t\t// if an all-day event was in a timed area and was resized to a time, adjust start/end to have times\r\n\t\tif (resizeLocation.allDay && durationHasTime(delta)) {\r\n\t\t\tresizeLocation.allDay = false;\r\n\t\t\tcalendar.normalizeEventTimes(resizeLocation);\r\n\t\t}\r\n\r\n\t\tresizeLocation[type].add(delta); // apply delta to start or end\r\n\r\n\t\t// if the event was compressed too small, find a new reasonable duration for it\r\n\t\tif (!resizeLocation.start.isBefore(resizeLocation.end)) {\r\n\r\n\t\t\tdefaultDuration =\r\n\t\t\t\tthis.minResizeDuration || // TODO: hack\r\n\t\t\t\t(event.allDay ?\r\n\t\t\t\t\tcalendar.defaultAllDayEventDuration :\r\n\t\t\t\t\tcalendar.defaultTimedEventDuration);\r\n\r\n\t\t\tif (type == 'start') { // resizing the start?\r\n\t\t\t\tresizeLocation.start = resizeLocation.end.clone().subtract(defaultDuration);\r\n\t\t\t}\r\n\t\t\telse { // resizing the end?\r\n\t\t\t\tresizeLocation.end = resizeLocation.start.clone().add(defaultDuration);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn resizeLocation;\r\n\t},\r\n\r\n\r\n\t// Renders a visual indication of an event being resized.\r\n\t// `range` has the updated dates of the event. `seg` is the original segment object involved in the drag.\r\n\trenderEventResize: function(range, seg) {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t// Unrenders a visual indication of an event being resized.\r\n\tunrenderEventResize: function() {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t/* Rendering Utils\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Compute the text that should be displayed on an event's element.\r\n\t// `range` can be the Event object itself, or something range-like, with at least a `start`.\r\n\t// If event times are disabled, or the event has no time, will return a blank string.\r\n\t// If not specified, formatStr will default to the eventTimeFormat setting,\r\n\t// and displayEnd will default to the displayEventEnd setting.\r\n\tgetEventTimeText: function(range, formatStr, displayEnd) {\r\n\r\n\t\tif (formatStr == null) {\r\n\t\t\tformatStr = this.eventTimeFormat;\r\n\t\t}\r\n\r\n\t\tif (displayEnd == null) {\r\n\t\t\tdisplayEnd = this.displayEventEnd;\r\n\t\t}\r\n\r\n\t\tif (this.displayEventTime && range.start.hasTime()) {\r\n\t\t\tif (displayEnd && range.end) {\r\n\t\t\t\treturn this.view.formatRange(range, formatStr);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn range.start.format(formatStr);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t},\r\n\r\n\r\n\t// Generic utility for generating the HTML classNames for an event segment's element\r\n\tgetSegClasses: function(seg, isDraggable, isResizable) {\r\n\t\tvar event = seg.event;\r\n\t\tvar classes = [\r\n\t\t\t'fc-event',\r\n\t\t\tseg.isStart ? 'fc-start' : 'fc-not-start',\r\n\t\t\tseg.isEnd ? 'fc-end' : 'fc-not-end'\r\n\t\t].concat(\r\n\t\t\tevent.className,\r\n\t\t\tevent.source ? event.source.className : []\r\n\t\t);\r\n\r\n\t\tif (isDraggable) {\r\n\t\t\tclasses.push('fc-draggable');\r\n\t\t}\r\n\t\tif (isResizable) {\r\n\t\t\tclasses.push('fc-resizable');\r\n\t\t}\r\n\r\n\t\treturn classes;\r\n\t},\r\n\r\n\r\n\t// Utility for generating event skin-related CSS properties\r\n\tgetEventSkinCss: function(event) {\r\n\t\tvar view = this.view;\r\n\t\tvar source = event.source || {};\r\n\t\tvar eventColor = event.color;\r\n\t\tvar sourceColor = source.color;\r\n\t\tvar optionColor = view.opt('eventColor');\r\n\r\n\t\treturn {\r\n\t\t\t'background-color':\r\n\t\t\t\tevent.backgroundColor ||\r\n\t\t\t\teventColor ||\r\n\t\t\t\tsource.backgroundColor ||\r\n\t\t\t\tsourceColor ||\r\n\t\t\t\tview.opt('eventBackgroundColor') ||\r\n\t\t\t\toptionColor,\r\n\t\t\t'border-color':\r\n\t\t\t\tevent.borderColor ||\r\n\t\t\t\teventColor ||\r\n\t\t\t\tsource.borderColor ||\r\n\t\t\t\tsourceColor ||\r\n\t\t\t\tview.opt('eventBorderColor') ||\r\n\t\t\t\toptionColor,\r\n\t\t\tcolor:\r\n\t\t\t\tevent.textColor ||\r\n\t\t\t\tsource.textColor ||\r\n\t\t\t\tview.opt('eventTextColor')\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t/* Converting events -> eventRange -> eventSpan -> eventSegs\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Generates an array of segments for the given single event\r\n\teventToSegs: function(event) {\r\n\t\treturn this.eventsToSegs([ event ]);\r\n\t},\r\n\r\n\r\n\t// Generates a single span (always unzoned) by using the given event's dates.\r\n\t// Does not do any inverting for inverse-background events.\r\n\teventToSpan: function(event) {\r\n\t\tvar range = this.eventToRange(event);\r\n\t\tthis.transformEventSpan(range, event); // convert it to a span, in-place\r\n\t\treturn range;\r\n\t},\r\n\r\n\r\n\t// Converts an array of event objects into an array of event segment objects.\r\n\t// A custom `segSliceFunc` may be given for arbitrarily slicing up events.\r\n\t// Doesn't guarantee an order for the resulting array.\r\n\teventsToSegs: function(allEvents, segSliceFunc) {\r\n\t\tvar _this = this;\r\n\t\tvar eventsById = groupEventsById(allEvents);\r\n\t\tvar segs = [];\r\n\r\n\t\t$.each(eventsById, function(id, events) {\r\n\t\t\tvar ranges = [];\r\n\t\t\tvar i;\r\n\r\n\t\t\tfor (i = 0; i < events.length; i++) {\r\n\t\t\t\tranges.push(_this.eventToRange(events[i]));\r\n\t\t\t}\r\n\r\n\t\t\t// inverse-background events (utilize only the first event in calculations)\r\n\t\t\tif (isInverseBgEvent(events[0])) {\r\n\t\t\t\tranges = _this.invertRanges(ranges);\r\n\r\n\t\t\t\tfor (i = 0; i < ranges.length; i++) {\r\n\t\t\t\t\t_this.generateEventSegs(ranges[i], events[0], segSliceFunc, segs);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// normal event ranges\r\n\t\t\telse {\r\n\t\t\t\tfor (i = 0; i < ranges.length; i++) {\r\n\t\t\t\t\t_this.generateEventSegs(ranges[i], events[i], segSliceFunc, segs);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn segs;\r\n\t},\r\n\r\n\r\n\t// Generates the unzoned start/end dates an event appears to occupy\r\n\teventToRange: function(event) {\r\n\t\treturn {\r\n\t\t\tstart: event.start.clone().stripZone(),\r\n\t\t\tend: this.view.calendar.getEventEnd(event).stripZone()\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t// Given an event's span (unzoned start/end and other misc data), and the event itself,\r\n\t// slice into segments (using the segSliceFunc function if specified) and append to the `out` array.\r\n\t// SIDE EFFECT: will mutate the given `range`.\r\n\tgenerateEventSegs: function(range, event, segSliceFunc, out) {\r\n\t\tvar segs;\r\n\t\tvar i;\r\n\r\n\t\tthis.transformEventSpan(range, event); // converts the range to a span\r\n\r\n\t\tsegs = segSliceFunc ? segSliceFunc(range) : this.spanToSegs(range);\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tthis.transformEventSeg(segs[i], range, event);\r\n\t\t\tout.push(segs[i]);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Given a range (unzoned start/end) that is about to become a span,\r\n\t// attach any event-derived properties to it.\r\n\ttransformEventSpan: function(range, event) {\r\n\t\t// subclasses can implement\r\n\t},\r\n\r\n\r\n\t// Given a segment object, attach any extra properties, based off of its source span and event.\r\n\ttransformEventSeg: function(seg, span, event) {\r\n\t\tseg.event = event;\r\n\t\tseg.eventStartMS = +span.start; // TODO: not the best name after making spans unzoned\r\n\t\tseg.eventDurationMS = span.end - span.start;\r\n\t},\r\n\r\n\r\n\t// Produces a new array of range objects that will cover all the time NOT covered by the given ranges.\r\n\t// SIDE EFFECT: will mutate the given array and will use its date references.\r\n\tinvertRanges: function(ranges) {\r\n\t\tvar view = this.view;\r\n\t\tvar viewStart = view.start.clone(); // need a copy\r\n\t\tvar viewEnd = view.end.clone(); // need a copy\r\n\t\tvar inverseRanges = [];\r\n\t\tvar start = viewStart; // the end of the previous range. the start of the new range\r\n\t\tvar i, range;\r\n\r\n\t\t// ranges need to be in order. required for our date-walking algorithm\r\n\t\tranges.sort(compareRanges);\r\n\r\n\t\tfor (i = 0; i < ranges.length; i++) {\r\n\t\t\trange = ranges[i];\r\n\r\n\t\t\t// add the span of time before the event (if there is any)\r\n\t\t\tif (range.start > start) { // compare millisecond time (skip any ambig logic)\r\n\t\t\t\tinverseRanges.push({\r\n\t\t\t\t\tstart: start,\r\n\t\t\t\t\tend: range.start\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tstart = range.end;\r\n\t\t}\r\n\r\n\t\t// add the span of time after the last event (if there is any)\r\n\t\tif (start < viewEnd) { // compare millisecond time (skip any ambig logic)\r\n\t\t\tinverseRanges.push({\r\n\t\t\t\tstart: start,\r\n\t\t\t\tend: viewEnd\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn inverseRanges;\r\n\t},\r\n\r\n\r\n\tsortEventSegs: function(segs) {\r\n\t\tsegs.sort(proxy(this, 'compareEventSegs'));\r\n\t},\r\n\r\n\r\n\t// A cmp function for determining which segments should take visual priority\r\n\tcompareEventSegs: function(seg1, seg2) {\r\n\t\treturn seg1.eventStartMS - seg2.eventStartMS || // earlier events go first\r\n\t\t\tseg2.eventDurationMS - seg1.eventDurationMS || // tie? longer events go first\r\n\t\t\tseg2.event.allDay - seg1.event.allDay || // tie? put all-day events first (booleans cast to 0/1)\r\n\t\t\tcompareByFieldSpecs(seg1.event, seg2.event, this.view.eventOrderSpecs);\r\n\t}\r\n\r\n});\r\n\r\n\r\n/* Utilities\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\nfunction isBgEvent(event) { // returns true if background OR inverse-background\r\n\tvar rendering = getEventRendering(event);\r\n\treturn rendering === 'background' || rendering === 'inverse-background';\r\n}\r\n\r\n\r\nfunction isInverseBgEvent(event) {\r\n\treturn getEventRendering(event) === 'inverse-background';\r\n}\r\n\r\n\r\nfunction getEventRendering(event) {\r\n\treturn firstDefined((event.source || {}).rendering, event.rendering);\r\n}\r\n\r\n\r\nfunction groupEventsById(events) {\r\n\tvar eventsById = {};\r\n\tvar i, event;\r\n\r\n\tfor (i = 0; i < events.length; i++) {\r\n\t\tevent = events[i];\r\n\t\t(eventsById[event._id] || (eventsById[event._id] = [])).push(event);\r\n\t}\r\n\r\n\treturn eventsById;\r\n}\r\n\r\n\r\n// A cmp function for determining which non-inverted \"ranges\" (see above) happen earlier\r\nfunction compareRanges(range1, range2) {\r\n\treturn range1.start - range2.start; // earlier ranges go first\r\n}\r\n\r\n\r\n/* External-Dragging-Element Data\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\n// Require all HTML5 data-* attributes used by FullCalendar to have this prefix.\r\n// A value of '' will query attributes like data-event. A value of 'fc' will query attributes like data-fc-event.\r\nFC.dataAttrPrefix = '';\r\n\r\n// Given a jQuery element that might represent a dragged FullCalendar event, returns an intermediate data structure\r\n// to be used for Event Object creation.\r\n// A defined `.eventProps`, even when empty, indicates that an event should be created.\r\nfunction getDraggedElMeta(el) {\r\n\tvar prefix = FC.dataAttrPrefix;\r\n\tvar eventProps; // properties for creating the event, not related to date/time\r\n\tvar startTime; // a Duration\r\n\tvar duration;\r\n\tvar stick;\r\n\r\n\tif (prefix) { prefix += '-'; }\r\n\teventProps = el.data(prefix + 'event') || null;\r\n\r\n\tif (eventProps) {\r\n\t\tif (typeof eventProps === 'object') {\r\n\t\t\teventProps = $.extend({}, eventProps); // make a copy\r\n\t\t}\r\n\t\telse { // something like 1 or true. still signal event creation\r\n\t\t\teventProps = {};\r\n\t\t}\r\n\r\n\t\t// pluck special-cased date/time properties\r\n\t\tstartTime = eventProps.start;\r\n\t\tif (startTime == null) { startTime = eventProps.time; } // accept 'time' as well\r\n\t\tduration = eventProps.duration;\r\n\t\tstick = eventProps.stick;\r\n\t\tdelete eventProps.start;\r\n\t\tdelete eventProps.time;\r\n\t\tdelete eventProps.duration;\r\n\t\tdelete eventProps.stick;\r\n\t}\r\n\r\n\t// fallback to standalone attribute values for each of the date/time properties\r\n\tif (startTime == null) { startTime = el.data(prefix + 'start'); }\r\n\tif (startTime == null) { startTime = el.data(prefix + 'time'); } // accept 'time' as well\r\n\tif (duration == null) { duration = el.data(prefix + 'duration'); }\r\n\tif (stick == null) { stick = el.data(prefix + 'stick'); }\r\n\r\n\t// massage into correct data types\r\n\tstartTime = startTime != null ? moment.duration(startTime) : null;\r\n\tduration = duration != null ? moment.duration(duration) : null;\r\n\tstick = Boolean(stick);\r\n\r\n\treturn { eventProps: eventProps, startTime: startTime, duration: duration, stick: stick };\r\n}\r\n\r\n\r\n;;\r\n\r\n/*\r\nA set of rendering and date-related methods for a visual component comprised of one or more rows of day columns.\r\nPrerequisite: the object being mixed into needs to be a *Grid*\r\n*/\r\nvar DayTableMixin = FC.DayTableMixin = {\r\n\r\n\tbreakOnWeeks: false, // should create a new row for each week?\r\n\tdayDates: null, // whole-day dates for each column. left to right\r\n\tdayIndices: null, // for each day from start, the offset\r\n\tdaysPerRow: null,\r\n\trowCnt: null,\r\n\tcolCnt: null,\r\n\tcolHeadFormat: null,\r\n\r\n\r\n\t// Populates internal variables used for date calculation and rendering\r\n\tupdateDayTable: function() {\r\n\t\tvar view = this.view;\r\n\t\tvar date = this.start.clone();\r\n\t\tvar dayIndex = -1;\r\n\t\tvar dayIndices = [];\r\n\t\tvar dayDates = [];\r\n\t\tvar daysPerRow;\r\n\t\tvar firstDay;\r\n\t\tvar rowCnt;\r\n\r\n\t\twhile (date.isBefore(this.end)) { // loop each day from start to end\r\n\t\t\tif (view.isHiddenDay(date)) {\r\n\t\t\t\tdayIndices.push(dayIndex + 0.5); // mark that it's between indices\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdayIndex++;\r\n\t\t\t\tdayIndices.push(dayIndex);\r\n\t\t\t\tdayDates.push(date.clone());\r\n\t\t\t}\r\n\t\t\tdate.add(1, 'days');\r\n\t\t}\r\n\r\n\t\tif (this.breakOnWeeks) {\r\n\t\t\t// count columns until the day-of-week repeats\r\n\t\t\tfirstDay = dayDates[0].day();\r\n\t\t\tfor (daysPerRow = 1; daysPerRow < dayDates.length; daysPerRow++) {\r\n\t\t\t\tif (dayDates[daysPerRow].day() == firstDay) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trowCnt = Math.ceil(dayDates.length / daysPerRow);\r\n\t\t}\r\n\t\telse {\r\n\t\t\trowCnt = 1;\r\n\t\t\tdaysPerRow = dayDates.length;\r\n\t\t}\r\n\r\n\t\tthis.dayDates = dayDates;\r\n\t\tthis.dayIndices = dayIndices;\r\n\t\tthis.daysPerRow = daysPerRow;\r\n\t\tthis.rowCnt = rowCnt;\r\n\t\t\r\n\t\tthis.updateDayTableCols();\r\n\t},\r\n\r\n\r\n\t// Computes and assigned the colCnt property and updates any options that may be computed from it\r\n\tupdateDayTableCols: function() {\r\n\t\tthis.colCnt = this.computeColCnt();\r\n\t\tthis.colHeadFormat = this.view.opt('columnFormat') || this.computeColHeadFormat();\r\n\t},\r\n\r\n\r\n\t// Determines how many columns there should be in the table\r\n\tcomputeColCnt: function() {\r\n\t\treturn this.daysPerRow;\r\n\t},\r\n\r\n\r\n\t// Computes the ambiguously-timed moment for the given cell\r\n\tgetCellDate: function(row, col) {\r\n\t\treturn this.dayDates[\r\n\t\t\t\tthis.getCellDayIndex(row, col)\r\n\t\t\t].clone();\r\n\t},\r\n\r\n\r\n\t// Computes the ambiguously-timed date range for the given cell\r\n\tgetCellRange: function(row, col) {\r\n\t\tvar start = this.getCellDate(row, col);\r\n\t\tvar end = start.clone().add(1, 'days');\r\n\r\n\t\treturn { start: start, end: end };\r\n\t},\r\n\r\n\r\n\t// Returns the number of day cells, chronologically, from the first of the grid (0-based)\r\n\tgetCellDayIndex: function(row, col) {\r\n\t\treturn row * this.daysPerRow + this.getColDayIndex(col);\r\n\t},\r\n\r\n\r\n\t// Returns the numner of day cells, chronologically, from the first cell in *any given row*\r\n\tgetColDayIndex: function(col) {\r\n\t\tif (this.isRTL) {\r\n\t\t\treturn this.colCnt - 1 - col;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn col;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Given a date, returns its chronolocial cell-index from the first cell of the grid.\r\n\t// If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.\r\n\t// If before the first offset, returns a negative number.\r\n\t// If after the last offset, returns an offset past the last cell offset.\r\n\t// Only works for *start* dates of cells. Will not work for exclusive end dates for cells.\r\n\tgetDateDayIndex: function(date) {\r\n\t\tvar dayIndices = this.dayIndices;\r\n\t\tvar dayOffset = date.diff(this.start, 'days');\r\n\r\n\t\tif (dayOffset < 0) {\r\n\t\t\treturn dayIndices[0] - 1;\r\n\t\t}\r\n\t\telse if (dayOffset >= dayIndices.length) {\r\n\t\t\treturn dayIndices[dayIndices.length - 1] + 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn dayIndices[dayOffset];\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Options\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Computes a default column header formatting string if `colFormat` is not explicitly defined\r\n\tcomputeColHeadFormat: function() {\r\n\t\t// if more than one week row, or if there are a lot of columns with not much space,\r\n\t\t// put just the day numbers will be in each cell\r\n\t\tif (this.rowCnt > 1 || this.colCnt > 10) {\r\n\t\t\treturn 'ddd'; // \"Sat\"\r\n\t\t}\r\n\t\t// multiple days, so full single date string WON'T be in title text\r\n\t\telse if (this.colCnt > 1) {\r\n\t\t\treturn this.view.opt('dayOfMonthFormat'); // \"Sat 12/10\"\r\n\t\t}\r\n\t\t// single day, so full single date string will probably be in title text\r\n\t\telse {\r\n\t\t\treturn 'dddd'; // \"Saturday\"\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Slicing\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Slices up a date range into a segment for every week-row it intersects with\r\n\tsliceRangeByRow: function(range) {\r\n\t\tvar daysPerRow = this.daysPerRow;\r\n\t\tvar normalRange = this.view.computeDayRange(range); // make whole-day range, considering nextDayThreshold\r\n\t\tvar rangeFirst = this.getDateDayIndex(normalRange.start); // inclusive first index\r\n\t\tvar rangeLast = this.getDateDayIndex(normalRange.end.clone().subtract(1, 'days')); // inclusive last index\r\n\t\tvar segs = [];\r\n\t\tvar row;\r\n\t\tvar rowFirst, rowLast; // inclusive day-index range for current row\r\n\t\tvar segFirst, segLast; // inclusive day-index range for segment\r\n\r\n\t\tfor (row = 0; row < this.rowCnt; row++) {\r\n\t\t\trowFirst = row * daysPerRow;\r\n\t\t\trowLast = rowFirst + daysPerRow - 1;\r\n\r\n\t\t\t// intersect segment's offset range with the row's\r\n\t\t\tsegFirst = Math.max(rangeFirst, rowFirst);\r\n\t\t\tsegLast = Math.min(rangeLast, rowLast);\r\n\r\n\t\t\t// deal with in-between indices\r\n\t\t\tsegFirst = Math.ceil(segFirst); // in-between starts round to next cell\r\n\t\t\tsegLast = Math.floor(segLast); // in-between ends round to prev cell\r\n\r\n\t\t\tif (segFirst <= segLast) { // was there any intersection with the current row?\r\n\t\t\t\tsegs.push({\r\n\t\t\t\t\trow: row,\r\n\r\n\t\t\t\t\t// normalize to start of row\r\n\t\t\t\t\tfirstRowDayIndex: segFirst - rowFirst,\r\n\t\t\t\t\tlastRowDayIndex: segLast - rowFirst,\r\n\r\n\t\t\t\t\t// must be matching integers to be the segment's start/end\r\n\t\t\t\t\tisStart: segFirst === rangeFirst,\r\n\t\t\t\t\tisEnd: segLast === rangeLast\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn segs;\r\n\t},\r\n\r\n\r\n\t// Slices up a date range into a segment for every day-cell it intersects with.\r\n\t// TODO: make more DRY with sliceRangeByRow somehow.\r\n\tsliceRangeByDay: function(range) {\r\n\t\tvar daysPerRow = this.daysPerRow;\r\n\t\tvar normalRange = this.view.computeDayRange(range); // make whole-day range, considering nextDayThreshold\r\n\t\tvar rangeFirst = this.getDateDayIndex(normalRange.start); // inclusive first index\r\n\t\tvar rangeLast = this.getDateDayIndex(normalRange.end.clone().subtract(1, 'days')); // inclusive last index\r\n\t\tvar segs = [];\r\n\t\tvar row;\r\n\t\tvar rowFirst, rowLast; // inclusive day-index range for current row\r\n\t\tvar i;\r\n\t\tvar segFirst, segLast; // inclusive day-index range for segment\r\n\r\n\t\tfor (row = 0; row < this.rowCnt; row++) {\r\n\t\t\trowFirst = row * daysPerRow;\r\n\t\t\trowLast = rowFirst + daysPerRow - 1;\r\n\r\n\t\t\tfor (i = rowFirst; i <= rowLast; i++) {\r\n\r\n\t\t\t\t// intersect segment's offset range with the row's\r\n\t\t\t\tsegFirst = Math.max(rangeFirst, i);\r\n\t\t\t\tsegLast = Math.min(rangeLast, i);\r\n\r\n\t\t\t\t// deal with in-between indices\r\n\t\t\t\tsegFirst = Math.ceil(segFirst); // in-between starts round to next cell\r\n\t\t\t\tsegLast = Math.floor(segLast); // in-between ends round to prev cell\r\n\r\n\t\t\t\tif (segFirst <= segLast) { // was there any intersection with the current row?\r\n\t\t\t\t\tsegs.push({\r\n\t\t\t\t\t\trow: row,\r\n\r\n\t\t\t\t\t\t// normalize to start of row\r\n\t\t\t\t\t\tfirstRowDayIndex: segFirst - rowFirst,\r\n\t\t\t\t\t\tlastRowDayIndex: segLast - rowFirst,\r\n\r\n\t\t\t\t\t\t// must be matching integers to be the segment's start/end\r\n\t\t\t\t\t\tisStart: segFirst === rangeFirst,\r\n\t\t\t\t\t\tisEnd: segLast === rangeLast\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn segs;\r\n\t},\r\n\r\n\r\n\t/* Header Rendering\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\trenderHeadHtml: function() {\r\n\t\tvar view = this.view;\r\n\r\n\t\treturn '' +\r\n\t\t\t'<div class=\"fc-row ' + view.widgetHeaderClass + '\">' +\r\n\t\t\t\t'<table>' +\r\n\t\t\t\t\t'<thead>' +\r\n\t\t\t\t\t\tthis.renderHeadTrHtml() +\r\n\t\t\t\t\t'</thead>' +\r\n\t\t\t\t'</table>' +\r\n\t\t\t'</div>';\r\n\t},\r\n\r\n\r\n\trenderHeadIntroHtml: function() {\r\n\t\treturn this.renderIntroHtml(); // fall back to generic\r\n\t},\r\n\r\n\r\n\trenderHeadTrHtml: function() {\r\n\t\treturn '' +\r\n\t\t\t'<tr>' +\r\n\t\t\t\t(this.isRTL ? '' : this.renderHeadIntroHtml()) +\r\n\t\t\t\tthis.renderHeadDateCellsHtml() +\r\n\t\t\t\t(this.isRTL ? this.renderHeadIntroHtml() : '') +\r\n\t\t\t'</tr>';\r\n\t},\r\n\r\n\r\n\trenderHeadDateCellsHtml: function() {\r\n\t\tvar htmls = [];\r\n\t\tvar col, date;\r\n\r\n\t\tfor (col = 0; col < this.colCnt; col++) {\r\n\t\t\tdate = this.getCellDate(0, col);\r\n\t\t\thtmls.push(this.renderHeadDateCellHtml(date));\r\n\t\t}\r\n\r\n\t\treturn htmls.join('');\r\n\t},\r\n\r\n\r\n\trenderHeadDateCellHtml: function(date, colspan) {\r\n\t\tvar view = this.view;\r\n\r\n\t\treturn '' +\r\n\t\t\t'<th class=\"fc-day-header ' + view.widgetHeaderClass + ' fc-' + dayIDs[date.day()] + '\"' +\r\n\t\t\t\t(colspan > 1 ? ' colspan=\"' + colspan + '\"' : '') +\r\n\t\t\t\t'>' +\r\n\t\t\t\thtmlEscape(date.format(this.colHeadFormat)) +\r\n\t\t\t'</th>';\r\n\t},\r\n\r\n\r\n\t/* Background Rendering\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\trenderBgTrHtml: function(row) {\r\n\t\treturn '' +\r\n\t\t\t'<tr>' +\r\n\t\t\t\t(this.isRTL ? '' : this.renderBgIntroHtml(row)) +\r\n\t\t\t\tthis.renderBgCellsHtml(row) +\r\n\t\t\t\t(this.isRTL ? this.renderBgIntroHtml(row) : '') +\r\n\t\t\t'</tr>';\r\n\t},\r\n\r\n\r\n\trenderBgIntroHtml: function(row) {\r\n\t\treturn this.renderIntroHtml(); // fall back to generic\r\n\t},\r\n\r\n\r\n\trenderBgCellsHtml: function(row) {\r\n\t\tvar htmls = [];\r\n\t\tvar col, date;\r\n\r\n\t\tfor (col = 0; col < this.colCnt; col++) {\r\n\t\t\tdate = this.getCellDate(row, col);\r\n\t\t\thtmls.push(this.renderBgCellHtml(date));\r\n\t\t}\r\n\r\n\t\treturn htmls.join('');\r\n\t},\r\n\r\n\r\n\trenderBgCellHtml: function(date) {\r\n\t\tvar view = this.view;\r\n\t\tvar classes = this.getDayClasses(date);\r\n\r\n\t\tclasses.unshift('fc-day', view.widgetContentClass);\r\n\r\n\t\treturn '<td class=\"' + classes.join(' ') + '\"' +\r\n\t\t\t' data-date=\"' + date.format('YYYY-MM-DD') + '\"' + // if date has a time, won't format it\r\n\t\t\t'></td>';\r\n\t},\r\n\r\n\r\n\t/* Generic\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Generates the default HTML intro for any row. User classes should override\r\n\trenderIntroHtml: function() {\r\n\t},\r\n\r\n\r\n\t/* Utils\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Applies the generic \"intro\" and \"outro\" HTML to the given cells.\r\n\t// Intro means the leftmost cell when the calendar is LTR and the rightmost cell when RTL. Vice-versa for outro.\r\n\tbookendCells: function(trEl) {\r\n\t\tvar introHtml = this.renderIntroHtml();\r\n\r\n\t\tif (introHtml) {\r\n\t\t\tif (this.isRTL) {\r\n\t\t\t\ttrEl.append(introHtml);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttrEl.prepend(introHtml);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\n;;\r\n\r\n/* A component that renders a grid of whole-days that runs horizontally. There can be multiple rows, one per week.\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nvar DayGrid = FC.DayGrid = Grid.extend(DayTableMixin, {\r\n\r\n\tnumbersVisible: false, // should render a row for day/week numbers? set by outside view. TODO: make internal\r\n\tbottomCoordPadding: 0, // hack for extending the hit area for the last row of the coordinate grid\r\n\r\n\trowEls: null, // set of fake row elements\r\n\tcellEls: null, // set of whole-day elements comprising the row's background\r\n\thelperEls: null, // set of cell skeleton elements for rendering the mock event \"helper\"\r\n\r\n\trowCoordCache: null,\r\n\tcolCoordCache: null,\r\n\r\n\r\n\t// Renders the rows and columns into the component's `this.el`, which should already be assigned.\r\n\t// isRigid determins whether the individual rows should ignore the contents and be a constant height.\r\n\t// Relies on the view's colCnt and rowCnt. In the future, this component should probably be self-sufficient.\r\n\trenderDates: function(isRigid) {\r\n\t\tvar view = this.view;\r\n\t\tvar rowCnt = this.rowCnt;\r\n\t\tvar colCnt = this.colCnt;\r\n\t\tvar html = '';\r\n\t\tvar row;\r\n\t\tvar col;\r\n\r\n\t\tfor (row = 0; row < rowCnt; row++) {\r\n\t\t\thtml += this.renderDayRowHtml(row, isRigid);\r\n\t\t}\r\n\t\tthis.el.html(html);\r\n\r\n\t\tthis.rowEls = this.el.find('.fc-row');\r\n\t\tthis.cellEls = this.el.find('.fc-day');\r\n\r\n\t\tthis.rowCoordCache = new CoordCache({\r\n\t\t\tels: this.rowEls,\r\n\t\t\tisVertical: true\r\n\t\t});\r\n\t\tthis.colCoordCache = new CoordCache({\r\n\t\t\tels: this.cellEls.slice(0, this.colCnt), // only the first row\r\n\t\t\tisHorizontal: true\r\n\t\t});\r\n\r\n\t\t// trigger dayRender with each cell's element\r\n\t\tfor (row = 0; row < rowCnt; row++) {\r\n\t\t\tfor (col = 0; col < colCnt; col++) {\r\n\t\t\t\tview.trigger(\r\n\t\t\t\t\t'dayRender',\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tthis.getCellDate(row, col),\r\n\t\t\t\t\tthis.getCellEl(row, col)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tunrenderDates: function() {\r\n\t\tthis.removeSegPopover();\r\n\t},\r\n\r\n\r\n\trenderBusinessHours: function() {\r\n\t\tvar events = this.view.calendar.getBusinessHoursEvents(true); // wholeDay=true\r\n\t\tvar segs = this.eventsToSegs(events);\r\n\r\n\t\tthis.renderFill('businessHours', segs, 'bgevent');\r\n\t},\r\n\r\n\r\n\t// Generates the HTML for a single row, which is a div that wraps a table.\r\n\t// `row` is the row number.\r\n\trenderDayRowHtml: function(row, isRigid) {\r\n\t\tvar view = this.view;\r\n\t\tvar classes = [ 'fc-row', 'fc-week', view.widgetContentClass ];\r\n\r\n\t\tif (isRigid) {\r\n\t\t\tclasses.push('fc-rigid');\r\n\t\t}\r\n\r\n\t\treturn '' +\r\n\t\t\t'<div class=\"' + classes.join(' ') + '\">' +\r\n\t\t\t\t'<div class=\"fc-bg\">' +\r\n\t\t\t\t\t'<table>' +\r\n\t\t\t\t\t\tthis.renderBgTrHtml(row) +\r\n\t\t\t\t\t'</table>' +\r\n\t\t\t\t'</div>' +\r\n\t\t\t\t'<div class=\"fc-content-skeleton\">' +\r\n\t\t\t\t\t'<table>' +\r\n\t\t\t\t\t\t(this.numbersVisible ?\r\n\t\t\t\t\t\t\t'<thead>' +\r\n\t\t\t\t\t\t\t\tthis.renderNumberTrHtml(row) +\r\n\t\t\t\t\t\t\t'</thead>' :\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t'</table>' +\r\n\t\t\t\t'</div>' +\r\n\t\t\t'</div>';\r\n\t},\r\n\r\n\r\n\t/* Grid Number Rendering\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\trenderNumberTrHtml: function(row) {\r\n\t\treturn '' +\r\n\t\t\t'<tr>' +\r\n\t\t\t\t(this.isRTL ? '' : this.renderNumberIntroHtml(row)) +\r\n\t\t\t\tthis.renderNumberCellsHtml(row) +\r\n\t\t\t\t(this.isRTL ? this.renderNumberIntroHtml(row) : '') +\r\n\t\t\t'</tr>';\r\n\t},\r\n\r\n\r\n\trenderNumberIntroHtml: function(row) {\r\n\t\treturn this.renderIntroHtml();\r\n\t},\r\n\r\n\r\n\trenderNumberCellsHtml: function(row) {\r\n\t\tvar htmls = [];\r\n\t\tvar col, date;\r\n\r\n\t\tfor (col = 0; col < this.colCnt; col++) {\r\n\t\t\tdate = this.getCellDate(row, col);\r\n\t\t\thtmls.push(this.renderNumberCellHtml(date));\r\n\t\t}\r\n\r\n\t\treturn htmls.join('');\r\n\t},\r\n\r\n\r\n\t// Generates the HTML for the <td>s of the \"number\" row in the DayGrid's content skeleton.\r\n\t// The number row will only exist if either day numbers or week numbers are turned on.\r\n\trenderNumberCellHtml: function(date) {\r\n\t\tvar classes;\r\n\r\n\t\tif (!this.view.dayNumbersVisible) { // if there are week numbers but not day numbers\r\n\t\t\treturn '<td/>'; //  will create an empty space above events :(\r\n\t\t}\r\n\r\n\t\tclasses = this.getDayClasses(date);\r\n\t\tclasses.unshift('fc-day-number');\r\n\r\n\t\treturn '' +\r\n\t\t\t'<td class=\"' + classes.join(' ') + '\" data-date=\"' + date.format() + '\">' +\r\n\t\t\t\tdate.date() +\r\n\t\t\t'</td>';\r\n\t},\r\n\r\n\r\n\t/* Options\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Computes a default event time formatting string if `timeFormat` is not explicitly defined\r\n\tcomputeEventTimeFormat: function() {\r\n\t\treturn this.view.opt('extraSmallTimeFormat'); // like \"6p\" or \"6:30p\"\r\n\t},\r\n\r\n\r\n\t// Computes a default `displayEventEnd` value if one is not expliclty defined\r\n\tcomputeDisplayEventEnd: function() {\r\n\t\treturn this.colCnt == 1; // we'll likely have space if there's only one day\r\n\t},\r\n\r\n\r\n\t/* Dates\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\trangeUpdated: function() {\r\n\t\tthis.updateDayTable();\r\n\t},\r\n\r\n\r\n\t// Slices up the given span (unzoned start/end with other misc data) into an array of segments\r\n\tspanToSegs: function(span) {\r\n\t\tvar segs = this.sliceRangeByRow(span);\r\n\t\tvar i, seg;\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tseg = segs[i];\r\n\t\t\tif (this.isRTL) {\r\n\t\t\t\tseg.leftCol = this.daysPerRow - 1 - seg.lastRowDayIndex;\r\n\t\t\t\tseg.rightCol = this.daysPerRow - 1 - seg.firstRowDayIndex;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tseg.leftCol = seg.firstRowDayIndex;\r\n\t\t\t\tseg.rightCol = seg.lastRowDayIndex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn segs;\r\n\t},\r\n\r\n\r\n\t/* Hit System\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\tprepareHits: function() {\r\n\t\tthis.colCoordCache.build();\r\n\t\tthis.rowCoordCache.build();\r\n\t\tthis.rowCoordCache.bottoms[this.rowCnt - 1] += this.bottomCoordPadding; // hack\r\n\t},\r\n\r\n\r\n\treleaseHits: function() {\r\n\t\tthis.colCoordCache.clear();\r\n\t\tthis.rowCoordCache.clear();\r\n\t},\r\n\r\n\r\n\tqueryHit: function(leftOffset, topOffset) {\r\n\t\tvar col = this.colCoordCache.getHorizontalIndex(leftOffset);\r\n\t\tvar row = this.rowCoordCache.getVerticalIndex(topOffset);\r\n\r\n\t\tif (row != null && col != null) {\r\n\t\t\treturn this.getCellHit(row, col);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tgetHitSpan: function(hit) {\r\n\t\treturn this.getCellRange(hit.row, hit.col);\r\n\t},\r\n\r\n\r\n\tgetHitEl: function(hit) {\r\n\t\treturn this.getCellEl(hit.row, hit.col);\r\n\t},\r\n\r\n\r\n\t/* Cell System\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\t// FYI: the first column is the leftmost column, regardless of date\r\n\r\n\r\n\tgetCellHit: function(row, col) {\r\n\t\treturn {\r\n\t\t\trow: row,\r\n\t\t\tcol: col,\r\n\t\t\tcomponent: this, // needed unfortunately :(\r\n\t\t\tleft: this.colCoordCache.getLeftOffset(col),\r\n\t\t\tright: this.colCoordCache.getRightOffset(col),\r\n\t\t\ttop: this.rowCoordCache.getTopOffset(row),\r\n\t\t\tbottom: this.rowCoordCache.getBottomOffset(row)\r\n\t\t};\r\n\t},\r\n\r\n\r\n\tgetCellEl: function(row, col) {\r\n\t\treturn this.cellEls.eq(row * this.colCnt + col);\r\n\t},\r\n\r\n\r\n\t/* Event Drag Visualization\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\t// TODO: move to DayGrid.event, similar to what we did with Grid's drag methods\r\n\r\n\r\n\t// Renders a visual indication of an event or external element being dragged.\r\n\t// `eventLocation` has zoned start and end (optional)\r\n\trenderDrag: function(eventLocation, seg) {\r\n\r\n\t\t// always render a highlight underneath\r\n\t\tthis.renderHighlight(this.eventToSpan(eventLocation));\r\n\r\n\t\t// if a segment from the same calendar but another component is being dragged, render a helper event\r\n\t\tif (seg && !seg.el.closest(this.el).length) {\r\n\r\n\t\t\tthis.renderEventLocationHelper(eventLocation, seg);\r\n\t\t\tthis.applyDragOpacity(this.helperEls);\r\n\r\n\t\t\treturn true; // a helper has been rendered\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Unrenders any visual indication of a hovering event\r\n\tunrenderDrag: function() {\r\n\t\tthis.unrenderHighlight();\r\n\t\tthis.unrenderHelper();\r\n\t},\r\n\r\n\r\n\t/* Event Resize Visualization\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of an event being resized\r\n\trenderEventResize: function(eventLocation, seg) {\r\n\t\tthis.renderHighlight(this.eventToSpan(eventLocation));\r\n\t\tthis.renderEventLocationHelper(eventLocation, seg);\r\n\t},\r\n\r\n\r\n\t// Unrenders a visual indication of an event being resized\r\n\tunrenderEventResize: function() {\r\n\t\tthis.unrenderHighlight();\r\n\t\tthis.unrenderHelper();\r\n\t},\r\n\r\n\r\n\t/* Event Helper\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a mock \"helper\" event. `sourceSeg` is the associated internal segment object. It can be null.\r\n\trenderHelper: function(event, sourceSeg) {\r\n\t\tvar helperNodes = [];\r\n\t\tvar segs = this.eventToSegs(event);\r\n\t\tvar rowStructs;\r\n\r\n\t\tsegs = this.renderFgSegEls(segs); // assigns each seg's el and returns a subset of segs that were rendered\r\n\t\trowStructs = this.renderSegRows(segs);\r\n\r\n\t\t// inject each new event skeleton into each associated row\r\n\t\tthis.rowEls.each(function(row, rowNode) {\r\n\t\t\tvar rowEl = $(rowNode); // the .fc-row\r\n\t\t\tvar skeletonEl = $('<div class=\"fc-helper-skeleton\"><table/></div>'); // will be absolutely positioned\r\n\t\t\tvar skeletonTop;\r\n\r\n\t\t\t// If there is an original segment, match the top position. Otherwise, put it at the row's top level\r\n\t\t\tif (sourceSeg && sourceSeg.row === row) {\r\n\t\t\t\tskeletonTop = sourceSeg.el.position().top;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tskeletonTop = rowEl.find('.fc-content-skeleton tbody').position().top;\r\n\t\t\t}\r\n\r\n\t\t\tskeletonEl.css('top', skeletonTop)\r\n\t\t\t\t.find('table')\r\n\t\t\t\t\t.append(rowStructs[row].tbodyEl);\r\n\r\n\t\t\trowEl.append(skeletonEl);\r\n\t\t\thelperNodes.push(skeletonEl[0]);\r\n\t\t});\r\n\r\n\t\tthis.helperEls = $(helperNodes); // array -> jQuery set\r\n\t},\r\n\r\n\r\n\t// Unrenders any visual indication of a mock helper event\r\n\tunrenderHelper: function() {\r\n\t\tif (this.helperEls) {\r\n\t\t\tthis.helperEls.remove();\r\n\t\t\tthis.helperEls = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Fill System (highlight, background events, business hours)\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\tfillSegTag: 'td', // override the default tag name\r\n\r\n\r\n\t// Renders a set of rectangles over the given segments of days.\r\n\t// Only returns segments that successfully rendered.\r\n\trenderFill: function(type, segs, className) {\r\n\t\tvar nodes = [];\r\n\t\tvar i, seg;\r\n\t\tvar skeletonEl;\r\n\r\n\t\tsegs = this.renderFillSegEls(type, segs); // assignes `.el` to each seg. returns successfully rendered segs\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tseg = segs[i];\r\n\t\t\tskeletonEl = this.renderFillRow(type, seg, className);\r\n\t\t\tthis.rowEls.eq(seg.row).append(skeletonEl);\r\n\t\t\tnodes.push(skeletonEl[0]);\r\n\t\t}\r\n\r\n\t\tthis.elsByFill[type] = $(nodes);\r\n\r\n\t\treturn segs;\r\n\t},\r\n\r\n\r\n\t// Generates the HTML needed for one row of a fill. Requires the seg's el to be rendered.\r\n\trenderFillRow: function(type, seg, className) {\r\n\t\tvar colCnt = this.colCnt;\r\n\t\tvar startCol = seg.leftCol;\r\n\t\tvar endCol = seg.rightCol + 1;\r\n\t\tvar skeletonEl;\r\n\t\tvar trEl;\r\n\r\n\t\tclassName = className || type.toLowerCase();\r\n\r\n\t\tskeletonEl = $(\r\n\t\t\t'<div class=\"fc-' + className + '-skeleton\">' +\r\n\t\t\t\t'<table><tr/></table>' +\r\n\t\t\t'</div>'\r\n\t\t);\r\n\t\ttrEl = skeletonEl.find('tr');\r\n\r\n\t\tif (startCol > 0) {\r\n\t\t\ttrEl.append('<td colspan=\"' + startCol + '\"/>');\r\n\t\t}\r\n\r\n\t\ttrEl.append(\r\n\t\t\tseg.el.attr('colspan', endCol - startCol)\r\n\t\t);\r\n\r\n\t\tif (endCol < colCnt) {\r\n\t\t\ttrEl.append('<td colspan=\"' + (colCnt - endCol) + '\"/>');\r\n\t\t}\r\n\r\n\t\tthis.bookendCells(trEl);\r\n\r\n\t\treturn skeletonEl;\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\n/* Event-rendering methods for the DayGrid class\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nDayGrid.mixin({\r\n\r\n\trowStructs: null, // an array of objects, each holding information about a row's foreground event-rendering\r\n\r\n\r\n\t// Unrenders all events currently rendered on the grid\r\n\tunrenderEvents: function() {\r\n\t\tthis.removeSegPopover(); // removes the \"more..\" events popover\r\n\t\tGrid.prototype.unrenderEvents.apply(this, arguments); // calls the super-method\r\n\t},\r\n\r\n\r\n\t// Retrieves all rendered segment objects currently rendered on the grid\r\n\tgetEventSegs: function() {\r\n\t\treturn Grid.prototype.getEventSegs.call(this) // get the segments from the super-method\r\n\t\t\t.concat(this.popoverSegs || []); // append the segments from the \"more...\" popover\r\n\t},\r\n\r\n\r\n\t// Renders the given background event segments onto the grid\r\n\trenderBgSegs: function(segs) {\r\n\r\n\t\t// don't render timed background events\r\n\t\tvar allDaySegs = $.grep(segs, function(seg) {\r\n\t\t\treturn seg.event.allDay;\r\n\t\t});\r\n\r\n\t\treturn Grid.prototype.renderBgSegs.call(this, allDaySegs); // call the super-method\r\n\t},\r\n\r\n\r\n\t// Renders the given foreground event segments onto the grid\r\n\trenderFgSegs: function(segs) {\r\n\t\tvar rowStructs;\r\n\r\n\t\t// render an `.el` on each seg\r\n\t\t// returns a subset of the segs. segs that were actually rendered\r\n\t\tsegs = this.renderFgSegEls(segs);\r\n\r\n\t\trowStructs = this.rowStructs = this.renderSegRows(segs);\r\n\r\n\t\t// append to each row's content skeleton\r\n\t\tthis.rowEls.each(function(i, rowNode) {\r\n\t\t\t$(rowNode).find('.fc-content-skeleton > table').append(\r\n\t\t\t\trowStructs[i].tbodyEl\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn segs; // return only the segs that were actually rendered\r\n\t},\r\n\r\n\r\n\t// Unrenders all currently rendered foreground event segments\r\n\tunrenderFgSegs: function() {\r\n\t\tvar rowStructs = this.rowStructs || [];\r\n\t\tvar rowStruct;\r\n\r\n\t\twhile ((rowStruct = rowStructs.pop())) {\r\n\t\t\trowStruct.tbodyEl.remove();\r\n\t\t}\r\n\r\n\t\tthis.rowStructs = null;\r\n\t},\r\n\r\n\r\n\t// Uses the given events array to generate <tbody> elements that should be appended to each row's content skeleton.\r\n\t// Returns an array of rowStruct objects (see the bottom of `renderSegRow`).\r\n\t// PRECONDITION: each segment shoud already have a rendered and assigned `.el`\r\n\trenderSegRows: function(segs) {\r\n\t\tvar rowStructs = [];\r\n\t\tvar segRows;\r\n\t\tvar row;\r\n\r\n\t\tsegRows = this.groupSegRows(segs); // group into nested arrays\r\n\r\n\t\t// iterate each row of segment groupings\r\n\t\tfor (row = 0; row < segRows.length; row++) {\r\n\t\t\trowStructs.push(\r\n\t\t\t\tthis.renderSegRow(row, segRows[row])\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn rowStructs;\r\n\t},\r\n\r\n\r\n\t// Builds the HTML to be used for the default element for an individual segment\r\n\tfgSegHtml: function(seg, disableResizing) {\r\n\t\tvar view = this.view;\r\n\t\tvar event = seg.event;\r\n\t\tvar isDraggable = view.isEventDraggable(event);\r\n\t\tvar isResizableFromStart = !disableResizing && event.allDay &&\r\n\t\t\tseg.isStart && view.isEventResizableFromStart(event);\r\n\t\tvar isResizableFromEnd = !disableResizing && event.allDay &&\r\n\t\t\tseg.isEnd && view.isEventResizableFromEnd(event);\r\n\t\tvar classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd);\r\n\t\tvar skinCss = cssToStr(this.getEventSkinCss(event));\r\n\t\tvar timeHtml = '';\r\n\t\tvar timeText;\r\n\t\tvar titleHtml;\r\n\r\n\t\tclasses.unshift('fc-day-grid-event', 'fc-h-event');\r\n\r\n\t\t// Only display a timed events time if it is the starting segment\r\n\t\tif (seg.isStart) {\r\n\t\t\ttimeText = this.getEventTimeText(event);\r\n\t\t\tif (timeText) {\r\n\t\t\t\ttimeHtml = '<span class=\"fc-time\">' + htmlEscape(timeText) + '</span>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttitleHtml =\r\n\t\t\t'<span class=\"fc-title\">' +\r\n\t\t\t\t(htmlEscape(event.title || '') || '&nbsp;') + // we always want one line of height\r\n\t\t\t'</span>';\r\n\t\t\r\n\t\treturn '<a class=\"' + classes.join(' ') + '\"' +\r\n\t\t\t\t(event.url ?\r\n\t\t\t\t\t' href=\"' + htmlEscape(event.url) + '\"' :\r\n\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\t\t\t\t(skinCss ?\r\n\t\t\t\t\t' style=\"' + skinCss + '\"' :\r\n\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\t\t\t'>' +\r\n\t\t\t\t'<div class=\"fc-content\">' +\r\n\t\t\t\t\t(this.isRTL ?\r\n\t\t\t\t\t\ttitleHtml + ' ' + timeHtml : // put a natural space in between\r\n\t\t\t\t\t\ttimeHtml + ' ' + titleHtml   //\r\n\t\t\t\t\t\t) +\r\n\t\t\t\t'</div>' +\r\n\t\t\t\t(isResizableFromStart ?\r\n\t\t\t\t\t'<div class=\"fc-resizer fc-start-resizer\" />' :\r\n\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\t\t\t\t(isResizableFromEnd ?\r\n\t\t\t\t\t'<div class=\"fc-resizer fc-end-resizer\" />' :\r\n\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\t\t\t'</a>';\r\n\t},\r\n\r\n\r\n\t// Given a row # and an array of segments all in the same row, render a <tbody> element, a skeleton that contains\r\n\t// the segments. Returns object with a bunch of internal data about how the render was calculated.\r\n\t// NOTE: modifies rowSegs\r\n\trenderSegRow: function(row, rowSegs) {\r\n\t\tvar colCnt = this.colCnt;\r\n\t\tvar segLevels = this.buildSegLevels(rowSegs); // group into sub-arrays of levels\r\n\t\tvar levelCnt = Math.max(1, segLevels.length); // ensure at least one level\r\n\t\tvar tbody = $('<tbody/>');\r\n\t\tvar segMatrix = []; // lookup for which segments are rendered into which level+col cells\r\n\t\tvar cellMatrix = []; // lookup for all <td> elements of the level+col matrix\r\n\t\tvar loneCellMatrix = []; // lookup for <td> elements that only take up a single column\r\n\t\tvar i, levelSegs;\r\n\t\tvar col;\r\n\t\tvar tr;\r\n\t\tvar j, seg;\r\n\t\tvar td;\r\n\r\n\t\t// populates empty cells from the current column (`col`) to `endCol`\r\n\t\tfunction emptyCellsUntil(endCol) {\r\n\t\t\twhile (col < endCol) {\r\n\t\t\t\t// try to grab a cell from the level above and extend its rowspan. otherwise, create a fresh cell\r\n\t\t\t\ttd = (loneCellMatrix[i - 1] || [])[col];\r\n\t\t\t\tif (td) {\r\n\t\t\t\t\ttd.attr(\r\n\t\t\t\t\t\t'rowspan',\r\n\t\t\t\t\t\tparseInt(td.attr('rowspan') || 1, 10) + 1\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttd = $('<td/>');\r\n\t\t\t\t\ttr.append(td);\r\n\t\t\t\t}\r\n\t\t\t\tcellMatrix[i][col] = td;\r\n\t\t\t\tloneCellMatrix[i][col] = td;\r\n\t\t\t\tcol++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < levelCnt; i++) { // iterate through all levels\r\n\t\t\tlevelSegs = segLevels[i];\r\n\t\t\tcol = 0;\r\n\t\t\ttr = $('<tr/>');\r\n\r\n\t\t\tsegMatrix.push([]);\r\n\t\t\tcellMatrix.push([]);\r\n\t\t\tloneCellMatrix.push([]);\r\n\r\n\t\t\t// levelCnt might be 1 even though there are no actual levels. protect against this.\r\n\t\t\t// this single empty row is useful for styling.\r\n\t\t\tif (levelSegs) {\r\n\t\t\t\tfor (j = 0; j < levelSegs.length; j++) { // iterate through segments in level\r\n\t\t\t\t\tseg = levelSegs[j];\r\n\r\n\t\t\t\t\temptyCellsUntil(seg.leftCol);\r\n\r\n\t\t\t\t\t// create a container that occupies or more columns. append the event element.\r\n\t\t\t\t\ttd = $('<td class=\"fc-event-container\"/>').append(seg.el);\r\n\t\t\t\t\tif (seg.leftCol != seg.rightCol) {\r\n\t\t\t\t\t\ttd.attr('colspan', seg.rightCol - seg.leftCol + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { // a single-column segment\r\n\t\t\t\t\t\tloneCellMatrix[i][col] = td;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twhile (col <= seg.rightCol) {\r\n\t\t\t\t\t\tcellMatrix[i][col] = td;\r\n\t\t\t\t\t\tsegMatrix[i][col] = seg;\r\n\t\t\t\t\t\tcol++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttr.append(td);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\temptyCellsUntil(colCnt); // finish off the row\r\n\t\t\tthis.bookendCells(tr);\r\n\t\t\ttbody.append(tr);\r\n\t\t}\r\n\r\n\t\treturn { // a \"rowStruct\"\r\n\t\t\trow: row, // the row number\r\n\t\t\ttbodyEl: tbody,\r\n\t\t\tcellMatrix: cellMatrix,\r\n\t\t\tsegMatrix: segMatrix,\r\n\t\t\tsegLevels: segLevels,\r\n\t\t\tsegs: rowSegs\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t// Stacks a flat array of segments, which are all assumed to be in the same row, into subarrays of vertical levels.\r\n\t// NOTE: modifies segs\r\n\tbuildSegLevels: function(segs) {\r\n\t\tvar levels = [];\r\n\t\tvar i, seg;\r\n\t\tvar j;\r\n\r\n\t\t// Give preference to elements with certain criteria, so they have\r\n\t\t// a chance to be closer to the top.\r\n\t\tthis.sortEventSegs(segs);\r\n\t\t\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tseg = segs[i];\r\n\r\n\t\t\t// loop through levels, starting with the topmost, until the segment doesn't collide with other segments\r\n\t\t\tfor (j = 0; j < levels.length; j++) {\r\n\t\t\t\tif (!isDaySegCollision(seg, levels[j])) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// `j` now holds the desired subrow index\r\n\t\t\tseg.level = j;\r\n\r\n\t\t\t// create new level array if needed and append segment\r\n\t\t\t(levels[j] || (levels[j] = [])).push(seg);\r\n\t\t}\r\n\r\n\t\t// order segments left-to-right. very important if calendar is RTL\r\n\t\tfor (j = 0; j < levels.length; j++) {\r\n\t\t\tlevels[j].sort(compareDaySegCols);\r\n\t\t}\r\n\r\n\t\treturn levels;\r\n\t},\r\n\r\n\r\n\t// Given a flat array of segments, return an array of sub-arrays, grouped by each segment's row\r\n\tgroupSegRows: function(segs) {\r\n\t\tvar segRows = [];\r\n\t\tvar i;\r\n\r\n\t\tfor (i = 0; i < this.rowCnt; i++) {\r\n\t\t\tsegRows.push([]);\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tsegRows[segs[i].row].push(segs[i]);\r\n\t\t}\r\n\r\n\t\treturn segRows;\r\n\t}\r\n\r\n});\r\n\r\n\r\n// Computes whether two segments' columns collide. They are assumed to be in the same row.\r\nfunction isDaySegCollision(seg, otherSegs) {\r\n\tvar i, otherSeg;\r\n\r\n\tfor (i = 0; i < otherSegs.length; i++) {\r\n\t\totherSeg = otherSegs[i];\r\n\r\n\t\tif (\r\n\t\t\totherSeg.leftCol <= seg.rightCol &&\r\n\t\t\totherSeg.rightCol >= seg.leftCol\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n\r\n// A cmp function for determining the leftmost event\r\nfunction compareDaySegCols(a, b) {\r\n\treturn a.leftCol - b.leftCol;\r\n}\r\n\r\n;;\r\n\r\n/* Methods relate to limiting the number events for a given day on a DayGrid\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n// NOTE: all the segs being passed around in here are foreground segs\r\n\r\nDayGrid.mixin({\r\n\r\n\tsegPopover: null, // the Popover that holds events that can't fit in a cell. null when not visible\r\n\tpopoverSegs: null, // an array of segment objects that the segPopover holds. null when not visible\r\n\r\n\r\n\tremoveSegPopover: function() {\r\n\t\tif (this.segPopover) {\r\n\t\t\tthis.segPopover.hide(); // in handler, will call segPopover's removeElement\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Limits the number of \"levels\" (vertically stacking layers of events) for each row of the grid.\r\n\t// `levelLimit` can be false (don't limit), a number, or true (should be computed).\r\n\tlimitRows: function(levelLimit) {\r\n\t\tvar rowStructs = this.rowStructs || [];\r\n\t\tvar row; // row #\r\n\t\tvar rowLevelLimit;\r\n\r\n\t\tfor (row = 0; row < rowStructs.length; row++) {\r\n\t\t\tthis.unlimitRow(row);\r\n\r\n\t\t\tif (!levelLimit) {\r\n\t\t\t\trowLevelLimit = false;\r\n\t\t\t}\r\n\t\t\telse if (typeof levelLimit === 'number') {\r\n\t\t\t\trowLevelLimit = levelLimit;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trowLevelLimit = this.computeRowLevelLimit(row);\r\n\t\t\t}\r\n\r\n\t\t\tif (rowLevelLimit !== false) {\r\n\t\t\t\tthis.limitRow(row, rowLevelLimit);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Computes the number of levels a row will accomodate without going outside its bounds.\r\n\t// Assumes the row is \"rigid\" (maintains a constant height regardless of what is inside).\r\n\t// `row` is the row number.\r\n\tcomputeRowLevelLimit: function(row) {\r\n\t\tvar rowEl = this.rowEls.eq(row); // the containing \"fake\" row div\r\n\t\tvar rowHeight = rowEl.height(); // TODO: cache somehow?\r\n\t\tvar trEls = this.rowStructs[row].tbodyEl.children();\r\n\t\tvar i, trEl;\r\n\t\tvar trHeight;\r\n\r\n\t\tfunction iterInnerHeights(i, childNode) {\r\n\t\t\ttrHeight = Math.max(trHeight, $(childNode).outerHeight());\r\n\t\t}\r\n\r\n\t\t// Reveal one level <tr> at a time and stop when we find one out of bounds\r\n\t\tfor (i = 0; i < trEls.length; i++) {\r\n\t\t\ttrEl = trEls.eq(i).removeClass('fc-limited'); // reset to original state (reveal)\r\n\r\n\t\t\t// with rowspans>1 and IE8, trEl.outerHeight() would return the height of the largest cell,\r\n\t\t\t// so instead, find the tallest inner content element.\r\n\t\t\ttrHeight = 0;\r\n\t\t\ttrEl.find('> td > :first-child').each(iterInnerHeights);\r\n\r\n\t\t\tif (trEl.position().top + trHeight > rowHeight) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false; // should not limit at all\r\n\t},\r\n\r\n\r\n\t// Limits the given grid row to the maximum number of levels and injects \"more\" links if necessary.\r\n\t// `row` is the row number.\r\n\t// `levelLimit` is a number for the maximum (inclusive) number of levels allowed.\r\n\tlimitRow: function(row, levelLimit) {\r\n\t\tvar _this = this;\r\n\t\tvar rowStruct = this.rowStructs[row];\r\n\t\tvar moreNodes = []; // array of \"more\" <a> links and <td> DOM nodes\r\n\t\tvar col = 0; // col #, left-to-right (not chronologically)\r\n\t\tvar levelSegs; // array of segment objects in the last allowable level, ordered left-to-right\r\n\t\tvar cellMatrix; // a matrix (by level, then column) of all <td> jQuery elements in the row\r\n\t\tvar limitedNodes; // array of temporarily hidden level <tr> and segment <td> DOM nodes\r\n\t\tvar i, seg;\r\n\t\tvar segsBelow; // array of segment objects below `seg` in the current `col`\r\n\t\tvar totalSegsBelow; // total number of segments below `seg` in any of the columns `seg` occupies\r\n\t\tvar colSegsBelow; // array of segment arrays, below seg, one for each column (offset from segs's first column)\r\n\t\tvar td, rowspan;\r\n\t\tvar segMoreNodes; // array of \"more\" <td> cells that will stand-in for the current seg's cell\r\n\t\tvar j;\r\n\t\tvar moreTd, moreWrap, moreLink;\r\n\r\n\t\t// Iterates through empty level cells and places \"more\" links inside if need be\r\n\t\tfunction emptyCellsUntil(endCol) { // goes from current `col` to `endCol`\r\n\t\t\twhile (col < endCol) {\r\n\t\t\t\tsegsBelow = _this.getCellSegs(row, col, levelLimit);\r\n\t\t\t\tif (segsBelow.length) {\r\n\t\t\t\t\ttd = cellMatrix[levelLimit - 1][col];\r\n\t\t\t\t\tmoreLink = _this.renderMoreLink(row, col, segsBelow);\r\n\t\t\t\t\tmoreWrap = $('<div/>').append(moreLink);\r\n\t\t\t\t\ttd.append(moreWrap);\r\n\t\t\t\t\tmoreNodes.push(moreWrap[0]);\r\n\t\t\t\t}\r\n\t\t\t\tcol++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (levelLimit && levelLimit < rowStruct.segLevels.length) { // is it actually over the limit?\r\n\t\t\tlevelSegs = rowStruct.segLevels[levelLimit - 1];\r\n\t\t\tcellMatrix = rowStruct.cellMatrix;\r\n\r\n\t\t\tlimitedNodes = rowStruct.tbodyEl.children().slice(levelLimit) // get level <tr> elements past the limit\r\n\t\t\t\t.addClass('fc-limited').get(); // hide elements and get a simple DOM-nodes array\r\n\r\n\t\t\t// iterate though segments in the last allowable level\r\n\t\t\tfor (i = 0; i < levelSegs.length; i++) {\r\n\t\t\t\tseg = levelSegs[i];\r\n\t\t\t\temptyCellsUntil(seg.leftCol); // process empty cells before the segment\r\n\r\n\t\t\t\t// determine *all* segments below `seg` that occupy the same columns\r\n\t\t\t\tcolSegsBelow = [];\r\n\t\t\t\ttotalSegsBelow = 0;\r\n\t\t\t\twhile (col <= seg.rightCol) {\r\n\t\t\t\t\tsegsBelow = this.getCellSegs(row, col, levelLimit);\r\n\t\t\t\t\tcolSegsBelow.push(segsBelow);\r\n\t\t\t\t\ttotalSegsBelow += segsBelow.length;\r\n\t\t\t\t\tcol++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (totalSegsBelow) { // do we need to replace this segment with one or many \"more\" links?\r\n\t\t\t\t\ttd = cellMatrix[levelLimit - 1][seg.leftCol]; // the segment's parent cell\r\n\t\t\t\t\trowspan = td.attr('rowspan') || 1;\r\n\t\t\t\t\tsegMoreNodes = [];\r\n\r\n\t\t\t\t\t// make a replacement <td> for each column the segment occupies. will be one for each colspan\r\n\t\t\t\t\tfor (j = 0; j < colSegsBelow.length; j++) {\r\n\t\t\t\t\t\tmoreTd = $('<td class=\"fc-more-cell\"/>').attr('rowspan', rowspan);\r\n\t\t\t\t\t\tsegsBelow = colSegsBelow[j];\r\n\t\t\t\t\t\tmoreLink = this.renderMoreLink(\r\n\t\t\t\t\t\t\trow,\r\n\t\t\t\t\t\t\tseg.leftCol + j,\r\n\t\t\t\t\t\t\t[ seg ].concat(segsBelow) // count seg as hidden too\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tmoreWrap = $('<div/>').append(moreLink);\r\n\t\t\t\t\t\tmoreTd.append(moreWrap);\r\n\t\t\t\t\t\tsegMoreNodes.push(moreTd[0]);\r\n\t\t\t\t\t\tmoreNodes.push(moreTd[0]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttd.addClass('fc-limited').after($(segMoreNodes)); // hide original <td> and inject replacements\r\n\t\t\t\t\tlimitedNodes.push(td[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\temptyCellsUntil(this.colCnt); // finish off the level\r\n\t\t\trowStruct.moreEls = $(moreNodes); // for easy undoing later\r\n\t\t\trowStruct.limitedEls = $(limitedNodes); // for easy undoing later\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Reveals all levels and removes all \"more\"-related elements for a grid's row.\r\n\t// `row` is a row number.\r\n\tunlimitRow: function(row) {\r\n\t\tvar rowStruct = this.rowStructs[row];\r\n\r\n\t\tif (rowStruct.moreEls) {\r\n\t\t\trowStruct.moreEls.remove();\r\n\t\t\trowStruct.moreEls = null;\r\n\t\t}\r\n\r\n\t\tif (rowStruct.limitedEls) {\r\n\t\t\trowStruct.limitedEls.removeClass('fc-limited');\r\n\t\t\trowStruct.limitedEls = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Renders an <a> element that represents hidden event element for a cell.\r\n\t// Responsible for attaching click handler as well.\r\n\trenderMoreLink: function(row, col, hiddenSegs) {\r\n\t\tvar _this = this;\r\n\t\tvar view = this.view;\r\n\r\n\t\treturn $('<a class=\"fc-more\"/>')\r\n\t\t\t.text(\r\n\t\t\t\tthis.getMoreLinkText(hiddenSegs.length)\r\n\t\t\t)\r\n\t\t\t.on('click', function(ev) {\r\n\t\t\t\tvar clickOption = view.opt('eventLimitClick');\r\n\t\t\t\tvar date = _this.getCellDate(row, col);\r\n\t\t\t\tvar moreEl = $(this);\r\n\t\t\t\tvar dayEl = _this.getCellEl(row, col);\r\n\t\t\t\tvar allSegs = _this.getCellSegs(row, col);\r\n\r\n\t\t\t\t// rescope the segments to be within the cell's date\r\n\t\t\t\tvar reslicedAllSegs = _this.resliceDaySegs(allSegs, date);\r\n\t\t\t\tvar reslicedHiddenSegs = _this.resliceDaySegs(hiddenSegs, date);\r\n\r\n\t\t\t\tif (typeof clickOption === 'function') {\r\n\t\t\t\t\t// the returned value can be an atomic option\r\n\t\t\t\t\tclickOption = view.trigger('eventLimitClick', null, {\r\n\t\t\t\t\t\tdate: date,\r\n\t\t\t\t\t\tdayEl: dayEl,\r\n\t\t\t\t\t\tmoreEl: moreEl,\r\n\t\t\t\t\t\tsegs: reslicedAllSegs,\r\n\t\t\t\t\t\thiddenSegs: reslicedHiddenSegs\r\n\t\t\t\t\t}, ev);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (clickOption === 'popover') {\r\n\t\t\t\t\t_this.showSegPopover(row, col, moreEl, reslicedAllSegs);\r\n\t\t\t\t}\r\n\t\t\t\telse if (typeof clickOption === 'string') { // a view name\r\n\t\t\t\t\tview.calendar.zoomTo(date, clickOption);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t},\r\n\r\n\r\n\t// Reveals the popover that displays all events within a cell\r\n\tshowSegPopover: function(row, col, moreLink, segs) {\r\n\t\tvar _this = this;\r\n\t\tvar view = this.view;\r\n\t\tvar moreWrap = moreLink.parent(); // the <div> wrapper around the <a>\r\n\t\tvar topEl; // the element we want to match the top coordinate of\r\n\t\tvar options;\r\n\r\n\t\tif (this.rowCnt == 1) {\r\n\t\t\ttopEl = view.el; // will cause the popover to cover any sort of header\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttopEl = this.rowEls.eq(row); // will align with top of row\r\n\t\t}\r\n\r\n\t\toptions = {\r\n\t\t\tclassName: 'fc-more-popover',\r\n\t\t\tcontent: this.renderSegPopoverContent(row, col, segs),\r\n\t\t\tparentEl: this.el,\r\n\t\t\ttop: topEl.offset().top,\r\n\t\t\tautoHide: true, // when the user clicks elsewhere, hide the popover\r\n\t\t\tviewportConstrain: view.opt('popoverViewportConstrain'),\r\n\t\t\thide: function() {\r\n\t\t\t\t// kill everything when the popover is hidden\r\n\t\t\t\t_this.segPopover.removeElement();\r\n\t\t\t\t_this.segPopover = null;\r\n\t\t\t\t_this.popoverSegs = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Determine horizontal coordinate.\r\n\t\t// We use the moreWrap instead of the <td> to avoid border confusion.\r\n\t\tif (this.isRTL) {\r\n\t\t\toptions.right = moreWrap.offset().left + moreWrap.outerWidth() + 1; // +1 to be over cell border\r\n\t\t}\r\n\t\telse {\r\n\t\t\toptions.left = moreWrap.offset().left - 1; // -1 to be over cell border\r\n\t\t}\r\n\r\n\t\tthis.segPopover = new Popover(options);\r\n\t\tthis.segPopover.show();\r\n\t},\r\n\r\n\r\n\t// Builds the inner DOM contents of the segment popover\r\n\trenderSegPopoverContent: function(row, col, segs) {\r\n\t\tvar view = this.view;\r\n\t\tvar isTheme = view.opt('theme');\r\n\t\tvar title = this.getCellDate(row, col).format(view.opt('dayPopoverFormat'));\r\n\t\tvar content = $(\r\n\t\t\t'<div class=\"fc-header ' + view.widgetHeaderClass + '\">' +\r\n\t\t\t\t'<span class=\"fc-close ' +\r\n\t\t\t\t\t(isTheme ? 'ui-icon ui-icon-closethick' : 'fc-icon fc-icon-x') +\r\n\t\t\t\t'\"></span>' +\r\n\t\t\t\t'<span class=\"fc-title\">' +\r\n\t\t\t\t\thtmlEscape(title) +\r\n\t\t\t\t'</span>' +\r\n\t\t\t\t'<div class=\"fc-clear\"/>' +\r\n\t\t\t'</div>' +\r\n\t\t\t'<div class=\"fc-body ' + view.widgetContentClass + '\">' +\r\n\t\t\t\t'<div class=\"fc-event-container\"></div>' +\r\n\t\t\t'</div>'\r\n\t\t);\r\n\t\tvar segContainer = content.find('.fc-event-container');\r\n\t\tvar i;\r\n\r\n\t\t// render each seg's `el` and only return the visible segs\r\n\t\tsegs = this.renderFgSegEls(segs, true); // disableResizing=true\r\n\t\tthis.popoverSegs = segs;\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\r\n\t\t\t// because segments in the popover are not part of a grid coordinate system, provide a hint to any\r\n\t\t\t// grids that want to do drag-n-drop about which cell it came from\r\n\t\t\tthis.prepareHits();\r\n\t\t\tsegs[i].hit = this.getCellHit(row, col);\r\n\t\t\tthis.releaseHits();\r\n\r\n\t\t\tsegContainer.append(segs[i].el);\r\n\t\t}\r\n\r\n\t\treturn content;\r\n\t},\r\n\r\n\r\n\t// Given the events within an array of segment objects, reslice them to be in a single day\r\n\tresliceDaySegs: function(segs, dayDate) {\r\n\r\n\t\t// build an array of the original events\r\n\t\tvar events = $.map(segs, function(seg) {\r\n\t\t\treturn seg.event;\r\n\t\t});\r\n\r\n\t\tvar dayStart = dayDate.clone();\r\n\t\tvar dayEnd = dayStart.clone().add(1, 'days');\r\n\t\tvar dayRange = { start: dayStart, end: dayEnd };\r\n\r\n\t\t// slice the events with a custom slicing function\r\n\t\tsegs = this.eventsToSegs(\r\n\t\t\tevents,\r\n\t\t\tfunction(range) {\r\n\t\t\t\tvar seg = intersectRanges(range, dayRange); // undefind if no intersection\r\n\t\t\t\treturn seg ? [ seg ] : []; // must return an array of segments\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// force an order because eventsToSegs doesn't guarantee one\r\n\t\tthis.sortEventSegs(segs);\r\n\r\n\t\treturn segs;\r\n\t},\r\n\r\n\r\n\t// Generates the text that should be inside a \"more\" link, given the number of events it represents\r\n\tgetMoreLinkText: function(num) {\r\n\t\tvar opt = this.view.opt('eventLimitText');\r\n\r\n\t\tif (typeof opt === 'function') {\r\n\t\t\treturn opt(num);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn '+' + num + ' ' + opt;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Returns segments within a given cell.\r\n\t// If `startLevel` is specified, returns only events including and below that level. Otherwise returns all segs.\r\n\tgetCellSegs: function(row, col, startLevel) {\r\n\t\tvar segMatrix = this.rowStructs[row].segMatrix;\r\n\t\tvar level = startLevel || 0;\r\n\t\tvar segs = [];\r\n\t\tvar seg;\r\n\r\n\t\twhile (level < segMatrix.length) {\r\n\t\t\tseg = segMatrix[level][col];\r\n\t\t\tif (seg) {\r\n\t\t\t\tsegs.push(seg);\r\n\t\t\t}\r\n\t\t\tlevel++;\r\n\t\t}\r\n\r\n\t\treturn segs;\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\n/* A component that renders one or more columns of vertical time slots\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n// We mixin DayTable, even though there is only a single row of days\r\n\r\nvar TimeGrid = FC.TimeGrid = Grid.extend(DayTableMixin, {\r\n\r\n\tslotDuration: null, // duration of a \"slot\", a distinct time segment on given day, visualized by lines\r\n\tsnapDuration: null, // granularity of time for dragging and selecting\r\n\tsnapsPerSlot: null,\r\n\tminTime: null, // Duration object that denotes the first visible time of any given day\r\n\tmaxTime: null, // Duration object that denotes the exclusive visible end time of any given day\r\n\tlabelFormat: null, // formatting string for times running along vertical axis\r\n\tlabelInterval: null, // duration of how often a label should be displayed for a slot\r\n\r\n\tcolEls: null, // cells elements in the day-row background\r\n\tslatEls: null, // elements running horizontally across all columns\r\n\thelperEl: null, // cell skeleton element for rendering the mock event \"helper\"\r\n\r\n\tcolCoordCache: null,\r\n\tslatCoordCache: null,\r\n\r\n\tbusinessHourSegs: null,\r\n\r\n\r\n\tconstructor: function() {\r\n\t\tGrid.apply(this, arguments); // call the super-constructor\r\n\r\n\t\tthis.processOptions();\r\n\t},\r\n\r\n\r\n\t// Renders the time grid into `this.el`, which should already be assigned.\r\n\t// Relies on the view's colCnt. In the future, this component should probably be self-sufficient.\r\n\trenderDates: function() {\r\n\t\tthis.el.html(this.renderHtml());\r\n\t\tthis.colEls = this.el.find('.fc-day');\r\n\t\tthis.slatEls = this.el.find('.fc-slats tr');\r\n\r\n\t\tthis.colCoordCache = new CoordCache({\r\n\t\t\tels: this.colEls,\r\n\t\t\tisHorizontal: true\r\n\t\t});\r\n\t\tthis.slatCoordCache = new CoordCache({\r\n\t\t\tels: this.slatEls,\r\n\t\t\tisVertical: true\r\n\t\t});\r\n\t},\r\n\r\n\r\n\trenderBusinessHours: function() {\r\n\t\tvar events = this.view.calendar.getBusinessHoursEvents();\r\n\t\tthis.businessHourSegs = this.renderFill('businessHours', this.eventsToSegs(events), 'bgevent');\r\n\t},\r\n\r\n\r\n\t// Renders the basic HTML skeleton for the grid\r\n\trenderHtml: function() {\r\n\t\treturn '' +\r\n\t\t\t'<div class=\"fc-bg\">' +\r\n\t\t\t\t'<table>' +\r\n\t\t\t\t\tthis.renderBgTrHtml(0) + // row=0\r\n\t\t\t\t'</table>' +\r\n\t\t\t'</div>' +\r\n\t\t\t'<div class=\"fc-slats\">' +\r\n\t\t\t\t'<table>' +\r\n\t\t\t\t\tthis.renderSlatRowHtml() +\r\n\t\t\t\t'</table>' +\r\n\t\t\t'</div>';\r\n\t},\r\n\r\n\r\n\t// Generates the HTML for the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\r\n\trenderSlatRowHtml: function() {\r\n\t\tvar view = this.view;\r\n\t\tvar isRTL = this.isRTL;\r\n\t\tvar html = '';\r\n\t\tvar slotTime = moment.duration(+this.minTime); // wish there was .clone() for durations\r\n\t\tvar slotDate; // will be on the view's first day, but we only care about its time\r\n\t\tvar isLabeled;\r\n\t\tvar axisHtml;\r\n\r\n\t\t// Calculate the time for each slot\r\n\t\twhile (slotTime < this.maxTime) {\r\n\t\t\tslotDate = this.start.clone().time(slotTime);\r\n\t\t\tisLabeled = isInt(divideDurationByDuration(slotTime, this.labelInterval));\r\n\r\n\t\t\taxisHtml =\r\n\t\t\t\t'<td class=\"fc-axis fc-time ' + view.widgetContentClass + '\" ' + view.axisStyleAttr() + '>' +\r\n\t\t\t\t\t(isLabeled ?\r\n\t\t\t\t\t\t'<span>' + // for matchCellWidths\r\n\t\t\t\t\t\t\thtmlEscape(slotDate.format(this.labelFormat)) +\r\n\t\t\t\t\t\t'</span>' :\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t\t) +\r\n\t\t\t\t'</td>';\r\n\r\n\t\t\thtml +=\r\n\t\t\t\t'<tr ' + (isLabeled ? '' : 'class=\"fc-minor\"') + '>' +\r\n\t\t\t\t\t(!isRTL ? axisHtml : '') +\r\n\t\t\t\t\t'<td class=\"' + view.widgetContentClass + '\"/>' +\r\n\t\t\t\t\t(isRTL ? axisHtml : '') +\r\n\t\t\t\t\"</tr>\";\r\n\r\n\t\t\tslotTime.add(this.slotDuration);\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t},\r\n\r\n\r\n\t/* Options\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Parses various options into properties of this object\r\n\tprocessOptions: function() {\r\n\t\tvar view = this.view;\r\n\t\tvar slotDuration = view.opt('slotDuration');\r\n\t\tvar snapDuration = view.opt('snapDuration');\r\n\t\tvar input;\r\n\r\n\t\tslotDuration = moment.duration(slotDuration);\r\n\t\tsnapDuration = snapDuration ? moment.duration(snapDuration) : slotDuration;\r\n\r\n\t\tthis.slotDuration = slotDuration;\r\n\t\tthis.snapDuration = snapDuration;\r\n\t\tthis.snapsPerSlot = slotDuration / snapDuration; // TODO: ensure an integer multiple?\r\n\r\n\t\tthis.minResizeDuration = snapDuration; // hack\r\n\r\n\t\tthis.minTime = moment.duration(view.opt('minTime'));\r\n\t\tthis.maxTime = moment.duration(view.opt('maxTime'));\r\n\r\n\t\t// might be an array value (for TimelineView).\r\n\t\t// if so, getting the most granular entry (the last one probably).\r\n\t\tinput = view.opt('slotLabelFormat');\r\n\t\tif ($.isArray(input)) {\r\n\t\t\tinput = input[input.length - 1];\r\n\t\t}\r\n\r\n\t\tthis.labelFormat =\r\n\t\t\tinput ||\r\n\t\t\tview.opt('axisFormat') || // deprecated\r\n\t\t\tview.opt('smallTimeFormat'); // the computed default\r\n\r\n\t\tinput = view.opt('slotLabelInterval');\r\n\t\tthis.labelInterval = input ?\r\n\t\t\tmoment.duration(input) :\r\n\t\t\tthis.computeLabelInterval(slotDuration);\r\n\t},\r\n\r\n\r\n\t// Computes an automatic value for slotLabelInterval\r\n\tcomputeLabelInterval: function(slotDuration) {\r\n\t\tvar i;\r\n\t\tvar labelInterval;\r\n\t\tvar slotsPerLabel;\r\n\r\n\t\t// find the smallest stock label interval that results in more than one slots-per-label\r\n\t\tfor (i = AGENDA_STOCK_SUB_DURATIONS.length - 1; i >= 0; i--) {\r\n\t\t\tlabelInterval = moment.duration(AGENDA_STOCK_SUB_DURATIONS[i]);\r\n\t\t\tslotsPerLabel = divideDurationByDuration(labelInterval, slotDuration);\r\n\t\t\tif (isInt(slotsPerLabel) && slotsPerLabel > 1) {\r\n\t\t\t\treturn labelInterval;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn moment.duration(slotDuration); // fall back. clone\r\n\t},\r\n\r\n\r\n\t// Computes a default event time formatting string if `timeFormat` is not explicitly defined\r\n\tcomputeEventTimeFormat: function() {\r\n\t\treturn this.view.opt('noMeridiemTimeFormat'); // like \"6:30\" (no AM/PM)\r\n\t},\r\n\r\n\r\n\t// Computes a default `displayEventEnd` value if one is not expliclty defined\r\n\tcomputeDisplayEventEnd: function() {\r\n\t\treturn true;\r\n\t},\r\n\r\n\r\n\t/* Hit System\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\tprepareHits: function() {\r\n\t\tthis.colCoordCache.build();\r\n\t\tthis.slatCoordCache.build();\r\n\t},\r\n\r\n\r\n\treleaseHits: function() {\r\n\t\tthis.colCoordCache.clear();\r\n\t\t// NOTE: don't clear slatCoordCache because we rely on it for computeTimeTop\r\n\t},\r\n\r\n\r\n\tqueryHit: function(leftOffset, topOffset) {\r\n\t\tvar snapsPerSlot = this.snapsPerSlot;\r\n\t\tvar colCoordCache = this.colCoordCache;\r\n\t\tvar slatCoordCache = this.slatCoordCache;\r\n\t\tvar colIndex = colCoordCache.getHorizontalIndex(leftOffset);\r\n\t\tvar slatIndex = slatCoordCache.getVerticalIndex(topOffset);\r\n\r\n\t\tif (colIndex != null && slatIndex != null) {\r\n\t\t\tvar slatTop = slatCoordCache.getTopOffset(slatIndex);\r\n\t\t\tvar slatHeight = slatCoordCache.getHeight(slatIndex);\r\n\t\t\tvar partial = (topOffset - slatTop) / slatHeight; // floating point number between 0 and 1\r\n\t\t\tvar localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\r\n\t\t\tvar snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\r\n\t\t\tvar snapTop = slatTop + (localSnapIndex / snapsPerSlot) * slatHeight;\r\n\t\t\tvar snapBottom = slatTop + ((localSnapIndex + 1) / snapsPerSlot) * slatHeight;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tcol: colIndex,\r\n\t\t\t\tsnap: snapIndex,\r\n\t\t\t\tcomponent: this, // needed unfortunately :(\r\n\t\t\t\tleft: colCoordCache.getLeftOffset(colIndex),\r\n\t\t\t\tright: colCoordCache.getRightOffset(colIndex),\r\n\t\t\t\ttop: snapTop,\r\n\t\t\t\tbottom: snapBottom\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tgetHitSpan: function(hit) {\r\n\t\tvar start = this.getCellDate(0, hit.col); // row=0\r\n\t\tvar time = this.computeSnapTime(hit.snap); // pass in the snap-index\r\n\t\tvar end;\r\n\r\n\t\tstart.time(time);\r\n\t\tend = start.clone().add(this.snapDuration);\r\n\r\n\t\treturn { start: start, end: end };\r\n\t},\r\n\r\n\r\n\tgetHitEl: function(hit) {\r\n\t\treturn this.colEls.eq(hit.col);\r\n\t},\r\n\r\n\r\n\t/* Dates\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\trangeUpdated: function() {\r\n\t\tthis.updateDayTable();\r\n\t},\r\n\r\n\r\n\t// Given a row number of the grid, representing a \"snap\", returns a time (Duration) from its start-of-day\r\n\tcomputeSnapTime: function(snapIndex) {\r\n\t\treturn moment.duration(this.minTime + this.snapDuration * snapIndex);\r\n\t},\r\n\r\n\r\n\t// Slices up the given span (unzoned start/end with other misc data) into an array of segments\r\n\tspanToSegs: function(span) {\r\n\t\tvar segs = this.sliceRangeByTimes(span);\r\n\t\tvar i;\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tif (this.isRTL) {\r\n\t\t\t\tsegs[i].col = this.daysPerRow - 1 - segs[i].dayIndex;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsegs[i].col = segs[i].dayIndex;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn segs;\r\n\t},\r\n\r\n\r\n\tsliceRangeByTimes: function(range) {\r\n\t\tvar segs = [];\r\n\t\tvar seg;\r\n\t\tvar dayIndex;\r\n\t\tvar dayDate;\r\n\t\tvar dayRange;\r\n\r\n\t\tfor (dayIndex = 0; dayIndex < this.daysPerRow; dayIndex++) {\r\n\t\t\tdayDate = this.dayDates[dayIndex].clone(); // TODO: better API for this?\r\n\t\t\tdayRange = {\r\n\t\t\t\tstart: dayDate.clone().time(this.minTime),\r\n\t\t\t\tend: dayDate.clone().time(this.maxTime)\r\n\t\t\t};\r\n\t\t\tseg = intersectRanges(range, dayRange); // both will be ambig timezone\r\n\t\t\tif (seg) {\r\n\t\t\t\tseg.dayIndex = dayIndex;\r\n\t\t\t\tsegs.push(seg);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn segs;\r\n\t},\r\n\r\n\r\n\t/* Coordinates\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\tupdateSize: function(isResize) { // NOT a standard Grid method\r\n\t\tthis.slatCoordCache.build();\r\n\r\n\t\tif (isResize) {\r\n\t\t\tthis.updateSegVerticals();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Computes the top coordinate, relative to the bounds of the grid, of the given date.\r\n\t// A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\r\n\tcomputeDateTop: function(date, startOfDayDate) {\r\n\t\treturn this.computeTimeTop(\r\n\t\t\tmoment.duration(\r\n\t\t\t\tdate - startOfDayDate.clone().stripTime()\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\r\n\tcomputeTimeTop: function(time) {\r\n\t\tvar len = this.slatEls.length;\r\n\t\tvar slatCoverage = (time - this.minTime) / this.slotDuration; // floating-point value of # of slots covered\r\n\t\tvar slatIndex;\r\n\t\tvar slatRemainder;\r\n\r\n\t\t// compute a floating-point number for how many slats should be progressed through.\r\n\t\t// from 0 to number of slats (inclusive)\r\n\t\t// constrained because minTime/maxTime might be customized.\r\n\t\tslatCoverage = Math.max(0, slatCoverage);\r\n\t\tslatCoverage = Math.min(len, slatCoverage);\r\n\r\n\t\t// an integer index of the furthest whole slat\r\n\t\t// from 0 to number slats (*exclusive*, so len-1)\r\n\t\tslatIndex = Math.floor(slatCoverage);\r\n\t\tslatIndex = Math.min(slatIndex, len - 1);\r\n\r\n\t\t// how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\r\n\t\t// could be 1.0 if slatCoverage is covering *all* the slots\r\n\t\tslatRemainder = slatCoverage - slatIndex;\r\n\r\n\t\treturn this.slatCoordCache.getTopPosition(slatIndex) +\r\n\t\t\tthis.slatCoordCache.getHeight(slatIndex) * slatRemainder;\r\n\t},\r\n\r\n\r\n\r\n\t/* Event Drag Visualization\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of an event being dragged over the specified date(s).\r\n\t// A returned value of `true` signals that a mock \"helper\" event has been rendered.\r\n\trenderDrag: function(eventLocation, seg) {\r\n\r\n\t\tif (seg) { // if there is event information for this drag, render a helper event\r\n\t\t\tthis.renderEventLocationHelper(eventLocation, seg);\r\n\t\t\tthis.applyDragOpacity(this.helperEl);\r\n\r\n\t\t\treturn true; // signal that a helper has been rendered\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// otherwise, just render a highlight\r\n\t\t\tthis.renderHighlight(this.eventToSpan(eventLocation));\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Unrenders any visual indication of an event being dragged\r\n\tunrenderDrag: function() {\r\n\t\tthis.unrenderHelper();\r\n\t\tthis.unrenderHighlight();\r\n\t},\r\n\r\n\r\n\t/* Event Resize Visualization\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of an event being resized\r\n\trenderEventResize: function(eventLocation, seg) {\r\n\t\tthis.renderEventLocationHelper(eventLocation, seg);\r\n\t},\r\n\r\n\r\n\t// Unrenders any visual indication of an event being resized\r\n\tunrenderEventResize: function() {\r\n\t\tthis.unrenderHelper();\r\n\t},\r\n\r\n\r\n\t/* Event Helper\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a mock \"helper\" event. `sourceSeg` is the original segment object and might be null (an external drag)\r\n\trenderHelper: function(event, sourceSeg) {\r\n\t\tvar segs = this.eventToSegs(event);\r\n\t\tvar tableEl;\r\n\t\tvar i, seg;\r\n\t\tvar sourceEl;\r\n\r\n\t\tsegs = this.renderFgSegEls(segs); // assigns each seg's el and returns a subset of segs that were rendered\r\n\t\ttableEl = this.renderSegTable(segs);\r\n\r\n\t\t// Try to make the segment that is in the same row as sourceSeg look the same\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tseg = segs[i];\r\n\t\t\tif (sourceSeg && sourceSeg.col === seg.col) {\r\n\t\t\t\tsourceEl = sourceSeg.el;\r\n\t\t\t\tseg.el.css({\r\n\t\t\t\t\tleft: sourceEl.css('left'),\r\n\t\t\t\t\tright: sourceEl.css('right'),\r\n\t\t\t\t\t'margin-left': sourceEl.css('margin-left'),\r\n\t\t\t\t\t'margin-right': sourceEl.css('margin-right')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.helperEl = $('<div class=\"fc-helper-skeleton\"/>')\r\n\t\t\t.append(tableEl)\r\n\t\t\t\t.appendTo(this.el);\r\n\t},\r\n\r\n\r\n\t// Unrenders any mock helper event\r\n\tunrenderHelper: function() {\r\n\t\tif (this.helperEl) {\r\n\t\t\tthis.helperEl.remove();\r\n\t\t\tthis.helperEl = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Selection\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of a selection. Overrides the default, which was to simply render a highlight.\r\n\trenderSelection: function(span) {\r\n\t\tif (this.view.opt('selectHelper')) { // this setting signals that a mock helper event should be rendered\r\n\r\n\t\t\t// normally acceps an eventLocation, span has a start/end, which is good enough\r\n\t\t\tthis.renderEventLocationHelper(span);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.renderHighlight(span);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Unrenders any visual indication of a selection\r\n\tunrenderSelection: function() {\r\n\t\tthis.unrenderHelper();\r\n\t\tthis.unrenderHighlight();\r\n\t},\r\n\r\n\r\n\t/* Fill System (highlight, background events, business hours)\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a set of rectangles over the given time segments.\r\n\t// Only returns segments that successfully rendered.\r\n\trenderFill: function(type, segs, className) {\r\n\t\tvar segCols;\r\n\t\tvar skeletonEl;\r\n\t\tvar trEl;\r\n\t\tvar col, colSegs;\r\n\t\tvar tdEl;\r\n\t\tvar containerEl;\r\n\t\tvar dayDate;\r\n\t\tvar i, seg;\r\n\r\n\t\tif (segs.length) {\r\n\r\n\t\t\tsegs = this.renderFillSegEls(type, segs); // assignes `.el` to each seg. returns successfully rendered segs\r\n\t\t\tsegCols = this.groupSegCols(segs); // group into sub-arrays, and assigns 'col' to each seg\r\n\r\n\t\t\tclassName = className || type.toLowerCase();\r\n\t\t\tskeletonEl = $(\r\n\t\t\t\t'<div class=\"fc-' + className + '-skeleton\">' +\r\n\t\t\t\t\t'<table><tr/></table>' +\r\n\t\t\t\t'</div>'\r\n\t\t\t);\r\n\t\t\ttrEl = skeletonEl.find('tr');\r\n\r\n\t\t\tfor (col = 0; col < segCols.length; col++) {\r\n\t\t\t\tcolSegs = segCols[col];\r\n\t\t\t\ttdEl = $('<td/>').appendTo(trEl);\r\n\r\n\t\t\t\tif (colSegs.length) {\r\n\t\t\t\t\tcontainerEl = $('<div class=\"fc-' + className + '-container\"/>').appendTo(tdEl);\r\n\t\t\t\t\tdayDate = this.getCellDate(0, col); // row=0\r\n\r\n\t\t\t\t\tfor (i = 0; i < colSegs.length; i++) {\r\n\t\t\t\t\t\tseg = colSegs[i];\r\n\t\t\t\t\t\tcontainerEl.append(\r\n\t\t\t\t\t\t\tseg.el.css({\r\n\t\t\t\t\t\t\t\ttop: this.computeDateTop(seg.start, dayDate),\r\n\t\t\t\t\t\t\t\tbottom: -this.computeDateTop(seg.end, dayDate) // the y position of the bottom edge\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.bookendCells(trEl);\r\n\r\n\t\t\tthis.el.append(skeletonEl);\r\n\t\t\tthis.elsByFill[type] = skeletonEl;\r\n\t\t}\r\n\r\n\t\treturn segs;\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\n/* Event-rendering methods for the TimeGrid class\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nTimeGrid.mixin({\r\n\r\n\teventSkeletonEl: null, // has cells with event-containers, which contain absolutely positioned event elements\r\n\r\n\r\n\t// Renders the given foreground event segments onto the grid\r\n\trenderFgSegs: function(segs) {\r\n\t\tsegs = this.renderFgSegEls(segs); // returns a subset of the segs. segs that were actually rendered\r\n\r\n\t\tthis.el.append(\r\n\t\t\tthis.eventSkeletonEl = $('<div class=\"fc-content-skeleton\"/>')\r\n\t\t\t\t.append(this.renderSegTable(segs))\r\n\t\t);\r\n\r\n\t\treturn segs; // return only the segs that were actually rendered\r\n\t},\r\n\r\n\r\n\t// Unrenders all currently rendered foreground event segments\r\n\tunrenderFgSegs: function(segs) {\r\n\t\tif (this.eventSkeletonEl) {\r\n\t\t\tthis.eventSkeletonEl.remove();\r\n\t\t\tthis.eventSkeletonEl = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Renders and returns the <table> portion of the event-skeleton.\r\n\t// Returns an object with properties 'tbodyEl' and 'segs'.\r\n\trenderSegTable: function(segs) {\r\n\t\tvar tableEl = $('<table><tr/></table>');\r\n\t\tvar trEl = tableEl.find('tr');\r\n\t\tvar segCols;\r\n\t\tvar i, seg;\r\n\t\tvar col, colSegs;\r\n\t\tvar containerEl;\r\n\r\n\t\tsegCols = this.groupSegCols(segs); // group into sub-arrays, and assigns 'col' to each seg\r\n\r\n\t\tthis.computeSegVerticals(segs); // compute and assign top/bottom\r\n\r\n\t\tfor (col = 0; col < segCols.length; col++) { // iterate each column grouping\r\n\t\t\tcolSegs = segCols[col];\r\n\t\t\tthis.placeSlotSegs(colSegs); // compute horizontal coordinates, z-index's, and reorder the array\r\n\r\n\t\t\tcontainerEl = $('<div class=\"fc-event-container\"/>');\r\n\r\n\t\t\t// assign positioning CSS and insert into container\r\n\t\t\tfor (i = 0; i < colSegs.length; i++) {\r\n\t\t\t\tseg = colSegs[i];\r\n\t\t\t\tseg.el.css(this.generateSegPositionCss(seg));\r\n\r\n\t\t\t\t// if the height is short, add a className for alternate styling\r\n\t\t\t\tif (seg.bottom - seg.top < 30) {\r\n\t\t\t\t\tseg.el.addClass('fc-short');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcontainerEl.append(seg.el);\r\n\t\t\t}\r\n\r\n\t\t\ttrEl.append($('<td/>').append(containerEl));\r\n\t\t}\r\n\r\n\t\tthis.bookendCells(trEl);\r\n\r\n\t\treturn tableEl;\r\n\t},\r\n\r\n\r\n\t// Given an array of segments that are all in the same column, sets the backwardCoord and forwardCoord on each.\r\n\t// NOTE: Also reorders the given array by date!\r\n\tplaceSlotSegs: function(segs) {\r\n\t\tvar levels;\r\n\t\tvar level0;\r\n\t\tvar i;\r\n\r\n\t\tthis.sortEventSegs(segs); // order by certain criteria\r\n\t\tlevels = buildSlotSegLevels(segs);\r\n\t\tcomputeForwardSlotSegs(levels);\r\n\r\n\t\tif ((level0 = levels[0])) {\r\n\r\n\t\t\tfor (i = 0; i < level0.length; i++) {\r\n\t\t\t\tcomputeSlotSegPressures(level0[i]);\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < level0.length; i++) {\r\n\t\t\t\tthis.computeSlotSegCoords(level0[i], 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Calculate seg.forwardCoord and seg.backwardCoord for the segment, where both values range\r\n\t// from 0 to 1. If the calendar is left-to-right, the seg.backwardCoord maps to \"left\" and\r\n\t// seg.forwardCoord maps to \"right\" (via percentage). Vice-versa if the calendar is right-to-left.\r\n\t//\r\n\t// The segment might be part of a \"series\", which means consecutive segments with the same pressure\r\n\t// who's width is unknown until an edge has been hit. `seriesBackwardPressure` is the number of\r\n\t// segments behind this one in the current series, and `seriesBackwardCoord` is the starting\r\n\t// coordinate of the first segment in the series.\r\n\tcomputeSlotSegCoords: function(seg, seriesBackwardPressure, seriesBackwardCoord) {\r\n\t\tvar forwardSegs = seg.forwardSegs;\r\n\t\tvar i;\r\n\r\n\t\tif (seg.forwardCoord === undefined) { // not already computed\r\n\r\n\t\t\tif (!forwardSegs.length) {\r\n\r\n\t\t\t\t// if there are no forward segments, this segment should butt up against the edge\r\n\t\t\t\tseg.forwardCoord = 1;\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// sort highest pressure first\r\n\t\t\t\tthis.sortForwardSlotSegs(forwardSegs);\r\n\r\n\t\t\t\t// this segment's forwardCoord will be calculated from the backwardCoord of the\r\n\t\t\t\t// highest-pressure forward segment.\r\n\t\t\t\tthis.computeSlotSegCoords(forwardSegs[0], seriesBackwardPressure + 1, seriesBackwardCoord);\r\n\t\t\t\tseg.forwardCoord = forwardSegs[0].backwardCoord;\r\n\t\t\t}\r\n\r\n\t\t\t// calculate the backwardCoord from the forwardCoord. consider the series\r\n\t\t\tseg.backwardCoord = seg.forwardCoord -\r\n\t\t\t\t(seg.forwardCoord - seriesBackwardCoord) / // available width for series\r\n\t\t\t\t(seriesBackwardPressure + 1); // # of segments in the series\r\n\r\n\t\t\t// use this segment's coordinates to computed the coordinates of the less-pressurized\r\n\t\t\t// forward segments\r\n\t\t\tfor (i=0; i<forwardSegs.length; i++) {\r\n\t\t\t\tthis.computeSlotSegCoords(forwardSegs[i], 0, seg.forwardCoord);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Refreshes the CSS top/bottom coordinates for each segment element. Probably after a window resize/zoom.\r\n\t// Repositions business hours segs too, so not just for events. Maybe shouldn't be here.\r\n\tupdateSegVerticals: function() {\r\n\t\tvar allSegs = (this.segs || []).concat(this.businessHourSegs || []);\r\n\t\tvar i;\r\n\r\n\t\tthis.computeSegVerticals(allSegs);\r\n\r\n\t\tfor (i = 0; i < allSegs.length; i++) {\r\n\t\t\tallSegs[i].el.css(\r\n\t\t\t\tthis.generateSegVerticalCss(allSegs[i])\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// For each segment in an array, computes and assigns its top and bottom properties\r\n\tcomputeSegVerticals: function(segs) {\r\n\t\tvar i, seg;\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tseg = segs[i];\r\n\t\t\tseg.top = this.computeDateTop(seg.start, seg.start);\r\n\t\t\tseg.bottom = this.computeDateTop(seg.end, seg.start);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Renders the HTML for a single event segment's default rendering\r\n\tfgSegHtml: function(seg, disableResizing) {\r\n\t\tvar view = this.view;\r\n\t\tvar event = seg.event;\r\n\t\tvar isDraggable = view.isEventDraggable(event);\r\n\t\tvar isResizableFromStart = !disableResizing && seg.isStart && view.isEventResizableFromStart(event);\r\n\t\tvar isResizableFromEnd = !disableResizing && seg.isEnd && view.isEventResizableFromEnd(event);\r\n\t\tvar classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd);\r\n\t\tvar skinCss = cssToStr(this.getEventSkinCss(event));\r\n\t\tvar timeText;\r\n\t\tvar fullTimeText; // more verbose time text. for the print stylesheet\r\n\t\tvar startTimeText; // just the start time text\r\n\r\n\t\tclasses.unshift('fc-time-grid-event', 'fc-v-event');\r\n\r\n\t\tif (view.isMultiDayEvent(event)) { // if the event appears to span more than one day...\r\n\t\t\t// Don't display time text on segments that run entirely through a day.\r\n\t\t\t// That would appear as midnight-midnight and would look dumb.\r\n\t\t\t// Otherwise, display the time text for the *segment's* times (like 6pm-midnight or midnight-10am)\r\n\t\t\tif (seg.isStart || seg.isEnd) {\r\n\t\t\t\ttimeText = this.getEventTimeText(seg);\r\n\t\t\t\tfullTimeText = this.getEventTimeText(seg, 'LT');\r\n\t\t\t\tstartTimeText = this.getEventTimeText(seg, null, false); // displayEnd=false\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Display the normal time text for the *event's* times\r\n\t\t\ttimeText = this.getEventTimeText(event);\r\n\t\t\tfullTimeText = this.getEventTimeText(event, 'LT');\r\n\t\t\tstartTimeText = this.getEventTimeText(event, null, false); // displayEnd=false\r\n\t\t}\r\n\r\n\t\treturn '<a class=\"' + classes.join(' ') + '\"' +\r\n\t\t\t(event.url ?\r\n\t\t\t\t' href=\"' + htmlEscape(event.url) + '\"' :\r\n\t\t\t\t''\r\n\t\t\t\t) +\r\n\t\t\t(skinCss ?\r\n\t\t\t\t' style=\"' + skinCss + '\"' :\r\n\t\t\t\t''\r\n\t\t\t\t) +\r\n\t\t\t'>' +\r\n\t\t\t\t'<div class=\"fc-content\">' +\r\n\t\t\t\t\t(timeText ?\r\n\t\t\t\t\t\t'<div class=\"fc-time\"' +\r\n\t\t\t\t\t\t' data-start=\"' + htmlEscape(startTimeText) + '\"' +\r\n\t\t\t\t\t\t' data-full=\"' + htmlEscape(fullTimeText) + '\"' +\r\n\t\t\t\t\t\t'>' +\r\n\t\t\t\t\t\t\t'<span>' + htmlEscape(timeText) + '</span>' +\r\n\t\t\t\t\t\t'</div>' :\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t\t) +\r\n\t\t\t\t\t(event.title ?\r\n\t\t\t\t\t\t'<div class=\"fc-title\">' +\r\n\t\t\t\t\t\t\thtmlEscape(event.title) +\r\n\t\t\t\t\t\t'</div>' :\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t\t) +\r\n\t\t\t\t'</div>' +\r\n\t\t\t\t'<div class=\"fc-bg\"/>' +\r\n\t\t\t\t/* TODO: write CSS for this\r\n\t\t\t\t(isResizableFromStart ?\r\n\t\t\t\t\t'<div class=\"fc-resizer fc-start-resizer\" />' :\r\n\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\t\t\t\t*/\r\n\t\t\t\t(isResizableFromEnd ?\r\n\t\t\t\t\t'<div class=\"fc-resizer fc-end-resizer\" />' :\r\n\t\t\t\t\t''\r\n\t\t\t\t\t) +\r\n\t\t\t'</a>';\r\n\t},\r\n\r\n\r\n\t// Generates an object with CSS properties/values that should be applied to an event segment element.\r\n\t// Contains important positioning-related properties that should be applied to any event element, customized or not.\r\n\tgenerateSegPositionCss: function(seg) {\r\n\t\tvar shouldOverlap = this.view.opt('slotEventOverlap');\r\n\t\tvar backwardCoord = seg.backwardCoord; // the left side if LTR. the right side if RTL. floating-point\r\n\t\tvar forwardCoord = seg.forwardCoord; // the right side if LTR. the left side if RTL. floating-point\r\n\t\tvar props = this.generateSegVerticalCss(seg); // get top/bottom first\r\n\t\tvar left; // amount of space from left edge, a fraction of the total width\r\n\t\tvar right; // amount of space from right edge, a fraction of the total width\r\n\r\n\t\tif (shouldOverlap) {\r\n\t\t\t// double the width, but don't go beyond the maximum forward coordinate (1.0)\r\n\t\t\tforwardCoord = Math.min(1, backwardCoord + (forwardCoord - backwardCoord) * 2);\r\n\t\t}\r\n\r\n\t\tif (this.isRTL) {\r\n\t\t\tleft = 1 - forwardCoord;\r\n\t\t\tright = backwardCoord;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tleft = backwardCoord;\r\n\t\t\tright = 1 - forwardCoord;\r\n\t\t}\r\n\r\n\t\tprops.zIndex = seg.level + 1; // convert from 0-base to 1-based\r\n\t\tprops.left = left * 100 + '%';\r\n\t\tprops.right = right * 100 + '%';\r\n\r\n\t\tif (shouldOverlap && seg.forwardPressure) {\r\n\t\t\t// add padding to the edge so that forward stacked events don't cover the resizer's icon\r\n\t\t\tprops[this.isRTL ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\r\n\t\t}\r\n\r\n\t\treturn props;\r\n\t},\r\n\r\n\r\n\t// Generates an object with CSS properties for the top/bottom coordinates of a segment element\r\n\tgenerateSegVerticalCss: function(seg) {\r\n\t\treturn {\r\n\t\t\ttop: seg.top,\r\n\t\t\tbottom: -seg.bottom // flipped because needs to be space beyond bottom edge of event container\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t// Given a flat array of segments, return an array of sub-arrays, grouped by each segment's col\r\n\tgroupSegCols: function(segs) {\r\n\t\tvar segCols = [];\r\n\t\tvar i;\r\n\r\n\t\tfor (i = 0; i < this.colCnt; i++) {\r\n\t\t\tsegCols.push([]);\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tsegCols[segs[i].col].push(segs[i]);\r\n\t\t}\r\n\r\n\t\treturn segCols;\r\n\t},\r\n\r\n\r\n\tsortForwardSlotSegs: function(forwardSegs) {\r\n\t\tforwardSegs.sort(proxy(this, 'compareForwardSlotSegs'));\r\n\t},\r\n\r\n\r\n\t// A cmp function for determining which forward segment to rely on more when computing coordinates.\r\n\tcompareForwardSlotSegs: function(seg1, seg2) {\r\n\t\t// put higher-pressure first\r\n\t\treturn seg2.forwardPressure - seg1.forwardPressure ||\r\n\t\t\t// put segments that are closer to initial edge first (and favor ones with no coords yet)\r\n\t\t\t(seg1.backwardCoord || 0) - (seg2.backwardCoord || 0) ||\r\n\t\t\t// do normal sorting...\r\n\t\t\tthis.compareEventSegs(seg1, seg2);\r\n\t}\r\n\r\n});\r\n\r\n\r\n// Builds an array of segments \"levels\". The first level will be the leftmost tier of segments if the calendar is\r\n// left-to-right, or the rightmost if the calendar is right-to-left. Assumes the segments are already ordered by date.\r\nfunction buildSlotSegLevels(segs) {\r\n\tvar levels = [];\r\n\tvar i, seg;\r\n\tvar j;\r\n\r\n\tfor (i=0; i<segs.length; i++) {\r\n\t\tseg = segs[i];\r\n\r\n\t\t// go through all the levels and stop on the first level where there are no collisions\r\n\t\tfor (j=0; j<levels.length; j++) {\r\n\t\t\tif (!computeSlotSegCollisions(seg, levels[j]).length) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tseg.level = j;\r\n\r\n\t\t(levels[j] || (levels[j] = [])).push(seg);\r\n\t}\r\n\r\n\treturn levels;\r\n}\r\n\r\n\r\n// For every segment, figure out the other segments that are in subsequent\r\n// levels that also occupy the same vertical space. Accumulate in seg.forwardSegs\r\nfunction computeForwardSlotSegs(levels) {\r\n\tvar i, level;\r\n\tvar j, seg;\r\n\tvar k;\r\n\r\n\tfor (i=0; i<levels.length; i++) {\r\n\t\tlevel = levels[i];\r\n\r\n\t\tfor (j=0; j<level.length; j++) {\r\n\t\t\tseg = level[j];\r\n\r\n\t\t\tseg.forwardSegs = [];\r\n\t\t\tfor (k=i+1; k<levels.length; k++) {\r\n\t\t\t\tcomputeSlotSegCollisions(seg, levels[k], seg.forwardSegs);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// Figure out which path forward (via seg.forwardSegs) results in the longest path until\r\n// the furthest edge is reached. The number of segments in this path will be seg.forwardPressure\r\nfunction computeSlotSegPressures(seg) {\r\n\tvar forwardSegs = seg.forwardSegs;\r\n\tvar forwardPressure = 0;\r\n\tvar i, forwardSeg;\r\n\r\n\tif (seg.forwardPressure === undefined) { // not already computed\r\n\r\n\t\tfor (i=0; i<forwardSegs.length; i++) {\r\n\t\t\tforwardSeg = forwardSegs[i];\r\n\r\n\t\t\t// figure out the child's maximum forward path\r\n\t\t\tcomputeSlotSegPressures(forwardSeg);\r\n\r\n\t\t\t// either use the existing maximum, or use the child's forward pressure\r\n\t\t\t// plus one (for the forwardSeg itself)\r\n\t\t\tforwardPressure = Math.max(\r\n\t\t\t\tforwardPressure,\r\n\t\t\t\t1 + forwardSeg.forwardPressure\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tseg.forwardPressure = forwardPressure;\r\n\t}\r\n}\r\n\r\n\r\n// Find all the segments in `otherSegs` that vertically collide with `seg`.\r\n// Append into an optionally-supplied `results` array and return.\r\nfunction computeSlotSegCollisions(seg, otherSegs, results) {\r\n\tresults = results || [];\r\n\r\n\tfor (var i=0; i<otherSegs.length; i++) {\r\n\t\tif (isSlotSegCollision(seg, otherSegs[i])) {\r\n\t\t\tresults.push(otherSegs[i]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn results;\r\n}\r\n\r\n\r\n// Do these segments occupy the same vertical space?\r\nfunction isSlotSegCollision(seg1, seg2) {\r\n\treturn seg1.bottom > seg2.top && seg1.top < seg2.bottom;\r\n}\r\n\r\n;;\r\n\r\n/* An abstract class from which other views inherit from\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nvar View = FC.View = Class.extend({\r\n\r\n\ttype: null, // subclass' view name (string)\r\n\tname: null, // deprecated. use `type` instead\r\n\ttitle: null, // the text that will be displayed in the header's title\r\n\r\n\tcalendar: null, // owner Calendar object\r\n\toptions: null, // hash containing all options. already merged with view-specific-options\r\n\tel: null, // the view's containing element. set by Calendar\r\n\r\n\tdisplaying: null, // a promise representing the state of rendering. null if no render requested\r\n\tisSkeletonRendered: false,\r\n\tisEventsRendered: false,\r\n\r\n\t// range the view is actually displaying (moments)\r\n\tstart: null,\r\n\tend: null, // exclusive\r\n\r\n\t// range the view is formally responsible for (moments)\r\n\t// may be different from start/end. for example, a month view might have 1st-31st, excluding padded dates\r\n\tintervalStart: null,\r\n\tintervalEnd: null, // exclusive\r\n\tintervalDuration: null,\r\n\tintervalUnit: null, // name of largest unit being displayed, like \"month\" or \"week\"\r\n\r\n\tisRTL: false,\r\n\tisSelected: false, // boolean whether a range of time is user-selected or not\r\n\r\n\teventOrderSpecs: null, // criteria for ordering events when they have same date/time\r\n\r\n\t// subclasses can optionally use a scroll container\r\n\tscrollerEl: null, // the element that will most likely scroll when content is too tall\r\n\tscrollTop: null, // cached vertical scroll value\r\n\r\n\t// classNames styled by jqui themes\r\n\twidgetHeaderClass: null,\r\n\twidgetContentClass: null,\r\n\thighlightStateClass: null,\r\n\r\n\t// for date utils, computed from options\r\n\tnextDayThreshold: null,\r\n\tisHiddenDayHash: null,\r\n\r\n\t// document handlers, bound to `this` object\r\n\tdocumentMousedownProxy: null, // TODO: doesn't work with touch\r\n\r\n\r\n\tconstructor: function(calendar, type, options, intervalDuration) {\r\n\r\n\t\tthis.calendar = calendar;\r\n\t\tthis.type = this.name = type; // .name is deprecated\r\n\t\tthis.options = options;\r\n\t\tthis.intervalDuration = intervalDuration || moment.duration(1, 'day');\r\n\r\n\t\tthis.nextDayThreshold = moment.duration(this.opt('nextDayThreshold'));\r\n\t\tthis.initThemingProps();\r\n\t\tthis.initHiddenDays();\r\n\t\tthis.isRTL = this.opt('isRTL');\r\n\r\n\t\tthis.eventOrderSpecs = parseFieldSpecs(this.opt('eventOrder'));\r\n\r\n\t\tthis.documentMousedownProxy = proxy(this, 'documentMousedown');\r\n\r\n\t\tthis.initialize();\r\n\t},\r\n\r\n\r\n\t// A good place for subclasses to initialize member variables\r\n\tinitialize: function() {\r\n\t\t// subclasses can implement\r\n\t},\r\n\r\n\r\n\t// Retrieves an option with the given name\r\n\topt: function(name) {\r\n\t\treturn this.options[name];\r\n\t},\r\n\r\n\r\n\t// Triggers handlers that are view-related. Modifies args before passing to calendar.\r\n\ttrigger: function(name, thisObj) { // arguments beyond thisObj are passed along\r\n\t\tvar calendar = this.calendar;\r\n\r\n\t\treturn calendar.trigger.apply(\r\n\t\t\tcalendar,\r\n\t\t\t[name, thisObj || this].concat(\r\n\t\t\t\tArray.prototype.slice.call(arguments, 2), // arguments beyond thisObj\r\n\t\t\t\t[ this ] // always make the last argument a reference to the view. TODO: deprecate\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t/* Dates\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Updates all internal dates to center around the given current unzoned date.\r\n\tsetDate: function(date) {\r\n\t\tthis.setRange(this.computeRange(date));\r\n\t},\r\n\r\n\r\n\t// Updates all internal dates for displaying the given unzoned range.\r\n\tsetRange: function(range) {\r\n\t\t$.extend(this, range); // assigns every property to this object's member variables\r\n\t\tthis.updateTitle();\r\n\t},\r\n\r\n\r\n\t// Given a single current unzoned date, produce information about what range to display.\r\n\t// Subclasses can override. Must return all properties.\r\n\tcomputeRange: function(date) {\r\n\t\tvar intervalUnit = computeIntervalUnit(this.intervalDuration);\r\n\t\tvar intervalStart = date.clone().startOf(intervalUnit);\r\n\t\tvar intervalEnd = intervalStart.clone().add(this.intervalDuration);\r\n\t\tvar start, end;\r\n\r\n\t\t// normalize the range's time-ambiguity\r\n\t\tif (/year|month|week|day/.test(intervalUnit)) { // whole-days?\r\n\t\t\tintervalStart.stripTime();\r\n\t\t\tintervalEnd.stripTime();\r\n\t\t}\r\n\t\telse { // needs to have a time?\r\n\t\t\tif (!intervalStart.hasTime()) {\r\n\t\t\t\tintervalStart = this.calendar.time(0); // give 00:00 time\r\n\t\t\t}\r\n\t\t\tif (!intervalEnd.hasTime()) {\r\n\t\t\t\tintervalEnd = this.calendar.time(0); // give 00:00 time\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstart = intervalStart.clone();\r\n\t\tstart = this.skipHiddenDays(start);\r\n\t\tend = intervalEnd.clone();\r\n\t\tend = this.skipHiddenDays(end, -1, true); // exclusively move backwards\r\n\r\n\t\treturn {\r\n\t\t\tintervalUnit: intervalUnit,\r\n\t\t\tintervalStart: intervalStart,\r\n\t\t\tintervalEnd: intervalEnd,\r\n\t\t\tstart: start,\r\n\t\t\tend: end\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t// Computes the new date when the user hits the prev button, given the current date\r\n\tcomputePrevDate: function(date) {\r\n\t\treturn this.massageCurrentDate(\r\n\t\t\tdate.clone().startOf(this.intervalUnit).subtract(this.intervalDuration), -1\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Computes the new date when the user hits the next button, given the current date\r\n\tcomputeNextDate: function(date) {\r\n\t\treturn this.massageCurrentDate(\r\n\t\t\tdate.clone().startOf(this.intervalUnit).add(this.intervalDuration)\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Given an arbitrarily calculated current date of the calendar, returns a date that is ensured to be completely\r\n\t// visible. `direction` is optional and indicates which direction the current date was being\r\n\t// incremented or decremented (1 or -1).\r\n\tmassageCurrentDate: function(date, direction) {\r\n\t\tif (this.intervalDuration.as('days') <= 1) { // if the view displays a single day or smaller\r\n\t\t\tif (this.isHiddenDay(date)) {\r\n\t\t\t\tdate = this.skipHiddenDays(date, direction);\r\n\t\t\t\tdate.startOf('day');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn date;\r\n\t},\r\n\r\n\r\n\t/* Title and Date Formatting\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Sets the view's title property to the most updated computed value\r\n\tupdateTitle: function() {\r\n\t\tthis.title = this.computeTitle();\r\n\t},\r\n\r\n\r\n\t// Computes what the title at the top of the calendar should be for this view\r\n\tcomputeTitle: function() {\r\n\t\treturn this.formatRange(\r\n\t\t\t{\r\n\t\t\t\t// in case intervalStart/End has a time, make sure timezone is correct\r\n\t\t\t\tstart: this.calendar.applyTimezone(this.intervalStart),\r\n\t\t\t\tend: this.calendar.applyTimezone(this.intervalEnd)\r\n\t\t\t},\r\n\t\t\tthis.opt('titleFormat') || this.computeTitleFormat(),\r\n\t\t\tthis.opt('titleRangeSeparator')\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Generates the format string that should be used to generate the title for the current date range.\r\n\t// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\r\n\tcomputeTitleFormat: function() {\r\n\t\tif (this.intervalUnit == 'year') {\r\n\t\t\treturn 'YYYY';\r\n\t\t}\r\n\t\telse if (this.intervalUnit == 'month') {\r\n\t\t\treturn this.opt('monthYearFormat'); // like \"September 2014\"\r\n\t\t}\r\n\t\telse if (this.intervalDuration.as('days') > 1) {\r\n\t\t\treturn 'll'; // multi-day range. shorter, like \"Sep 9 - 10 2014\"\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 'LL'; // one day. longer, like \"September 9 2014\"\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Utility for formatting a range. Accepts a range object, formatting string, and optional separator.\r\n\t// Displays all-day ranges naturally, with an inclusive end. Takes the current isRTL into account.\r\n\t// The timezones of the dates within `range` will be respected.\r\n\tformatRange: function(range, formatStr, separator) {\r\n\t\tvar end = range.end;\r\n\r\n\t\tif (!end.hasTime()) { // all-day?\r\n\t\t\tend = end.clone().subtract(1); // convert to inclusive. last ms of previous day\r\n\t\t}\r\n\r\n\t\treturn formatRange(range.start, end, formatStr, separator, this.opt('isRTL'));\r\n\t},\r\n\r\n\r\n\t/* Rendering\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Sets the container element that the view should render inside of.\r\n\t// Does other DOM-related initializations.\r\n\tsetElement: function(el) {\r\n\t\tthis.el = el;\r\n\t\tthis.bindGlobalHandlers();\r\n\t},\r\n\r\n\r\n\t// Removes the view's container element from the DOM, clearing any content beforehand.\r\n\t// Undoes any other DOM-related attachments.\r\n\tremoveElement: function() {\r\n\t\tthis.clear(); // clears all content\r\n\r\n\t\t// clean up the skeleton\r\n\t\tif (this.isSkeletonRendered) {\r\n\t\t\tthis.unrenderSkeleton();\r\n\t\t\tthis.isSkeletonRendered = false;\r\n\t\t}\r\n\r\n\t\tthis.unbindGlobalHandlers();\r\n\r\n\t\tthis.el.remove();\r\n\r\n\t\t// NOTE: don't null-out this.el in case the View was destroyed within an API callback.\r\n\t\t// We don't null-out the View's other jQuery element references upon destroy,\r\n\t\t//  so we shouldn't kill this.el either.\r\n\t},\r\n\r\n\r\n\t// Does everything necessary to display the view centered around the given unzoned date.\r\n\t// Does every type of rendering EXCEPT rendering events.\r\n\t// Is asychronous and returns a promise.\r\n\tdisplay: function(date) {\r\n\t\tvar _this = this;\r\n\t\tvar scrollState = null;\r\n\r\n\t\tif (this.displaying) {\r\n\t\t\tscrollState = this.queryScroll();\r\n\t\t}\r\n\r\n\t\tthis.calendar.freezeContentHeight();\r\n\r\n\t\treturn this.clear().then(function() { // clear the content first (async)\r\n\t\t\treturn (\r\n\t\t\t\t_this.displaying =\r\n\t\t\t\t\t$.when(_this.displayView(date)) // displayView might return a promise\r\n\t\t\t\t\t\t.then(function() {\r\n\t\t\t\t\t\t\t_this.forceScroll(_this.computeInitialScroll(scrollState));\r\n\t\t\t\t\t\t\t_this.calendar.unfreezeContentHeight();\r\n\t\t\t\t\t\t\t_this.triggerRender();\r\n\t\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t// Does everything necessary to clear the content of the view.\r\n\t// Clears dates and events. Does not clear the skeleton.\r\n\t// Is asychronous and returns a promise.\r\n\tclear: function() {\r\n\t\tvar _this = this;\r\n\t\tvar displaying = this.displaying;\r\n\r\n\t\tif (displaying) { // previously displayed, or in the process of being displayed?\r\n\t\t\treturn displaying.then(function() { // wait for the display to finish\r\n\t\t\t\t_this.displaying = null;\r\n\t\t\t\t_this.clearEvents();\r\n\t\t\t\treturn _this.clearView(); // might return a promise. chain it\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn $.when(); // an immediately-resolved promise\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// If the view has already been displayed, tears it down and displays it again.\r\n\t// Will re-render the events if necessary, which display/clear DO NOT do.\r\n\t// TODO: make behavior more consistent.\r\n\tredisplay: function() {\r\n\t\tif (this.isSkeletonRendered) {\r\n\t\t\tvar wasEventsRendered = this.isEventsRendered;\r\n\t\t\tthis.clearEvents(); // won't trigger handlers if events never rendered\r\n\t\t\tthis.clearView();\r\n\t\t\tthis.displayView();\r\n\t\t\tif (wasEventsRendered) { // only render and trigger handlers if events previously rendered\r\n\t\t\t\tthis.displayEvents();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Displays the view's non-event content, such as date-related content or anything required by events.\r\n\t// Renders the view's non-content skeleton if necessary.\r\n\t// Can be asynchronous and return a promise.\r\n\tdisplayView: function(date) {\r\n\t\tif (!this.isSkeletonRendered) {\r\n\t\t\tthis.renderSkeleton();\r\n\t\t\tthis.isSkeletonRendered = true;\r\n\t\t}\r\n\t\tif (date) {\r\n\t\t\tthis.setDate(date);\r\n\t\t}\r\n\t\tif (this.render) {\r\n\t\t\tthis.render(); // TODO: deprecate\r\n\t\t}\r\n\t\tthis.renderDates();\r\n\t\tthis.updateSize();\r\n\t\tthis.renderBusinessHours(); // might need coordinates, so should go after updateSize()\r\n\t},\r\n\r\n\r\n\t// Unrenders the view content that was rendered in displayView.\r\n\t// Can be asynchronous and return a promise.\r\n\tclearView: function() {\r\n\t\tthis.unselect();\r\n\t\tthis.triggerUnrender();\r\n\t\tthis.unrenderBusinessHours();\r\n\t\tthis.unrenderDates();\r\n\t\tif (this.destroy) {\r\n\t\t\tthis.destroy(); // TODO: deprecate\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Renders the basic structure of the view before any content is rendered\r\n\trenderSkeleton: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Unrenders the basic structure of the view\r\n\tunrenderSkeleton: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Renders the view's date-related content.\r\n\t// Assumes setRange has already been called and the skeleton has already been rendered.\r\n\trenderDates: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Unrenders the view's date-related content\r\n\tunrenderDates: function() {\r\n\t\t// subclasses should override\r\n\t},\r\n\r\n\r\n\t// Renders business-hours onto the view. Assumes updateSize has already been called.\r\n\trenderBusinessHours: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Unrenders previously-rendered business-hours\r\n\tunrenderBusinessHours: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Signals that the view's content has been rendered\r\n\ttriggerRender: function() {\r\n\t\tthis.trigger('viewRender', this, this, this.el);\r\n\t},\r\n\r\n\r\n\t// Signals that the view's content is about to be unrendered\r\n\ttriggerUnrender: function() {\r\n\t\tthis.trigger('viewDestroy', this, this, this.el);\r\n\t},\r\n\r\n\r\n\t// Binds DOM handlers to elements that reside outside the view container, such as the document\r\n\tbindGlobalHandlers: function() {\r\n\t\t$(document).on('mousedown', this.documentMousedownProxy);\r\n\t},\r\n\r\n\r\n\t// Unbinds DOM handlers from elements that reside outside the view container\r\n\tunbindGlobalHandlers: function() {\r\n\t\t$(document).off('mousedown', this.documentMousedownProxy);\r\n\t},\r\n\r\n\r\n\t// Initializes internal variables related to theming\r\n\tinitThemingProps: function() {\r\n\t\tvar tm = this.opt('theme') ? 'ui' : 'fc';\r\n\r\n\t\tthis.widgetHeaderClass = tm + '-widget-header';\r\n\t\tthis.widgetContentClass = tm + '-widget-content';\r\n\t\tthis.highlightStateClass = tm + '-state-highlight';\r\n\t},\r\n\r\n\r\n\t/* Dimensions\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Refreshes anything dependant upon sizing of the container element of the grid\r\n\tupdateSize: function(isResize) {\r\n\t\tvar scrollState;\r\n\r\n\t\tif (isResize) {\r\n\t\t\tscrollState = this.queryScroll();\r\n\t\t}\r\n\r\n\t\tthis.updateHeight(isResize);\r\n\t\tthis.updateWidth(isResize);\r\n\r\n\t\tif (isResize) {\r\n\t\t\tthis.setScroll(scrollState);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Refreshes the horizontal dimensions of the calendar\r\n\tupdateWidth: function(isResize) {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Refreshes the vertical dimensions of the calendar\r\n\tupdateHeight: function(isResize) {\r\n\t\tvar calendar = this.calendar; // we poll the calendar for height information\r\n\r\n\t\tthis.setHeight(\r\n\t\t\tcalendar.getSuggestedViewHeight(),\r\n\t\t\tcalendar.isHeightAuto()\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Updates the vertical dimensions of the calendar to the specified height.\r\n\t// if `isAuto` is set to true, height becomes merely a suggestion and the view should use its \"natural\" height.\r\n\tsetHeight: function(height, isAuto) {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t/* Scroller\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Given the total height of the view, return the number of pixels that should be used for the scroller.\r\n\t// Utility for subclasses.\r\n\tcomputeScrollerHeight: function(totalHeight) {\r\n\t\tvar scrollerEl = this.scrollerEl;\r\n\t\tvar both;\r\n\t\tvar otherHeight; // cumulative height of everything that is not the scrollerEl in the view (header+borders)\r\n\r\n\t\tboth = this.el.add(scrollerEl);\r\n\r\n\t\t// fuckin IE8/9/10/11 sometimes returns 0 for dimensions. this weird hack was the only thing that worked\r\n\t\tboth.css({\r\n\t\t\tposition: 'relative', // cause a reflow, which will force fresh dimension recalculation\r\n\t\t\tleft: -1 // ensure reflow in case the el was already relative. negative is less likely to cause new scroll\r\n\t\t});\r\n\t\totherHeight = this.el.outerHeight() - scrollerEl.height(); // grab the dimensions\r\n\t\tboth.css({ position: '', left: '' }); // undo hack\r\n\r\n\t\treturn totalHeight - otherHeight;\r\n\t},\r\n\r\n\r\n\t// Computes the initial pre-configured scroll state prior to allowing the user to change it.\r\n\t// Given the scroll state from the previous rendering. If first time rendering, given null.\r\n\tcomputeInitialScroll: function(previousScrollState) {\r\n\t\treturn 0;\r\n\t},\r\n\r\n\r\n\t// Retrieves the view's current natural scroll state. Can return an arbitrary format.\r\n\tqueryScroll: function() {\r\n\t\tif (this.scrollerEl) {\r\n\t\t\treturn this.scrollerEl.scrollTop(); // operates on scrollerEl by default\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Sets the view's scroll state. Will accept the same format computeInitialScroll and queryScroll produce.\r\n\tsetScroll: function(scrollState) {\r\n\t\tif (this.scrollerEl) {\r\n\t\t\treturn this.scrollerEl.scrollTop(scrollState); // operates on scrollerEl by default\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Sets the scroll state, making sure to overcome any predefined scroll value the browser has in mind\r\n\tforceScroll: function(scrollState) {\r\n\t\tvar _this = this;\r\n\r\n\t\tthis.setScroll(scrollState);\r\n\t\tsetTimeout(function() {\r\n\t\t\t_this.setScroll(scrollState);\r\n\t\t}, 0);\r\n\t},\r\n\r\n\r\n\t/* Event Elements / Segments\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Does everything necessary to display the given events onto the current view\r\n\tdisplayEvents: function(events) {\r\n\t\tvar scrollState = this.queryScroll();\r\n\r\n\t\tthis.clearEvents();\r\n\t\tthis.renderEvents(events);\r\n\t\tthis.isEventsRendered = true;\r\n\t\tthis.setScroll(scrollState);\r\n\t\tthis.triggerEventRender();\r\n\t},\r\n\r\n\r\n\t// Does everything necessary to clear the view's currently-rendered events\r\n\tclearEvents: function() {\r\n\t\tif (this.isEventsRendered) {\r\n\t\t\tthis.triggerEventUnrender();\r\n\t\t\tif (this.destroyEvents) {\r\n\t\t\t\tthis.destroyEvents(); // TODO: deprecate\r\n\t\t\t}\r\n\t\t\tthis.unrenderEvents();\r\n\t\t\tthis.isEventsRendered = false;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Renders the events onto the view.\r\n\trenderEvents: function(events) {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Removes event elements from the view.\r\n\tunrenderEvents: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Signals that all events have been rendered\r\n\ttriggerEventRender: function() {\r\n\t\tthis.renderedEventSegEach(function(seg) {\r\n\t\t\tthis.trigger('eventAfterRender', seg.event, seg.event, seg.el);\r\n\t\t});\r\n\t\tthis.trigger('eventAfterAllRender');\r\n\t},\r\n\r\n\r\n\t// Signals that all event elements are about to be removed\r\n\ttriggerEventUnrender: function() {\r\n\t\tthis.renderedEventSegEach(function(seg) {\r\n\t\t\tthis.trigger('eventDestroy', seg.event, seg.event, seg.el);\r\n\t\t});\r\n\t},\r\n\r\n\r\n\t// Given an event and the default element used for rendering, returns the element that should actually be used.\r\n\t// Basically runs events and elements through the eventRender hook.\r\n\tresolveEventEl: function(event, el) {\r\n\t\tvar custom = this.trigger('eventRender', event, event, el);\r\n\r\n\t\tif (custom === false) { // means don't render at all\r\n\t\t\tel = null;\r\n\t\t}\r\n\t\telse if (custom && custom !== true) {\r\n\t\t\tel = $(custom);\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t},\r\n\r\n\r\n\t// Hides all rendered event segments linked to the given event\r\n\tshowEvent: function(event) {\r\n\t\tthis.renderedEventSegEach(function(seg) {\r\n\t\t\tseg.el.css('visibility', '');\r\n\t\t}, event);\r\n\t},\r\n\r\n\r\n\t// Shows all rendered event segments linked to the given event\r\n\thideEvent: function(event) {\r\n\t\tthis.renderedEventSegEach(function(seg) {\r\n\t\t\tseg.el.css('visibility', 'hidden');\r\n\t\t}, event);\r\n\t},\r\n\r\n\r\n\t// Iterates through event segments that have been rendered (have an el). Goes through all by default.\r\n\t// If the optional `event` argument is specified, only iterates through segments linked to that event.\r\n\t// The `this` value of the callback function will be the view.\r\n\trenderedEventSegEach: function(func, event) {\r\n\t\tvar segs = this.getEventSegs();\r\n\t\tvar i;\r\n\r\n\t\tfor (i = 0; i < segs.length; i++) {\r\n\t\t\tif (!event || segs[i].event._id === event._id) {\r\n\t\t\t\tif (segs[i].el) {\r\n\t\t\t\t\tfunc.call(this, segs[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Retrieves all the rendered segment objects for the view\r\n\tgetEventSegs: function() {\r\n\t\t// subclasses must implement\r\n\t\treturn [];\r\n\t},\r\n\r\n\r\n\t/* Event Drag-n-Drop\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Computes if the given event is allowed to be dragged by the user\r\n\tisEventDraggable: function(event) {\r\n\t\tvar source = event.source || {};\r\n\r\n\t\treturn firstDefined(\r\n\t\t\tevent.startEditable,\r\n\t\t\tsource.startEditable,\r\n\t\t\tthis.opt('eventStartEditable'),\r\n\t\t\tevent.editable,\r\n\t\t\tsource.editable,\r\n\t\t\tthis.opt('editable')\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Must be called when an event in the view is dropped onto new location.\r\n\t// `dropLocation` is an object that contains the new zoned start/end/allDay values for the event.\r\n\treportEventDrop: function(event, dropLocation, largeUnit, el, ev) {\r\n\t\tvar calendar = this.calendar;\r\n\t\tvar mutateResult = calendar.mutateEvent(event, dropLocation, largeUnit);\r\n\t\tvar undoFunc = function() {\r\n\t\t\tmutateResult.undo();\r\n\t\t\tcalendar.reportEventChange();\r\n\t\t};\r\n\r\n\t\tthis.triggerEventDrop(event, mutateResult.dateDelta, undoFunc, el, ev);\r\n\t\tcalendar.reportEventChange(); // will rerender events\r\n\t},\r\n\r\n\r\n\t// Triggers event-drop handlers that have subscribed via the API\r\n\ttriggerEventDrop: function(event, dateDelta, undoFunc, el, ev) {\r\n\t\tthis.trigger('eventDrop', el[0], event, dateDelta, undoFunc, ev, {}); // {} = jqui dummy\r\n\t},\r\n\r\n\r\n\t/* External Element Drag-n-Drop\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Must be called when an external element, via jQuery UI, has been dropped onto the calendar.\r\n\t// `meta` is the parsed data that has been embedded into the dragging event.\r\n\t// `dropLocation` is an object that contains the new zoned start/end/allDay values for the event.\r\n\treportExternalDrop: function(meta, dropLocation, el, ev, ui) {\r\n\t\tvar eventProps = meta.eventProps;\r\n\t\tvar eventInput;\r\n\t\tvar event;\r\n\r\n\t\t// Try to build an event object and render it. TODO: decouple the two\r\n\t\tif (eventProps) {\r\n\t\t\teventInput = $.extend({}, eventProps, dropLocation);\r\n\t\t\tevent = this.calendar.renderEvent(eventInput, meta.stick)[0]; // renderEvent returns an array\r\n\t\t}\r\n\r\n\t\tthis.triggerExternalDrop(event, dropLocation, el, ev, ui);\r\n\t},\r\n\r\n\r\n\t// Triggers external-drop handlers that have subscribed via the API\r\n\ttriggerExternalDrop: function(event, dropLocation, el, ev, ui) {\r\n\r\n\t\t// trigger 'drop' regardless of whether element represents an event\r\n\t\tthis.trigger('drop', el[0], dropLocation.start, ev, ui);\r\n\r\n\t\tif (event) {\r\n\t\t\tthis.trigger('eventReceive', null, event); // signal an external event landed\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Drag-n-Drop Rendering (for both events and external elements)\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of a event or external-element drag over the given drop zone.\r\n\t// If an external-element, seg will be `null`\r\n\trenderDrag: function(dropLocation, seg) {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t// Unrenders a visual indication of an event or external-element being dragged.\r\n\tunrenderDrag: function() {\r\n\t\t// subclasses must implement\r\n\t},\r\n\r\n\r\n\t/* Event Resizing\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Computes if the given event is allowed to be resized from its starting edge\r\n\tisEventResizableFromStart: function(event) {\r\n\t\treturn this.opt('eventResizableFromStart') && this.isEventResizable(event);\r\n\t},\r\n\r\n\r\n\t// Computes if the given event is allowed to be resized from its ending edge\r\n\tisEventResizableFromEnd: function(event) {\r\n\t\treturn this.isEventResizable(event);\r\n\t},\r\n\r\n\r\n\t// Computes if the given event is allowed to be resized by the user at all\r\n\tisEventResizable: function(event) {\r\n\t\tvar source = event.source || {};\r\n\r\n\t\treturn firstDefined(\r\n\t\t\tevent.durationEditable,\r\n\t\t\tsource.durationEditable,\r\n\t\t\tthis.opt('eventDurationEditable'),\r\n\t\t\tevent.editable,\r\n\t\t\tsource.editable,\r\n\t\t\tthis.opt('editable')\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Must be called when an event in the view has been resized to a new length\r\n\treportEventResize: function(event, resizeLocation, largeUnit, el, ev) {\r\n\t\tvar calendar = this.calendar;\r\n\t\tvar mutateResult = calendar.mutateEvent(event, resizeLocation, largeUnit);\r\n\t\tvar undoFunc = function() {\r\n\t\t\tmutateResult.undo();\r\n\t\t\tcalendar.reportEventChange();\r\n\t\t};\r\n\r\n\t\tthis.triggerEventResize(event, mutateResult.durationDelta, undoFunc, el, ev);\r\n\t\tcalendar.reportEventChange(); // will rerender events\r\n\t},\r\n\r\n\r\n\t// Triggers event-resize handlers that have subscribed via the API\r\n\ttriggerEventResize: function(event, durationDelta, undoFunc, el, ev) {\r\n\t\tthis.trigger('eventResize', el[0], event, durationDelta, undoFunc, ev, {}); // {} = jqui dummy\r\n\t},\r\n\r\n\r\n\t/* Selection\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Selects a date span on the view. `start` and `end` are both Moments.\r\n\t// `ev` is the native mouse event that begin the interaction.\r\n\tselect: function(span, ev) {\r\n\t\tthis.unselect(ev);\r\n\t\tthis.renderSelection(span);\r\n\t\tthis.reportSelection(span, ev);\r\n\t},\r\n\r\n\r\n\t// Renders a visual indication of the selection\r\n\trenderSelection: function(span) {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Called when a new selection is made. Updates internal state and triggers handlers.\r\n\treportSelection: function(span, ev) {\r\n\t\tthis.isSelected = true;\r\n\t\tthis.triggerSelect(span, ev);\r\n\t},\r\n\r\n\r\n\t// Triggers handlers to 'select'\r\n\ttriggerSelect: function(span, ev) {\r\n\t\tthis.trigger(\r\n\t\t\t'select',\r\n\t\t\tnull,\r\n\t\t\tthis.calendar.applyTimezone(span.start), // convert to calendar's tz for external API\r\n\t\t\tthis.calendar.applyTimezone(span.end), // \"\r\n\t\t\tev\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Undoes a selection. updates in the internal state and triggers handlers.\r\n\t// `ev` is the native mouse event that began the interaction.\r\n\tunselect: function(ev) {\r\n\t\tif (this.isSelected) {\r\n\t\t\tthis.isSelected = false;\r\n\t\t\tif (this.destroySelection) {\r\n\t\t\t\tthis.destroySelection(); // TODO: deprecate\r\n\t\t\t}\r\n\t\t\tthis.unrenderSelection();\r\n\t\t\tthis.trigger('unselect', null, ev);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Unrenders a visual indication of selection\r\n\tunrenderSelection: function() {\r\n\t\t// subclasses should implement\r\n\t},\r\n\r\n\r\n\t// Handler for unselecting when the user clicks something and the 'unselectAuto' setting is on\r\n\tdocumentMousedown: function(ev) {\r\n\t\tvar ignore;\r\n\r\n\t\t// is there a selection, and has the user made a proper left click?\r\n\t\tif (this.isSelected && this.opt('unselectAuto') && isPrimaryMouseButton(ev)) {\r\n\r\n\t\t\t// only unselect if the clicked element is not identical to or inside of an 'unselectCancel' element\r\n\t\t\tignore = this.opt('unselectCancel');\r\n\t\t\tif (!ignore || !$(ev.target).closest(ignore).length) {\r\n\t\t\t\tthis.unselect(ev);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Day Click\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Triggers handlers to 'dayClick'\r\n\t// Span has start/end of the clicked area. Only the start is useful.\r\n\ttriggerDayClick: function(span, dayEl, ev) {\r\n\t\tthis.trigger(\r\n\t\t\t'dayClick',\r\n\t\t\tdayEl,\r\n\t\t\tthis.calendar.applyTimezone(span.start), // convert to calendar's timezone for external API\r\n\t\t\tev\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t/* Date Utils\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Initializes internal variables related to calculating hidden days-of-week\r\n\tinitHiddenDays: function() {\r\n\t\tvar hiddenDays = this.opt('hiddenDays') || []; // array of day-of-week indices that are hidden\r\n\t\tvar isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)\r\n\t\tvar dayCnt = 0;\r\n\t\tvar i;\r\n\r\n\t\tif (this.opt('weekends') === false) {\r\n\t\t\thiddenDays.push(0, 6); // 0=sunday, 6=saturday\r\n\t\t}\r\n\r\n\t\tfor (i = 0; i < 7; i++) {\r\n\t\t\tif (\r\n\t\t\t\t!(isHiddenDayHash[i] = $.inArray(i, hiddenDays) !== -1)\r\n\t\t\t) {\r\n\t\t\t\tdayCnt++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!dayCnt) {\r\n\t\t\tthrow 'invalid hiddenDays'; // all days were hidden? bad.\r\n\t\t}\r\n\r\n\t\tthis.isHiddenDayHash = isHiddenDayHash;\r\n\t},\r\n\r\n\r\n\t// Is the current day hidden?\r\n\t// `day` is a day-of-week index (0-6), or a Moment\r\n\tisHiddenDay: function(day) {\r\n\t\tif (moment.isMoment(day)) {\r\n\t\t\tday = day.day();\r\n\t\t}\r\n\t\treturn this.isHiddenDayHash[day];\r\n\t},\r\n\r\n\r\n\t// Incrementing the current day until it is no longer a hidden day, returning a copy.\r\n\t// If the initial value of `date` is not a hidden day, don't do anything.\r\n\t// Pass `isExclusive` as `true` if you are dealing with an end date.\r\n\t// `inc` defaults to `1` (increment one day forward each time)\r\n\tskipHiddenDays: function(date, inc, isExclusive) {\r\n\t\tvar out = date.clone();\r\n\t\tinc = inc || 1;\r\n\t\twhile (\r\n\t\t\tthis.isHiddenDayHash[(out.day() + (isExclusive ? inc : 0) + 7) % 7]\r\n\t\t) {\r\n\t\t\tout.add(inc, 'days');\r\n\t\t}\r\n\t\treturn out;\r\n\t},\r\n\r\n\r\n\t// Returns the date range of the full days the given range visually appears to occupy.\r\n\t// Returns a new range object.\r\n\tcomputeDayRange: function(range) {\r\n\t\tvar startDay = range.start.clone().stripTime(); // the beginning of the day the range starts\r\n\t\tvar end = range.end;\r\n\t\tvar endDay = null;\r\n\t\tvar endTimeMS;\r\n\r\n\t\tif (end) {\r\n\t\t\tendDay = end.clone().stripTime(); // the beginning of the day the range exclusively ends\r\n\t\t\tendTimeMS = +end.time(); // # of milliseconds into `endDay`\r\n\r\n\t\t\t// If the end time is actually inclusively part of the next day and is equal to or\r\n\t\t\t// beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.\r\n\t\t\t// Otherwise, leaving it as inclusive will cause it to exclude `endDay`.\r\n\t\t\tif (endTimeMS && endTimeMS >= this.nextDayThreshold) {\r\n\t\t\t\tendDay.add(1, 'days');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If no end was specified, or if it is within `startDay` but not past nextDayThreshold,\r\n\t\t// assign the default duration of one day.\r\n\t\tif (!end || endDay <= startDay) {\r\n\t\t\tendDay = startDay.clone().add(1, 'days');\r\n\t\t}\r\n\r\n\t\treturn { start: startDay, end: endDay };\r\n\t},\r\n\r\n\r\n\t// Does the given event visually appear to occupy more than one day?\r\n\tisMultiDayEvent: function(event) {\r\n\t\tvar range = this.computeDayRange(event); // event is range-ish\r\n\r\n\t\treturn range.end.diff(range.start, 'days') > 1;\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\nvar Calendar = FC.Calendar = Class.extend({\r\n\r\n\tdirDefaults: null, // option defaults related to LTR or RTL\r\n\tlangDefaults: null, // option defaults related to current locale\r\n\toverrides: null, // option overrides given to the fullCalendar constructor\r\n\toptions: null, // all defaults combined with overrides\r\n\tviewSpecCache: null, // cache of view definitions\r\n\tview: null, // current View object\r\n\theader: null,\r\n\tloadingLevel: 0, // number of simultaneous loading tasks\r\n\r\n\r\n\t// a lot of this class' OOP logic is scoped within this constructor function,\r\n\t// but in the future, write individual methods on the prototype.\r\n\tconstructor: Calendar_constructor,\r\n\r\n\r\n\t// Subclasses can override this for initialization logic after the constructor has been called\r\n\tinitialize: function() {\r\n\t},\r\n\r\n\r\n\t// Initializes `this.options` and other important options-related objects\r\n\tinitOptions: function(overrides) {\r\n\t\tvar lang, langDefaults;\r\n\t\tvar isRTL, dirDefaults;\r\n\r\n\t\t// converts legacy options into non-legacy ones.\r\n\t\t// in the future, when this is removed, don't use `overrides` reference. make a copy.\r\n\t\toverrides = massageOverrides(overrides);\r\n\r\n\t\tlang = overrides.lang;\r\n\t\tlangDefaults = langOptionHash[lang];\r\n\t\tif (!langDefaults) {\r\n\t\t\tlang = Calendar.defaults.lang;\r\n\t\t\tlangDefaults = langOptionHash[lang] || {};\r\n\t\t}\r\n\r\n\t\tisRTL = firstDefined(\r\n\t\t\toverrides.isRTL,\r\n\t\t\tlangDefaults.isRTL,\r\n\t\t\tCalendar.defaults.isRTL\r\n\t\t);\r\n\t\tdirDefaults = isRTL ? Calendar.rtlDefaults : {};\r\n\r\n\t\tthis.dirDefaults = dirDefaults;\r\n\t\tthis.langDefaults = langDefaults;\r\n\t\tthis.overrides = overrides;\r\n\t\tthis.options = mergeOptions([ // merge defaults and overrides. lowest to highest precedence\r\n\t\t\tCalendar.defaults, // global defaults\r\n\t\t\tdirDefaults,\r\n\t\t\tlangDefaults,\r\n\t\t\toverrides\r\n\t\t]);\r\n\t\tpopulateInstanceComputableOptions(this.options);\r\n\r\n\t\tthis.viewSpecCache = {}; // somewhat unrelated\r\n\t},\r\n\r\n\r\n\t// Gets information about how to create a view. Will use a cache.\r\n\tgetViewSpec: function(viewType) {\r\n\t\tvar cache = this.viewSpecCache;\r\n\r\n\t\treturn cache[viewType] || (cache[viewType] = this.buildViewSpec(viewType));\r\n\t},\r\n\r\n\r\n\t// Given a duration singular unit, like \"week\" or \"day\", finds a matching view spec.\r\n\t// Preference is given to views that have corresponding buttons.\r\n\tgetUnitViewSpec: function(unit) {\r\n\t\tvar viewTypes;\r\n\t\tvar i;\r\n\t\tvar spec;\r\n\r\n\t\tif ($.inArray(unit, intervalUnits) != -1) {\r\n\r\n\t\t\t// put views that have buttons first. there will be duplicates, but oh well\r\n\t\t\tviewTypes = this.header.getViewsWithButtons();\r\n\t\t\t$.each(FC.views, function(viewType) { // all views\r\n\t\t\t\tviewTypes.push(viewType);\r\n\t\t\t});\r\n\r\n\t\t\tfor (i = 0; i < viewTypes.length; i++) {\r\n\t\t\t\tspec = this.getViewSpec(viewTypes[i]);\r\n\t\t\t\tif (spec) {\r\n\t\t\t\t\tif (spec.singleUnit == unit) {\r\n\t\t\t\t\t\treturn spec;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Builds an object with information on how to create a given view\r\n\tbuildViewSpec: function(requestedViewType) {\r\n\t\tvar viewOverrides = this.overrides.views || {};\r\n\t\tvar specChain = []; // for the view. lowest to highest priority\r\n\t\tvar defaultsChain = []; // for the view. lowest to highest priority\r\n\t\tvar overridesChain = []; // for the view. lowest to highest priority\r\n\t\tvar viewType = requestedViewType;\r\n\t\tvar spec; // for the view\r\n\t\tvar overrides; // for the view\r\n\t\tvar duration;\r\n\t\tvar unit;\r\n\r\n\t\t// iterate from the specific view definition to a more general one until we hit an actual View class\r\n\t\twhile (viewType) {\r\n\t\t\tspec = fcViews[viewType];\r\n\t\t\toverrides = viewOverrides[viewType];\r\n\t\t\tviewType = null; // clear. might repopulate for another iteration\r\n\r\n\t\t\tif (typeof spec === 'function') { // TODO: deprecate\r\n\t\t\t\tspec = { 'class': spec };\r\n\t\t\t}\r\n\r\n\t\t\tif (spec) {\r\n\t\t\t\tspecChain.unshift(spec);\r\n\t\t\t\tdefaultsChain.unshift(spec.defaults || {});\r\n\t\t\t\tduration = duration || spec.duration;\r\n\t\t\t\tviewType = viewType || spec.type;\r\n\t\t\t}\r\n\r\n\t\t\tif (overrides) {\r\n\t\t\t\toverridesChain.unshift(overrides); // view-specific option hashes have options at zero-level\r\n\t\t\t\tduration = duration || overrides.duration;\r\n\t\t\t\tviewType = viewType || overrides.type;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tspec = mergeProps(specChain);\r\n\t\tspec.type = requestedViewType;\r\n\t\tif (!spec['class']) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (duration) {\r\n\t\t\tduration = moment.duration(duration);\r\n\t\t\tif (duration.valueOf()) { // valid?\r\n\t\t\t\tspec.duration = duration;\r\n\t\t\t\tunit = computeIntervalUnit(duration);\r\n\r\n\t\t\t\t// view is a single-unit duration, like \"week\" or \"day\"\r\n\t\t\t\t// incorporate options for this. lowest priority\r\n\t\t\t\tif (duration.as(unit) === 1) {\r\n\t\t\t\t\tspec.singleUnit = unit;\r\n\t\t\t\t\toverridesChain.unshift(viewOverrides[unit] || {});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tspec.defaults = mergeOptions(defaultsChain);\r\n\t\tspec.overrides = mergeOptions(overridesChain);\r\n\r\n\t\tthis.buildViewSpecOptions(spec);\r\n\t\tthis.buildViewSpecButtonText(spec, requestedViewType);\r\n\r\n\t\treturn spec;\r\n\t},\r\n\r\n\r\n\t// Builds and assigns a view spec's options object from its already-assigned defaults and overrides\r\n\tbuildViewSpecOptions: function(spec) {\r\n\t\tspec.options = mergeOptions([ // lowest to highest priority\r\n\t\t\tCalendar.defaults, // global defaults\r\n\t\t\tspec.defaults, // view's defaults (from ViewSubclass.defaults)\r\n\t\t\tthis.dirDefaults,\r\n\t\t\tthis.langDefaults, // locale and dir take precedence over view's defaults!\r\n\t\t\tthis.overrides, // calendar's overrides (options given to constructor)\r\n\t\t\tspec.overrides // view's overrides (view-specific options)\r\n\t\t]);\r\n\t\tpopulateInstanceComputableOptions(spec.options);\r\n\t},\r\n\r\n\r\n\t// Computes and assigns a view spec's buttonText-related options\r\n\tbuildViewSpecButtonText: function(spec, requestedViewType) {\r\n\r\n\t\t// given an options object with a possible `buttonText` hash, lookup the buttonText for the\r\n\t\t// requested view, falling back to a generic unit entry like \"week\" or \"day\"\r\n\t\tfunction queryButtonText(options) {\r\n\t\t\tvar buttonText = options.buttonText || {};\r\n\t\t\treturn buttonText[requestedViewType] ||\r\n\t\t\t\t(spec.singleUnit ? buttonText[spec.singleUnit] : null);\r\n\t\t}\r\n\r\n\t\t// highest to lowest priority\r\n\t\tspec.buttonTextOverride =\r\n\t\t\tqueryButtonText(this.overrides) || // constructor-specified buttonText lookup hash takes precedence\r\n\t\t\tspec.overrides.buttonText; // `buttonText` for view-specific options is a string\r\n\r\n\t\t// highest to lowest priority. mirrors buildViewSpecOptions\r\n\t\tspec.buttonTextDefault =\r\n\t\t\tqueryButtonText(this.langDefaults) ||\r\n\t\t\tqueryButtonText(this.dirDefaults) ||\r\n\t\t\tspec.defaults.buttonText || // a single string. from ViewSubclass.defaults\r\n\t\t\tqueryButtonText(Calendar.defaults) ||\r\n\t\t\t(spec.duration ? this.humanizeDuration(spec.duration) : null) || // like \"3 days\"\r\n\t\t\trequestedViewType; // fall back to given view name\r\n\t},\r\n\r\n\r\n\t// Given a view name for a custom view or a standard view, creates a ready-to-go View object\r\n\tinstantiateView: function(viewType) {\r\n\t\tvar spec = this.getViewSpec(viewType);\r\n\r\n\t\treturn new spec['class'](this, viewType, spec.options, spec.duration);\r\n\t},\r\n\r\n\r\n\t// Returns a boolean about whether the view is okay to instantiate at some point\r\n\tisValidViewType: function(viewType) {\r\n\t\treturn Boolean(this.getViewSpec(viewType));\r\n\t},\r\n\r\n\r\n\t// Should be called when any type of async data fetching begins\r\n\tpushLoading: function() {\r\n\t\tif (!(this.loadingLevel++)) {\r\n\t\t\tthis.trigger('loading', null, true, this.view);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Should be called when any type of async data fetching completes\r\n\tpopLoading: function() {\r\n\t\tif (!(--this.loadingLevel)) {\r\n\t\t\tthis.trigger('loading', null, false, this.view);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Given arguments to the select method in the API, returns a span (unzoned start/end and other info)\r\n\tbuildSelectSpan: function(zonedStartInput, zonedEndInput) {\r\n\t\tvar start = this.moment(zonedStartInput).stripZone();\r\n\t\tvar end;\r\n\r\n\t\tif (zonedEndInput) {\r\n\t\t\tend = this.moment(zonedEndInput).stripZone();\r\n\t\t}\r\n\t\telse if (start.hasTime()) {\r\n\t\t\tend = start.clone().add(this.defaultTimedEventDuration);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tend = start.clone().add(this.defaultAllDayEventDuration);\r\n\t\t}\r\n\r\n\t\treturn { start: start, end: end };\r\n\t}\r\n\r\n});\r\n\r\n\r\nCalendar.mixin(Emitter);\r\n\r\n\r\nfunction Calendar_constructor(element, overrides) {\r\n\tvar t = this;\r\n\r\n\r\n\tt.initOptions(overrides || {});\r\n\tvar options = this.options;\r\n\r\n\t\r\n\t// Exports\r\n\t// -----------------------------------------------------------------------------------\r\n\r\n\tt.render = render;\r\n\tt.destroy = destroy;\r\n\tt.refetchEvents = refetchEvents;\r\n\tt.reportEvents = reportEvents;\r\n\tt.reportEventChange = reportEventChange;\r\n\tt.rerenderEvents = renderEvents; // `renderEvents` serves as a rerender. an API method\r\n\tt.changeView = renderView; // `renderView` will switch to another view\r\n\tt.select = select;\r\n\tt.unselect = unselect;\r\n\tt.prev = prev;\r\n\tt.next = next;\r\n\tt.prevYear = prevYear;\r\n\tt.nextYear = nextYear;\r\n\tt.today = today;\r\n\tt.gotoDate = gotoDate;\r\n\tt.incrementDate = incrementDate;\r\n\tt.zoomTo = zoomTo;\r\n\tt.getDate = getDate;\r\n\tt.getCalendar = getCalendar;\r\n\tt.getView = getView;\r\n\tt.option = option;\r\n\tt.trigger = trigger;\r\n\r\n\r\n\r\n\t// Language-data Internals\r\n\t// -----------------------------------------------------------------------------------\r\n\t// Apply overrides to the current language's data\r\n\r\n\r\n\tvar localeData = createObject( // make a cheap copy\r\n\t\tgetMomentLocaleData(options.lang) // will fall back to en\r\n\t);\r\n\r\n\tif (options.monthNames) {\r\n\t\tlocaleData._months = options.monthNames;\r\n\t}\r\n\tif (options.monthNamesShort) {\r\n\t\tlocaleData._monthsShort = options.monthNamesShort;\r\n\t}\r\n\tif (options.dayNames) {\r\n\t\tlocaleData._weekdays = options.dayNames;\r\n\t}\r\n\tif (options.dayNamesShort) {\r\n\t\tlocaleData._weekdaysShort = options.dayNamesShort;\r\n\t}\r\n\tif (options.firstDay != null) {\r\n\t\tvar _week = createObject(localeData._week); // _week: { dow: # }\r\n\t\t_week.dow = options.firstDay;\r\n\t\tlocaleData._week = _week;\r\n\t}\r\n\r\n\t// assign a normalized value, to be used by our .week() moment extension\r\n\tlocaleData._fullCalendar_weekCalc = (function(weekCalc) {\r\n\t\tif (typeof weekCalc === 'function') {\r\n\t\t\treturn weekCalc;\r\n\t\t}\r\n\t\telse if (weekCalc === 'local') {\r\n\t\t\treturn weekCalc;\r\n\t\t}\r\n\t\telse if (weekCalc === 'iso' || weekCalc === 'ISO') {\r\n\t\t\treturn 'ISO';\r\n\t\t}\r\n\t})(options.weekNumberCalculation);\r\n\r\n\r\n\r\n\t// Calendar-specific Date Utilities\r\n\t// -----------------------------------------------------------------------------------\r\n\r\n\r\n\tt.defaultAllDayEventDuration = moment.duration(options.defaultAllDayEventDuration);\r\n\tt.defaultTimedEventDuration = moment.duration(options.defaultTimedEventDuration);\r\n\r\n\r\n\t// Builds a moment using the settings of the current calendar: timezone and language.\r\n\t// Accepts anything the vanilla moment() constructor accepts.\r\n\tt.moment = function() {\r\n\t\tvar mom;\r\n\r\n\t\tif (options.timezone === 'local') {\r\n\t\t\tmom = FC.moment.apply(null, arguments);\r\n\r\n\t\t\t// Force the moment to be local, because FC.moment doesn't guarantee it.\r\n\t\t\tif (mom.hasTime()) { // don't give ambiguously-timed moments a local zone\r\n\t\t\t\tmom.local();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (options.timezone === 'UTC') {\r\n\t\t\tmom = FC.moment.utc.apply(null, arguments); // process as UTC\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmom = FC.moment.parseZone.apply(null, arguments); // let the input decide the zone\r\n\t\t}\r\n\r\n\t\tif ('_locale' in mom) { // moment 2.8 and above\r\n\t\t\tmom._locale = localeData;\r\n\t\t}\r\n\t\telse { // pre-moment-2.8\r\n\t\t\tmom._lang = localeData;\r\n\t\t}\r\n\r\n\t\treturn mom;\r\n\t};\r\n\r\n\r\n\t// Returns a boolean about whether or not the calendar knows how to calculate\r\n\t// the timezone offset of arbitrary dates in the current timezone.\r\n\tt.getIsAmbigTimezone = function() {\r\n\t\treturn options.timezone !== 'local' && options.timezone !== 'UTC';\r\n\t};\r\n\r\n\r\n\t// Returns a copy of the given date in the current timezone. Has no effect on dates without times.\r\n\tt.applyTimezone = function(date) {\r\n\t\tif (!date.hasTime()) {\r\n\t\t\treturn date.clone();\r\n\t\t}\r\n\r\n\t\tvar zonedDate = t.moment(date.toArray());\r\n\t\tvar timeAdjust = date.time() - zonedDate.time();\r\n\t\tvar adjustedZonedDate;\r\n\r\n\t\t// Safari sometimes has problems with this coersion when near DST. Adjust if necessary. (bug #2396)\r\n\t\tif (timeAdjust) { // is the time result different than expected?\r\n\t\t\tadjustedZonedDate = zonedDate.clone().add(timeAdjust); // add milliseconds\r\n\t\t\tif (date.time() - adjustedZonedDate.time() === 0) { // does it match perfectly now?\r\n\t\t\t\tzonedDate = adjustedZonedDate;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn zonedDate;\r\n\t};\r\n\r\n\r\n\t// Returns a moment for the current date, as defined by the client's computer or from the `now` option.\r\n\t// Will return an moment with an ambiguous timezone.\r\n\tt.getNow = function() {\r\n\t\tvar now = options.now;\r\n\t\tif (typeof now === 'function') {\r\n\t\t\tnow = now();\r\n\t\t}\r\n\t\treturn t.moment(now).stripZone();\r\n\t};\r\n\r\n\r\n\t// Get an event's normalized end date. If not present, calculate it from the defaults.\r\n\tt.getEventEnd = function(event) {\r\n\t\tif (event.end) {\r\n\t\t\treturn event.end.clone();\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn t.getDefaultEventEnd(event.allDay, event.start);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t// Given an event's allDay status and start date, return what its fallback end date should be.\r\n\t// TODO: rename to computeDefaultEventEnd\r\n\tt.getDefaultEventEnd = function(allDay, zonedStart) {\r\n\t\tvar end = zonedStart.clone();\r\n\r\n\t\tif (allDay) {\r\n\t\t\tend.stripTime().add(t.defaultAllDayEventDuration);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tend.add(t.defaultTimedEventDuration);\r\n\t\t}\r\n\r\n\t\tif (t.getIsAmbigTimezone()) {\r\n\t\t\tend.stripZone(); // we don't know what the tzo should be\r\n\t\t}\r\n\r\n\t\treturn end;\r\n\t};\r\n\r\n\r\n\t// Produces a human-readable string for the given duration.\r\n\t// Side-effect: changes the locale of the given duration.\r\n\tt.humanizeDuration = function(duration) {\r\n\t\treturn (duration.locale || duration.lang).call(duration, options.lang) // works moment-pre-2.8\r\n\t\t\t.humanize();\r\n\t};\r\n\r\n\r\n\t\r\n\t// Imports\r\n\t// -----------------------------------------------------------------------------------\r\n\r\n\r\n\tEventManager.call(t, options);\r\n\tvar isFetchNeeded = t.isFetchNeeded;\r\n\tvar fetchEvents = t.fetchEvents;\r\n\r\n\r\n\r\n\t// Locals\r\n\t// -----------------------------------------------------------------------------------\r\n\r\n\r\n\tvar _element = element[0];\r\n\tvar header;\r\n\tvar headerElement;\r\n\tvar content;\r\n\tvar tm; // for making theme classes\r\n\tvar currentView; // NOTE: keep this in sync with this.view\r\n\tvar viewsByType = {}; // holds all instantiated view instances, current or not\r\n\tvar suggestedViewHeight;\r\n\tvar windowResizeProxy; // wraps the windowResize function\r\n\tvar ignoreWindowResize = 0;\r\n\tvar events = [];\r\n\tvar date; // unzoned\r\n\t\r\n\t\r\n\t\r\n\t// Main Rendering\r\n\t// -----------------------------------------------------------------------------------\r\n\r\n\r\n\t// compute the initial ambig-timezone date\r\n\tif (options.defaultDate != null) {\r\n\t\tdate = t.moment(options.defaultDate).stripZone();\r\n\t}\r\n\telse {\r\n\t\tdate = t.getNow(); // getNow already returns unzoned\r\n\t}\r\n\t\r\n\t\r\n\tfunction render() {\r\n\t\tif (!content) {\r\n\t\t\tinitialRender();\r\n\t\t}\r\n\t\telse if (elementVisible()) {\r\n\t\t\t// mainly for the public API\r\n\t\t\tcalcSize();\r\n\t\t\trenderView();\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction initialRender() {\r\n\t\ttm = options.theme ? 'ui' : 'fc';\r\n\t\telement.addClass('fc');\r\n\r\n\t\tif (options.isRTL) {\r\n\t\t\telement.addClass('fc-rtl');\r\n\t\t}\r\n\t\telse {\r\n\t\t\telement.addClass('fc-ltr');\r\n\t\t}\r\n\r\n\t\tif (options.theme) {\r\n\t\t\telement.addClass('ui-widget');\r\n\t\t}\r\n\t\telse {\r\n\t\t\telement.addClass('fc-unthemed');\r\n\t\t}\r\n\r\n\t\tcontent = $(\"<div class='fc-view-container'/>\").prependTo(element);\r\n\r\n\t\theader = t.header = new Header(t, options);\r\n\t\theaderElement = header.render();\r\n\t\tif (headerElement) {\r\n\t\t\telement.prepend(headerElement);\r\n\t\t}\r\n\r\n\t\trenderView(options.defaultView);\r\n\r\n\t\tif (options.handleWindowResize) {\r\n\t\t\twindowResizeProxy = debounce(windowResize, options.windowResizeDelay); // prevents rapid calls\r\n\t\t\t$(window).resize(windowResizeProxy);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction destroy() {\r\n\r\n\t\tif (currentView) {\r\n\t\t\tcurrentView.removeElement();\r\n\r\n\t\t\t// NOTE: don't null-out currentView/t.view in case API methods are called after destroy.\r\n\t\t\t// It is still the \"current\" view, just not rendered.\r\n\t\t}\r\n\r\n\t\theader.removeElement();\r\n\t\tcontent.remove();\r\n\t\telement.removeClass('fc fc-ltr fc-rtl fc-unthemed ui-widget');\r\n\r\n\t\tif (windowResizeProxy) {\r\n\t\t\t$(window).unbind('resize', windowResizeProxy);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction elementVisible() {\r\n\t\treturn element.is(':visible');\r\n\t}\r\n\t\r\n\t\r\n\r\n\t// View Rendering\r\n\t// -----------------------------------------------------------------------------------\r\n\r\n\r\n\t// Renders a view because of a date change, view-type change, or for the first time.\r\n\t// If not given a viewType, keep the current view but render different dates.\r\n\tfunction renderView(viewType) {\r\n\t\tignoreWindowResize++;\r\n\r\n\t\t// if viewType is changing, remove the old view's rendering\r\n\t\tif (currentView && viewType && currentView.type !== viewType) {\r\n\t\t\theader.deactivateButton(currentView.type);\r\n\t\t\tfreezeContentHeight(); // prevent a scroll jump when view element is removed\r\n\t\t\tcurrentView.removeElement();\r\n\t\t\tcurrentView = t.view = null;\r\n\t\t}\r\n\r\n\t\t// if viewType changed, or the view was never created, create a fresh view\r\n\t\tif (!currentView && viewType) {\r\n\t\t\tcurrentView = t.view =\r\n\t\t\t\tviewsByType[viewType] ||\r\n\t\t\t\t(viewsByType[viewType] = t.instantiateView(viewType));\r\n\r\n\t\t\tcurrentView.setElement(\r\n\t\t\t\t$(\"<div class='fc-view fc-\" + viewType + \"-view' />\").appendTo(content)\r\n\t\t\t);\r\n\t\t\theader.activateButton(viewType);\r\n\t\t}\r\n\r\n\t\tif (currentView) {\r\n\r\n\t\t\t// in case the view should render a period of time that is completely hidden\r\n\t\t\tdate = currentView.massageCurrentDate(date);\r\n\r\n\t\t\t// render or rerender the view\r\n\t\t\tif (\r\n\t\t\t\t!currentView.displaying ||\r\n\t\t\t\t!date.isWithin(currentView.intervalStart, currentView.intervalEnd) // implicit date window change\r\n\t\t\t) {\r\n\t\t\t\tif (elementVisible()) {\r\n\r\n\t\t\t\t\tcurrentView.display(date); // will call freezeContentHeight\r\n\t\t\t\t\tunfreezeContentHeight(); // immediately unfreeze regardless of whether display is async\r\n\r\n\t\t\t\t\t// need to do this after View::render, so dates are calculated\r\n\t\t\t\t\tupdateHeaderTitle();\r\n\t\t\t\t\tupdateTodayButton();\r\n\r\n\t\t\t\t\tgetAndRenderEvents();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tunfreezeContentHeight(); // undo any lone freezeContentHeight calls\r\n\t\tignoreWindowResize--;\r\n\t}\r\n\r\n\t\r\n\r\n\t// Resizing\r\n\t// -----------------------------------------------------------------------------------\r\n\r\n\r\n\tt.getSuggestedViewHeight = function() {\r\n\t\tif (suggestedViewHeight === undefined) {\r\n\t\t\tcalcSize();\r\n\t\t}\r\n\t\treturn suggestedViewHeight;\r\n\t};\r\n\r\n\r\n\tt.isHeightAuto = function() {\r\n\t\treturn options.contentHeight === 'auto' || options.height === 'auto';\r\n\t};\r\n\t\r\n\t\r\n\tfunction updateSize(shouldRecalc) {\r\n\t\tif (elementVisible()) {\r\n\r\n\t\t\tif (shouldRecalc) {\r\n\t\t\t\t_calcSize();\r\n\t\t\t}\r\n\r\n\t\t\tignoreWindowResize++;\r\n\t\t\tcurrentView.updateSize(true); // isResize=true. will poll getSuggestedViewHeight() and isHeightAuto()\r\n\t\t\tignoreWindowResize--;\r\n\r\n\t\t\treturn true; // signal success\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction calcSize() {\r\n\t\tif (elementVisible()) {\r\n\t\t\t_calcSize();\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction _calcSize() { // assumes elementVisible\r\n\t\tif (typeof options.contentHeight === 'number') { // exists and not 'auto'\r\n\t\t\tsuggestedViewHeight = options.contentHeight;\r\n\t\t}\r\n\t\telse if (typeof options.height === 'number') { // exists and not 'auto'\r\n\t\t\tsuggestedViewHeight = options.height - (headerElement ? headerElement.outerHeight(true) : 0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuggestedViewHeight = Math.round(content.width() / Math.max(options.aspectRatio, .5));\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction windowResize(ev) {\r\n\t\tif (\r\n\t\t\t!ignoreWindowResize &&\r\n\t\t\tev.target === window && // so we don't process jqui \"resize\" events that have bubbled up\r\n\t\t\tcurrentView.start // view has already been rendered\r\n\t\t) {\r\n\t\t\tif (updateSize(true)) {\r\n\t\t\t\tcurrentView.trigger('windowResize', _element);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/* Event Fetching/Rendering\r\n\t-----------------------------------------------------------------------------*/\r\n\t// TODO: going forward, most of this stuff should be directly handled by the view\r\n\r\n\r\n\tfunction refetchEvents() { // can be called as an API method\r\n\t\tdestroyEvents(); // so that events are cleared before user starts waiting for AJAX\r\n\t\tfetchAndRenderEvents();\r\n\t}\r\n\r\n\r\n\tfunction renderEvents() { // destroys old events if previously rendered\r\n\t\tif (elementVisible()) {\r\n\t\t\tfreezeContentHeight();\r\n\t\t\tcurrentView.displayEvents(events);\r\n\t\t\tunfreezeContentHeight();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction destroyEvents() {\r\n\t\tfreezeContentHeight();\r\n\t\tcurrentView.clearEvents();\r\n\t\tunfreezeContentHeight();\r\n\t}\r\n\t\r\n\r\n\tfunction getAndRenderEvents() {\r\n\t\tif (!options.lazyFetching || isFetchNeeded(currentView.start, currentView.end)) {\r\n\t\t\tfetchAndRenderEvents();\r\n\t\t}\r\n\t\telse {\r\n\t\t\trenderEvents();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction fetchAndRenderEvents() {\r\n\t\tfetchEvents(currentView.start, currentView.end);\r\n\t\t\t// ... will call reportEvents\r\n\t\t\t// ... which will call renderEvents\r\n\t}\r\n\r\n\t\r\n\t// called when event data arrives\r\n\tfunction reportEvents(_events) {\r\n\t\tevents = _events;\r\n\t\trenderEvents();\r\n\t}\r\n\r\n\r\n\t// called when a single event's data has been changed\r\n\tfunction reportEventChange() {\r\n\t\trenderEvents();\r\n\t}\r\n\r\n\r\n\r\n\t/* Header Updating\r\n\t-----------------------------------------------------------------------------*/\r\n\r\n\r\n\tfunction updateHeaderTitle() {\r\n\t\theader.updateTitle(currentView.title);\r\n\t}\r\n\r\n\r\n\tfunction updateTodayButton() {\r\n\t\tvar now = t.getNow();\r\n\t\tif (now.isWithin(currentView.intervalStart, currentView.intervalEnd)) {\r\n\t\t\theader.disableButton('today');\r\n\t\t}\r\n\t\telse {\r\n\t\t\theader.enableButton('today');\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\r\n\t/* Selection\r\n\t-----------------------------------------------------------------------------*/\r\n\t\r\n\r\n\t// this public method receives start/end dates in any format, with any timezone\r\n\tfunction select(zonedStartInput, zonedEndInput) {\r\n\t\tcurrentView.select(\r\n\t\t\tt.buildSelectSpan.apply(t, arguments)\r\n\t\t);\r\n\t}\r\n\t\r\n\r\n\tfunction unselect() { // safe to be called before renderView\r\n\t\tif (currentView) {\r\n\t\t\tcurrentView.unselect();\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/* Date\r\n\t-----------------------------------------------------------------------------*/\r\n\t\r\n\t\r\n\tfunction prev() {\r\n\t\tdate = currentView.computePrevDate(date);\r\n\t\trenderView();\r\n\t}\r\n\t\r\n\t\r\n\tfunction next() {\r\n\t\tdate = currentView.computeNextDate(date);\r\n\t\trenderView();\r\n\t}\r\n\t\r\n\t\r\n\tfunction prevYear() {\r\n\t\tdate.add(-1, 'years');\r\n\t\trenderView();\r\n\t}\r\n\t\r\n\t\r\n\tfunction nextYear() {\r\n\t\tdate.add(1, 'years');\r\n\t\trenderView();\r\n\t}\r\n\t\r\n\t\r\n\tfunction today() {\r\n\t\tdate = t.getNow();\r\n\t\trenderView();\r\n\t}\r\n\t\r\n\t\r\n\tfunction gotoDate(zonedDateInput) {\r\n\t\tdate = t.moment(zonedDateInput).stripZone();\r\n\t\trenderView();\r\n\t}\r\n\t\r\n\t\r\n\tfunction incrementDate(delta) {\r\n\t\tdate.add(moment.duration(delta));\r\n\t\trenderView();\r\n\t}\r\n\r\n\r\n\t// Forces navigation to a view for the given date.\r\n\t// `viewType` can be a specific view name or a generic one like \"week\" or \"day\".\r\n\tfunction zoomTo(newDate, viewType) {\r\n\t\tvar spec;\r\n\r\n\t\tviewType = viewType || 'day'; // day is default zoom\r\n\t\tspec = t.getViewSpec(viewType) || t.getUnitViewSpec(viewType);\r\n\r\n\t\tdate = newDate.clone();\r\n\t\trenderView(spec ? spec.type : null);\r\n\t}\r\n\t\r\n\t\r\n\t// for external API\r\n\tfunction getDate() {\r\n\t\treturn t.applyTimezone(date); // infuse the calendar's timezone\r\n\t}\r\n\r\n\r\n\r\n\t/* Height \"Freezing\"\r\n\t-----------------------------------------------------------------------------*/\r\n\t// TODO: move this into the view\r\n\r\n\tt.freezeContentHeight = freezeContentHeight;\r\n\tt.unfreezeContentHeight = unfreezeContentHeight;\r\n\r\n\r\n\tfunction freezeContentHeight() {\r\n\t\tcontent.css({\r\n\t\t\twidth: '100%',\r\n\t\t\theight: content.height(),\r\n\t\t\toverflow: 'hidden'\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tfunction unfreezeContentHeight() {\r\n\t\tcontent.css({\r\n\t\t\twidth: '',\r\n\t\t\theight: '',\r\n\t\t\toverflow: ''\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/* Misc\r\n\t-----------------------------------------------------------------------------*/\r\n\t\r\n\r\n\tfunction getCalendar() {\r\n\t\treturn t;\r\n\t}\r\n\r\n\t\r\n\tfunction getView() {\r\n\t\treturn currentView;\r\n\t}\r\n\t\r\n\t\r\n\tfunction option(name, value) {\r\n\t\tif (value === undefined) {\r\n\t\t\treturn options[name];\r\n\t\t}\r\n\t\tif (name == 'height' || name == 'contentHeight' || name == 'aspectRatio') {\r\n\t\t\toptions[name] = value;\r\n\t\t\tupdateSize(true); // true = allow recalculation of height\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction trigger(name, thisObj) { // overrides the Emitter's trigger method :(\r\n\t\tvar args = Array.prototype.slice.call(arguments, 2);\r\n\r\n\t\tthisObj = thisObj || _element;\r\n\t\tthis.triggerWith(name, thisObj, args); // Emitter's method\r\n\r\n\t\tif (options[name]) {\r\n\t\t\treturn options[name].apply(thisObj, args);\r\n\t\t}\r\n\t}\r\n\r\n\tt.initialize();\r\n}\r\n\r\n;;\r\n\r\nCalendar.defaults = {\r\n\r\n\ttitleRangeSeparator: ' \\u2014 ', // emphasized dash\r\n\tmonthYearFormat: 'MMMM YYYY', // required for en. other languages rely on datepicker computable option\r\n\r\n\tdefaultTimedEventDuration: '02:00:00',\r\n\tdefaultAllDayEventDuration: { days: 1 },\r\n\tforceEventDuration: false,\r\n\tnextDayThreshold: '09:00:00', // 9am\r\n\r\n\t// display\r\n\tdefaultView: 'month',\r\n\taspectRatio: 1.35,\r\n\theader: {\r\n\t\tleft: 'title',\r\n\t\tcenter: '',\r\n\t\tright: 'today prev,next'\r\n\t},\r\n\tweekends: true,\r\n\tweekNumbers: false,\r\n\r\n\tweekNumberTitle: 'W',\r\n\tweekNumberCalculation: 'local',\r\n\t\r\n\t//editable: false,\r\n\r\n\tscrollTime: '06:00:00',\r\n\t\r\n\t// event ajax\r\n\tlazyFetching: true,\r\n\tstartParam: 'start',\r\n\tendParam: 'end',\r\n\ttimezoneParam: 'timezone',\r\n\r\n\ttimezone: false,\r\n\r\n\t//allDayDefault: undefined,\r\n\r\n\t// locale\r\n\tisRTL: false,\r\n\tbuttonText: {\r\n\t\tprev: \"prev\",\r\n\t\tnext: \"next\",\r\n\t\tprevYear: \"prev year\",\r\n\t\tnextYear: \"next year\",\r\n\t\tyear: 'year', // TODO: locale files need to specify this\r\n\t\ttoday: 'today',\r\n\t\tmonth: 'month',\r\n\t\tweek: 'week',\r\n\t\tday: 'day'\r\n\t},\r\n\r\n\tbuttonIcons: {\r\n\t\tprev: 'left-single-arrow',\r\n\t\tnext: 'right-single-arrow',\r\n\t\tprevYear: 'left-double-arrow',\r\n\t\tnextYear: 'right-double-arrow'\r\n\t},\r\n\t\r\n\t// jquery-ui theming\r\n\ttheme: false,\r\n\tthemeButtonIcons: {\r\n\t\tprev: 'circle-triangle-w',\r\n\t\tnext: 'circle-triangle-e',\r\n\t\tprevYear: 'seek-prev',\r\n\t\tnextYear: 'seek-next'\r\n\t},\r\n\r\n\t//eventResizableFromStart: false,\r\n\tdragOpacity: .75,\r\n\tdragRevertDuration: 500,\r\n\tdragScroll: true,\r\n\t\r\n\t//selectable: false,\r\n\tunselectAuto: true,\r\n\t\r\n\tdropAccept: '*',\r\n\r\n\teventOrder: 'title',\r\n\r\n\teventLimit: false,\r\n\teventLimitText: 'more',\r\n\teventLimitClick: 'popover',\r\n\tdayPopoverFormat: 'LL',\r\n\t\r\n\thandleWindowResize: true,\r\n\twindowResizeDelay: 200 // milliseconds before an updateSize happens\r\n\t\r\n};\r\n\r\n\r\nCalendar.englishDefaults = { // used by lang.js\r\n\tdayPopoverFormat: 'dddd, MMMM D'\r\n};\r\n\r\n\r\nCalendar.rtlDefaults = { // right-to-left defaults\r\n\theader: { // TODO: smarter solution (first/center/last ?)\r\n\t\tleft: 'next,prev today',\r\n\t\tcenter: '',\r\n\t\tright: 'title'\r\n\t},\r\n\tbuttonIcons: {\r\n\t\tprev: 'right-single-arrow',\r\n\t\tnext: 'left-single-arrow',\r\n\t\tprevYear: 'right-double-arrow',\r\n\t\tnextYear: 'left-double-arrow'\r\n\t},\r\n\tthemeButtonIcons: {\r\n\t\tprev: 'circle-triangle-e',\r\n\t\tnext: 'circle-triangle-w',\r\n\t\tnextYear: 'seek-prev',\r\n\t\tprevYear: 'seek-next'\r\n\t}\r\n};\r\n\r\n;;\r\n\r\nvar langOptionHash = FC.langs = {}; // initialize and expose\r\n\r\n\r\n// TODO: document the structure and ordering of a FullCalendar lang file\r\n// TODO: rename everything \"lang\" to \"locale\", like what the moment project did\r\n\r\n\r\n// Initialize jQuery UI datepicker translations while using some of the translations\r\n// Will set this as the default language for datepicker.\r\nFC.datepickerLang = function(langCode, dpLangCode, dpOptions) {\r\n\r\n\t// get the FullCalendar internal option hash for this language. create if necessary\r\n\tvar fcOptions = langOptionHash[langCode] || (langOptionHash[langCode] = {});\r\n\r\n\t// transfer some simple options from datepicker to fc\r\n\tfcOptions.isRTL = dpOptions.isRTL;\r\n\tfcOptions.weekNumberTitle = dpOptions.weekHeader;\r\n\r\n\t// compute some more complex options from datepicker\r\n\t$.each(dpComputableOptions, function(name, func) {\r\n\t\tfcOptions[name] = func(dpOptions);\r\n\t});\r\n\r\n\t// is jQuery UI Datepicker is on the page?\r\n\tif ($.datepicker) {\r\n\r\n\t\t// Register the language data.\r\n\t\t// FullCalendar and MomentJS use language codes like \"pt-br\" but Datepicker\r\n\t\t// does it like \"pt-BR\" or if it doesn't have the language, maybe just \"pt\".\r\n\t\t// Make an alias so the language can be referenced either way.\r\n\t\t$.datepicker.regional[dpLangCode] =\r\n\t\t\t$.datepicker.regional[langCode] = // alias\r\n\t\t\t\tdpOptions;\r\n\r\n\t\t// Alias 'en' to the default language data. Do this every time.\r\n\t\t$.datepicker.regional.en = $.datepicker.regional[''];\r\n\r\n\t\t// Set as Datepicker's global defaults.\r\n\t\t$.datepicker.setDefaults(dpOptions);\r\n\t}\r\n};\r\n\r\n\r\n// Sets FullCalendar-specific translations. Will set the language as the global default.\r\nFC.lang = function(langCode, newFcOptions) {\r\n\tvar fcOptions;\r\n\tvar momOptions;\r\n\r\n\t// get the FullCalendar internal option hash for this language. create if necessary\r\n\tfcOptions = langOptionHash[langCode] || (langOptionHash[langCode] = {});\r\n\r\n\t// provided new options for this language? merge them in\r\n\tif (newFcOptions) {\r\n\t\tfcOptions = langOptionHash[langCode] = mergeOptions([ fcOptions, newFcOptions ]);\r\n\t}\r\n\r\n\t// compute language options that weren't defined.\r\n\t// always do this. newFcOptions can be undefined when initializing from i18n file,\r\n\t// so no way to tell if this is an initialization or a default-setting.\r\n\tmomOptions = getMomentLocaleData(langCode); // will fall back to en\r\n\t$.each(momComputableOptions, function(name, func) {\r\n\t\tif (fcOptions[name] == null) {\r\n\t\t\tfcOptions[name] = func(momOptions, fcOptions);\r\n\t\t}\r\n\t});\r\n\r\n\t// set it as the default language for FullCalendar\r\n\tCalendar.defaults.lang = langCode;\r\n};\r\n\r\n\r\n// NOTE: can't guarantee any of these computations will run because not every language has datepicker\r\n// configs, so make sure there are English fallbacks for these in the defaults file.\r\nvar dpComputableOptions = {\r\n\r\n\tbuttonText: function(dpOptions) {\r\n\t\treturn {\r\n\t\t\t// the translations sometimes wrongly contain HTML entities\r\n\t\t\tprev: stripHtmlEntities(dpOptions.prevText),\r\n\t\t\tnext: stripHtmlEntities(dpOptions.nextText),\r\n\t\t\ttoday: stripHtmlEntities(dpOptions.currentText)\r\n\t\t};\r\n\t},\r\n\r\n\t// Produces format strings like \"MMMM YYYY\" -> \"September 2014\"\r\n\tmonthYearFormat: function(dpOptions) {\r\n\t\treturn dpOptions.showMonthAfterYear ?\r\n\t\t\t'YYYY[' + dpOptions.yearSuffix + '] MMMM' :\r\n\t\t\t'MMMM YYYY[' + dpOptions.yearSuffix + ']';\r\n\t}\r\n\r\n};\r\n\r\nvar momComputableOptions = {\r\n\r\n\t// Produces format strings like \"ddd M/D\" -> \"Fri 9/15\"\r\n\tdayOfMonthFormat: function(momOptions, fcOptions) {\r\n\t\tvar format = momOptions.longDateFormat('l'); // for the format like \"M/D/YYYY\"\r\n\r\n\t\t// strip the year off the edge, as well as other misc non-whitespace chars\r\n\t\tformat = format.replace(/^Y+[^\\w\\s]*|[^\\w\\s]*Y+$/g, '');\r\n\r\n\t\tif (fcOptions.isRTL) {\r\n\t\t\tformat += ' ddd'; // for RTL, add day-of-week to end\r\n\t\t}\r\n\t\telse {\r\n\t\t\tformat = 'ddd ' + format; // for LTR, add day-of-week to beginning\r\n\t\t}\r\n\t\treturn format;\r\n\t},\r\n\r\n\t// Produces format strings like \"h:mma\" -> \"6:00pm\"\r\n\tmediumTimeFormat: function(momOptions) { // can't be called `timeFormat` because collides with option\r\n\t\treturn momOptions.longDateFormat('LT')\r\n\t\t\t.replace(/\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\r\n\t},\r\n\r\n\t// Produces format strings like \"h(:mm)a\" -> \"6pm\" / \"6:30pm\"\r\n\tsmallTimeFormat: function(momOptions) {\r\n\t\treturn momOptions.longDateFormat('LT')\r\n\t\t\t.replace(':mm', '(:mm)')\r\n\t\t\t.replace(/(\\Wmm)$/, '($1)') // like above, but for foreign langs\r\n\t\t\t.replace(/\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\r\n\t},\r\n\r\n\t// Produces format strings like \"h(:mm)t\" -> \"6p\" / \"6:30p\"\r\n\textraSmallTimeFormat: function(momOptions) {\r\n\t\treturn momOptions.longDateFormat('LT')\r\n\t\t\t.replace(':mm', '(:mm)')\r\n\t\t\t.replace(/(\\Wmm)$/, '($1)') // like above, but for foreign langs\r\n\t\t\t.replace(/\\s*a$/i, 't'); // convert to AM/PM/am/pm to lowercase one-letter. remove any spaces beforehand\r\n\t},\r\n\r\n\t// Produces format strings like \"ha\" / \"H\" -> \"6pm\" / \"18\"\r\n\thourFormat: function(momOptions) {\r\n\t\treturn momOptions.longDateFormat('LT')\r\n\t\t\t.replace(':mm', '')\r\n\t\t\t.replace(/(\\Wmm)$/, '') // like above, but for foreign langs\r\n\t\t\t.replace(/\\s*a$/i, 'a'); // convert AM/PM/am/pm to lowercase. remove any spaces beforehand\r\n\t},\r\n\r\n\t// Produces format strings like \"h:mm\" -> \"6:30\" (with no AM/PM)\r\n\tnoMeridiemTimeFormat: function(momOptions) {\r\n\t\treturn momOptions.longDateFormat('LT')\r\n\t\t\t.replace(/\\s*a$/i, ''); // remove trailing AM/PM\r\n\t}\r\n\r\n};\r\n\r\n\r\n// options that should be computed off live calendar options (considers override options)\r\n// TODO: best place for this? related to lang?\r\n// TODO: flipping text based on isRTL is a bad idea because the CSS `direction` might want to handle it\r\nvar instanceComputableOptions = {\r\n\r\n\t// Produces format strings for results like \"Mo 16\"\r\n\tsmallDayDateFormat: function(options) {\r\n\t\treturn options.isRTL ?\r\n\t\t\t'D dd' :\r\n\t\t\t'dd D';\r\n\t},\r\n\r\n\t// Produces format strings for results like \"Wk 5\"\r\n\tweekFormat: function(options) {\r\n\t\treturn options.isRTL ?\r\n\t\t\t'w[ ' + options.weekNumberTitle + ']' :\r\n\t\t\t'[' + options.weekNumberTitle + ' ]w';\r\n\t},\r\n\r\n\t// Produces format strings for results like \"Wk5\"\r\n\tsmallWeekFormat: function(options) {\r\n\t\treturn options.isRTL ?\r\n\t\t\t'w[' + options.weekNumberTitle + ']' :\r\n\t\t\t'[' + options.weekNumberTitle + ']w';\r\n\t}\r\n\r\n};\r\n\r\nfunction populateInstanceComputableOptions(options) {\r\n\t$.each(instanceComputableOptions, function(name, func) {\r\n\t\tif (options[name] == null) {\r\n\t\t\toptions[name] = func(options);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n\r\n// Returns moment's internal locale data. If doesn't exist, returns English.\r\n// Works with moment-pre-2.8\r\nfunction getMomentLocaleData(langCode) {\r\n\tvar func = moment.localeData || moment.langData;\r\n\treturn func.call(moment, langCode) ||\r\n\t\tfunc.call(moment, 'en'); // the newer localData could return null, so fall back to en\r\n}\r\n\r\n\r\n// Initialize English by forcing computation of moment-derived options.\r\n// Also, sets it as the default.\r\nFC.lang('en', Calendar.englishDefaults);\r\n\r\n;;\r\n\r\n/* Top toolbar area with buttons and title\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n// TODO: rename all header-related things to \"toolbar\"\r\n\r\nfunction Header(calendar, options) {\r\n\tvar t = this;\r\n\t\r\n\t// exports\r\n\tt.render = render;\r\n\tt.removeElement = removeElement;\r\n\tt.updateTitle = updateTitle;\r\n\tt.activateButton = activateButton;\r\n\tt.deactivateButton = deactivateButton;\r\n\tt.disableButton = disableButton;\r\n\tt.enableButton = enableButton;\r\n\tt.getViewsWithButtons = getViewsWithButtons;\r\n\t\r\n\t// locals\r\n\tvar el = $();\r\n\tvar viewsWithButtons = [];\r\n\tvar tm;\r\n\r\n\r\n\tfunction render() {\r\n\t\tvar sections = options.header;\r\n\r\n\t\ttm = options.theme ? 'ui' : 'fc';\r\n\r\n\t\tif (sections) {\r\n\t\t\tel = $(\"<div class='fc-toolbar'/>\")\r\n\t\t\t\t.append(renderSection('left'))\r\n\t\t\t\t.append(renderSection('right'))\r\n\t\t\t\t.append(renderSection('center'))\r\n\t\t\t\t.append('<div class=\"fc-clear\"/>');\r\n\r\n\t\t\treturn el;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction removeElement() {\r\n\t\tel.remove();\r\n\t\tel = $();\r\n\t}\r\n\t\r\n\t\r\n\tfunction renderSection(position) {\r\n\t\tvar sectionEl = $('<div class=\"fc-' + position + '\"/>');\r\n\t\tvar buttonStr = options.header[position];\r\n\r\n\t\tif (buttonStr) {\r\n\t\t\t$.each(buttonStr.split(' '), function(i) {\r\n\t\t\t\tvar groupChildren = $();\r\n\t\t\t\tvar isOnlyButtons = true;\r\n\t\t\t\tvar groupEl;\r\n\r\n\t\t\t\t$.each(this.split(','), function(j, buttonName) {\r\n\t\t\t\t\tvar customButtonProps;\r\n\t\t\t\t\tvar viewSpec;\r\n\t\t\t\t\tvar buttonClick;\r\n\t\t\t\t\tvar overrideText; // text explicitly set by calendar's constructor options. overcomes icons\r\n\t\t\t\t\tvar defaultText;\r\n\t\t\t\t\tvar themeIcon;\r\n\t\t\t\t\tvar normalIcon;\r\n\t\t\t\t\tvar innerHtml;\r\n\t\t\t\t\tvar classes;\r\n\t\t\t\t\tvar button; // the element\r\n\r\n\t\t\t\t\tif (buttonName == 'title') {\r\n\t\t\t\t\t\tgroupChildren = groupChildren.add($('<h2>&nbsp;</h2>')); // we always want it to take up height\r\n\t\t\t\t\t\tisOnlyButtons = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif ((customButtonProps = (calendar.options.customButtons || {})[buttonName])) {\r\n\t\t\t\t\t\t\tbuttonClick = function(ev) {\r\n\t\t\t\t\t\t\t\tif (customButtonProps.click) {\r\n\t\t\t\t\t\t\t\t\tcustomButtonProps.click.call(button[0], ev);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\toverrideText = ''; // icons will override text\r\n\t\t\t\t\t\t\tdefaultText = customButtonProps.text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if ((viewSpec = calendar.getViewSpec(buttonName))) {\r\n\t\t\t\t\t\t\tbuttonClick = function() {\r\n\t\t\t\t\t\t\t\tcalendar.changeView(buttonName);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tviewsWithButtons.push(buttonName);\r\n\t\t\t\t\t\t\toverrideText = viewSpec.buttonTextOverride;\r\n\t\t\t\t\t\t\tdefaultText = viewSpec.buttonTextDefault;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (calendar[buttonName]) { // a calendar method\r\n\t\t\t\t\t\t\tbuttonClick = function() {\r\n\t\t\t\t\t\t\t\tcalendar[buttonName]();\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\toverrideText = (calendar.overrides.buttonText || {})[buttonName];\r\n\t\t\t\t\t\t\tdefaultText = options.buttonText[buttonName]; // everything else is considered default\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (buttonClick) {\r\n\r\n\t\t\t\t\t\t\tthemeIcon =\r\n\t\t\t\t\t\t\t\tcustomButtonProps ?\r\n\t\t\t\t\t\t\t\t\tcustomButtonProps.themeIcon :\r\n\t\t\t\t\t\t\t\t\toptions.themeButtonIcons[buttonName];\r\n\r\n\t\t\t\t\t\t\tnormalIcon =\r\n\t\t\t\t\t\t\t\tcustomButtonProps ?\r\n\t\t\t\t\t\t\t\t\tcustomButtonProps.icon :\r\n\t\t\t\t\t\t\t\t\toptions.buttonIcons[buttonName];\r\n\r\n\t\t\t\t\t\t\tif (overrideText) {\r\n\t\t\t\t\t\t\t\tinnerHtml = htmlEscape(overrideText);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (themeIcon && options.theme) {\r\n\t\t\t\t\t\t\t\tinnerHtml = \"<span class='ui-icon ui-icon-\" + themeIcon + \"'></span>\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (normalIcon && !options.theme) {\r\n\t\t\t\t\t\t\t\tinnerHtml = \"<span class='fc-icon fc-icon-\" + normalIcon + \"'></span>\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tinnerHtml = htmlEscape(defaultText);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tclasses = [\r\n\t\t\t\t\t\t\t\t'fc-' + buttonName + '-button',\r\n\t\t\t\t\t\t\t\ttm + '-button',\r\n\t\t\t\t\t\t\t\ttm + '-state-default'\r\n\t\t\t\t\t\t\t];\r\n\r\n\t\t\t\t\t\t\tbutton = $( // type=\"button\" so that it doesn't submit a form\r\n\t\t\t\t\t\t\t\t'<button type=\"button\" class=\"' + classes.join(' ') + '\">' +\r\n\t\t\t\t\t\t\t\t\tinnerHtml +\r\n\t\t\t\t\t\t\t\t'</button>'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t.click(function(ev) {\r\n\t\t\t\t\t\t\t\t\t// don't process clicks for disabled buttons\r\n\t\t\t\t\t\t\t\t\tif (!button.hasClass(tm + '-state-disabled')) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tbuttonClick(ev);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// after the click action, if the button becomes the \"active\" tab, or disabled,\r\n\t\t\t\t\t\t\t\t\t\t// it should never have a hover class, so remove it now.\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\tbutton.hasClass(tm + '-state-active') ||\r\n\t\t\t\t\t\t\t\t\t\t\tbutton.hasClass(tm + '-state-disabled')\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\tbutton.removeClass(tm + '-state-hover');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.mousedown(function() {\r\n\t\t\t\t\t\t\t\t\t// the *down* effect (mouse pressed in).\r\n\t\t\t\t\t\t\t\t\t// only on buttons that are not the \"active\" tab, or disabled\r\n\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-active')\r\n\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-disabled')\r\n\t\t\t\t\t\t\t\t\t\t.addClass(tm + '-state-down');\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.mouseup(function() {\r\n\t\t\t\t\t\t\t\t\t// undo the *down* effect\r\n\t\t\t\t\t\t\t\t\tbutton.removeClass(tm + '-state-down');\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.hover(\r\n\t\t\t\t\t\t\t\t\tfunction() {\r\n\t\t\t\t\t\t\t\t\t\t// the *hover* effect.\r\n\t\t\t\t\t\t\t\t\t\t// only on buttons that are not the \"active\" tab, or disabled\r\n\t\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-active')\r\n\t\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-disabled')\r\n\t\t\t\t\t\t\t\t\t\t\t.addClass(tm + '-state-hover');\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tfunction() {\r\n\t\t\t\t\t\t\t\t\t\t// undo the *hover* effect\r\n\t\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\t\t\t.removeClass(tm + '-state-hover')\r\n\t\t\t\t\t\t\t\t\t\t\t.removeClass(tm + '-state-down'); // if mouseleave happens before mouseup\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tgroupChildren = groupChildren.add(button);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (isOnlyButtons) {\r\n\t\t\t\t\tgroupChildren\r\n\t\t\t\t\t\t.first().addClass(tm + '-corner-left').end()\r\n\t\t\t\t\t\t.last().addClass(tm + '-corner-right').end();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (groupChildren.length > 1) {\r\n\t\t\t\t\tgroupEl = $('<div/>');\r\n\t\t\t\t\tif (isOnlyButtons) {\r\n\t\t\t\t\t\tgroupEl.addClass('fc-button-group');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroupEl.append(groupChildren);\r\n\t\t\t\t\tsectionEl.append(groupEl);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsectionEl.append(groupChildren); // 1 or 0 children\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn sectionEl;\r\n\t}\r\n\t\r\n\t\r\n\tfunction updateTitle(text) {\r\n\t\tel.find('h2').text(text);\r\n\t}\r\n\t\r\n\t\r\n\tfunction activateButton(buttonName) {\r\n\t\tel.find('.fc-' + buttonName + '-button')\r\n\t\t\t.addClass(tm + '-state-active');\r\n\t}\r\n\t\r\n\t\r\n\tfunction deactivateButton(buttonName) {\r\n\t\tel.find('.fc-' + buttonName + '-button')\r\n\t\t\t.removeClass(tm + '-state-active');\r\n\t}\r\n\t\r\n\t\r\n\tfunction disableButton(buttonName) {\r\n\t\tel.find('.fc-' + buttonName + '-button')\r\n\t\t\t.attr('disabled', 'disabled')\r\n\t\t\t.addClass(tm + '-state-disabled');\r\n\t}\r\n\t\r\n\t\r\n\tfunction enableButton(buttonName) {\r\n\t\tel.find('.fc-' + buttonName + '-button')\r\n\t\t\t.removeAttr('disabled')\r\n\t\t\t.removeClass(tm + '-state-disabled');\r\n\t}\r\n\r\n\r\n\tfunction getViewsWithButtons() {\r\n\t\treturn viewsWithButtons;\r\n\t}\r\n\r\n}\r\n\r\n;;\r\n\r\nFC.sourceNormalizers = [];\r\nFC.sourceFetchers = [];\r\n\r\nvar ajaxDefaults = {\r\n\tdataType: 'json',\r\n\tcache: false\r\n};\r\n\r\nvar eventGUID = 1;\r\n\r\n\r\nfunction EventManager(options) { // assumed to be a calendar\r\n\tvar t = this;\r\n\t\r\n\t\r\n\t// exports\r\n\tt.isFetchNeeded = isFetchNeeded;\r\n\tt.fetchEvents = fetchEvents;\r\n\tt.addEventSource = addEventSource;\r\n\tt.removeEventSource = removeEventSource;\r\n\tt.updateEvent = updateEvent;\r\n\tt.renderEvent = renderEvent;\r\n\tt.removeEvents = removeEvents;\r\n\tt.clientEvents = clientEvents;\r\n\tt.mutateEvent = mutateEvent;\r\n\tt.normalizeEventDates = normalizeEventDates;\r\n\tt.normalizeEventTimes = normalizeEventTimes;\r\n\t\r\n\t\r\n\t// imports\r\n\tvar reportEvents = t.reportEvents;\r\n\t\r\n\t\r\n\t// locals\r\n\tvar stickySource = { events: [] };\r\n\tvar sources = [ stickySource ];\r\n\tvar rangeStart, rangeEnd;\r\n\tvar currentFetchID = 0;\r\n\tvar pendingSourceCnt = 0;\r\n\tvar cache = []; // holds events that have already been expanded\r\n\r\n\r\n\t$.each(\r\n\t\t(options.events ? [ options.events ] : []).concat(options.eventSources || []),\r\n\t\tfunction(i, sourceInput) {\r\n\t\t\tvar source = buildEventSource(sourceInput);\r\n\t\t\tif (source) {\r\n\t\t\t\tsources.push(source);\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n\t\r\n\t\r\n\t\r\n\t/* Fetching\r\n\t-----------------------------------------------------------------------------*/\r\n\r\n\r\n\t// start and end are assumed to be unzoned\r\n\tfunction isFetchNeeded(start, end) {\r\n\t\treturn !rangeStart || // nothing has been fetched yet?\r\n\t\t\tstart < rangeStart || end > rangeEnd; // is part of the new range outside of the old range?\r\n\t}\r\n\t\r\n\t\r\n\tfunction fetchEvents(start, end) {\r\n\t\trangeStart = start;\r\n\t\trangeEnd = end;\r\n\t\tcache = [];\r\n\t\tvar fetchID = ++currentFetchID;\r\n\t\tvar len = sources.length;\r\n\t\tpendingSourceCnt = len;\r\n\t\tfor (var i=0; i<len; i++) {\r\n\t\t\tfetchEventSource(sources[i], fetchID);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tfunction fetchEventSource(source, fetchID) {\r\n\t\t_fetchEventSource(source, function(eventInputs) {\r\n\t\t\tvar isArraySource = $.isArray(source.events);\r\n\t\t\tvar i, eventInput;\r\n\t\t\tvar abstractEvent;\r\n\r\n\t\t\tif (fetchID == currentFetchID) {\r\n\r\n\t\t\t\tif (eventInputs) {\r\n\t\t\t\t\tfor (i = 0; i < eventInputs.length; i++) {\r\n\t\t\t\t\t\teventInput = eventInputs[i];\r\n\r\n\t\t\t\t\t\tif (isArraySource) { // array sources have already been convert to Event Objects\r\n\t\t\t\t\t\t\tabstractEvent = eventInput;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tabstractEvent = buildEventFromInput(eventInput, source);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (abstractEvent) { // not false (an invalid event)\r\n\t\t\t\t\t\t\tcache.push.apply(\r\n\t\t\t\t\t\t\t\tcache,\r\n\t\t\t\t\t\t\t\texpandEvent(abstractEvent) // add individual expanded events to the cache\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpendingSourceCnt--;\r\n\t\t\t\tif (!pendingSourceCnt) {\r\n\t\t\t\t\treportEvents(cache);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\tfunction _fetchEventSource(source, callback) {\r\n\t\tvar i;\r\n\t\tvar fetchers = FC.sourceFetchers;\r\n\t\tvar res;\r\n\r\n\t\tfor (i=0; i<fetchers.length; i++) {\r\n\t\t\tres = fetchers[i].call(\r\n\t\t\t\tt, // this, the Calendar object\r\n\t\t\t\tsource,\r\n\t\t\t\trangeStart.clone(),\r\n\t\t\t\trangeEnd.clone(),\r\n\t\t\t\toptions.timezone,\r\n\t\t\t\tcallback\r\n\t\t\t);\r\n\r\n\t\t\tif (res === true) {\r\n\t\t\t\t// the fetcher is in charge. made its own async request\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (typeof res == 'object') {\r\n\t\t\t\t// the fetcher returned a new source. process it\r\n\t\t\t\t_fetchEventSource(res, callback);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar events = source.events;\r\n\t\tif (events) {\r\n\t\t\tif ($.isFunction(events)) {\r\n\t\t\t\tt.pushLoading();\r\n\t\t\t\tevents.call(\r\n\t\t\t\t\tt, // this, the Calendar object\r\n\t\t\t\t\trangeStart.clone(),\r\n\t\t\t\t\trangeEnd.clone(),\r\n\t\t\t\t\toptions.timezone,\r\n\t\t\t\t\tfunction(events) {\r\n\t\t\t\t\t\tcallback(events);\r\n\t\t\t\t\t\tt.popLoading();\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse if ($.isArray(events)) {\r\n\t\t\t\tcallback(events);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tvar url = source.url;\r\n\t\t\tif (url) {\r\n\t\t\t\tvar success = source.success;\r\n\t\t\t\tvar error = source.error;\r\n\t\t\t\tvar complete = source.complete;\r\n\r\n\t\t\t\t// retrieve any outbound GET/POST $.ajax data from the options\r\n\t\t\t\tvar customData;\r\n\t\t\t\tif ($.isFunction(source.data)) {\r\n\t\t\t\t\t// supplied as a function that returns a key/value object\r\n\t\t\t\t\tcustomData = source.data();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// supplied as a straight key/value object\r\n\t\t\t\t\tcustomData = source.data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// use a copy of the custom data so we can modify the parameters\r\n\t\t\t\t// and not affect the passed-in object.\r\n\t\t\t\tvar data = $.extend({}, customData || {});\r\n\r\n\t\t\t\tvar startParam = firstDefined(source.startParam, options.startParam);\r\n\t\t\t\tvar endParam = firstDefined(source.endParam, options.endParam);\r\n\t\t\t\tvar timezoneParam = firstDefined(source.timezoneParam, options.timezoneParam);\r\n\r\n\t\t\t\tif (startParam) {\r\n\t\t\t\t\tdata[startParam] = rangeStart.format();\r\n\t\t\t\t}\r\n\t\t\t\tif (endParam) {\r\n\t\t\t\t\tdata[endParam] = rangeEnd.format();\r\n\t\t\t\t}\r\n\t\t\t\tif (options.timezone && options.timezone != 'local') {\r\n\t\t\t\t\tdata[timezoneParam] = options.timezone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt.pushLoading();\r\n\t\t\t\t$.ajax($.extend({}, ajaxDefaults, source, {\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tsuccess: function(events) {\r\n\t\t\t\t\t\tevents = events || [];\r\n\t\t\t\t\t\tvar res = applyAll(success, this, arguments);\r\n\t\t\t\t\t\tif ($.isArray(res)) {\r\n\t\t\t\t\t\t\tevents = res;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcallback(events);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function() {\r\n\t\t\t\t\t\tapplyAll(error, this, arguments);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcomplete: function() {\r\n\t\t\t\t\t\tapplyAll(complete, this, arguments);\r\n\t\t\t\t\t\tt.popLoading();\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}else{\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/* Sources\r\n\t-----------------------------------------------------------------------------*/\r\n\t\r\n\r\n\tfunction addEventSource(sourceInput) {\r\n\t\tvar source = buildEventSource(sourceInput);\r\n\t\tif (source) {\r\n\t\t\tsources.push(source);\r\n\t\t\tpendingSourceCnt++;\r\n\t\t\tfetchEventSource(source, currentFetchID); // will eventually call reportEvents\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction buildEventSource(sourceInput) { // will return undefined if invalid source\r\n\t\tvar normalizers = FC.sourceNormalizers;\r\n\t\tvar source;\r\n\t\tvar i;\r\n\r\n\t\tif ($.isFunction(sourceInput) || $.isArray(sourceInput)) {\r\n\t\t\tsource = { events: sourceInput };\r\n\t\t}\r\n\t\telse if (typeof sourceInput === 'string') {\r\n\t\t\tsource = { url: sourceInput };\r\n\t\t}\r\n\t\telse if (typeof sourceInput === 'object') {\r\n\t\t\tsource = $.extend({}, sourceInput); // shallow copy\r\n\t\t}\r\n\r\n\t\tif (source) {\r\n\r\n\t\t\t// TODO: repeat code, same code for event classNames\r\n\t\t\tif (source.className) {\r\n\t\t\t\tif (typeof source.className === 'string') {\r\n\t\t\t\t\tsource.className = source.className.split(/\\s+/);\r\n\t\t\t\t}\r\n\t\t\t\t// otherwise, assumed to be an array\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsource.className = [];\r\n\t\t\t}\r\n\r\n\t\t\t// for array sources, we convert to standard Event Objects up front\r\n\t\t\tif ($.isArray(source.events)) {\r\n\t\t\t\tsource.origArray = source.events; // for removeEventSource\r\n\t\t\t\tsource.events = $.map(source.events, function(eventInput) {\r\n\t\t\t\t\treturn buildEventFromInput(eventInput, source);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfor (i=0; i<normalizers.length; i++) {\r\n\t\t\t\tnormalizers[i].call(t, source);\r\n\t\t\t}\r\n\r\n\t\t\treturn source;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction removeEventSource(source) {\r\n\t\tsources = $.grep(sources, function(src) {\r\n\t\t\treturn !isSourcesEqual(src, source);\r\n\t\t});\r\n\t\t// remove all client events from that source\r\n\t\tcache = $.grep(cache, function(e) {\r\n\t\t\treturn !isSourcesEqual(e.source, source);\r\n\t\t});\r\n\t\treportEvents(cache);\r\n\t}\r\n\r\n\r\n\tfunction isSourcesEqual(source1, source2) {\r\n\t\treturn source1 && source2 && getSourcePrimitive(source1) == getSourcePrimitive(source2);\r\n\t}\r\n\r\n\r\n\tfunction getSourcePrimitive(source) {\r\n\t\treturn (\r\n\t\t\t(typeof source === 'object') ? // a normalized event source?\r\n\t\t\t\t(source.origArray || source.googleCalendarId || source.url || source.events) : // get the primitive\r\n\t\t\t\tnull\r\n\t\t) ||\r\n\t\tsource; // the given argument *is* the primitive\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/* Manipulation\r\n\t-----------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Only ever called from the externally-facing API\r\n\tfunction updateEvent(event) {\r\n\r\n\t\t// massage start/end values, even if date string values\r\n\t\tevent.start = t.moment(event.start);\r\n\t\tif (event.end) {\r\n\t\t\tevent.end = t.moment(event.end);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tevent.end = null;\r\n\t\t}\r\n\r\n\t\tmutateEvent(event, getMiscEventProps(event)); // will handle start/end/allDay normalization\r\n\t\treportEvents(cache); // reports event modifications (so we can redraw)\r\n\t}\r\n\r\n\r\n\t// Returns a hash of misc event properties that should be copied over to related events.\r\n\tfunction getMiscEventProps(event) {\r\n\t\tvar props = {};\r\n\r\n\t\t$.each(event, function(name, val) {\r\n\t\t\tif (isMiscEventPropName(name)) {\r\n\t\t\t\tif (val !== undefined && isAtomic(val)) { // a defined non-object\r\n\t\t\t\t\tprops[name] = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn props;\r\n\t}\r\n\r\n\t// non-date-related, non-id-related, non-secret\r\n\tfunction isMiscEventPropName(name) {\r\n\t\treturn !/^_|^(id|allDay|start|end)$/.test(name);\r\n\t}\r\n\r\n\t\r\n\t// returns the expanded events that were created\r\n\tfunction renderEvent(eventInput, stick) {\r\n\t\tvar abstractEvent = buildEventFromInput(eventInput);\r\n\t\tvar events;\r\n\t\tvar i, event;\r\n\r\n\t\tif (abstractEvent) { // not false (a valid input)\r\n\t\t\tevents = expandEvent(abstractEvent);\r\n\r\n\t\t\tfor (i = 0; i < events.length; i++) {\r\n\t\t\t\tevent = events[i];\r\n\r\n\t\t\t\tif (!event.source) {\r\n\t\t\t\t\tif (stick) {\r\n\t\t\t\t\t\tstickySource.events.push(event);\r\n\t\t\t\t\t\tevent.source = stickySource;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcache.push(event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treportEvents(cache);\r\n\r\n\t\t\treturn events;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\t\r\n\t\r\n\tfunction removeEvents(filter) {\r\n\t\tvar eventID;\r\n\t\tvar i;\r\n\r\n\t\tif (filter == null) { // null or undefined. remove all events\r\n\t\t\tfilter = function() { return true; }; // will always match\r\n\t\t}\r\n\t\telse if (!$.isFunction(filter)) { // an event ID\r\n\t\t\teventID = filter + '';\r\n\t\t\tfilter = function(event) {\r\n\t\t\t\treturn event._id == eventID;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Purge event(s) from our local cache\r\n\t\tcache = $.grep(cache, filter, true); // inverse=true\r\n\r\n\t\t// Remove events from array sources.\r\n\t\t// This works because they have been converted to official Event Objects up front.\r\n\t\t// (and as a result, event._id has been calculated).\r\n\t\tfor (i=0; i<sources.length; i++) {\r\n\t\t\tif ($.isArray(sources[i].events)) {\r\n\t\t\t\tsources[i].events = $.grep(sources[i].events, filter, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treportEvents(cache);\r\n\t}\r\n\t\r\n\t\r\n\tfunction clientEvents(filter) {\r\n\t\tif ($.isFunction(filter)) {\r\n\t\t\treturn $.grep(cache, filter);\r\n\t\t}\r\n\t\telse if (filter != null) { // not null, not undefined. an event ID\r\n\t\t\tfilter += '';\r\n\t\t\treturn $.grep(cache, function(e) {\r\n\t\t\t\treturn e._id == filter;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn cache; // else, return all\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/* Event Normalization\r\n\t-----------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Given a raw object with key/value properties, returns an \"abstract\" Event object.\r\n\t// An \"abstract\" event is an event that, if recurring, will not have been expanded yet.\r\n\t// Will return `false` when input is invalid.\r\n\t// `source` is optional\r\n\tfunction buildEventFromInput(input, source) {\r\n\t\tvar out = {};\r\n\t\tvar start, end;\r\n\t\tvar allDay;\r\n\r\n\t\tif (options.eventDataTransform) {\r\n\t\t\tinput = options.eventDataTransform(input);\r\n\t\t}\r\n\t\tif (source && source.eventDataTransform) {\r\n\t\t\tinput = source.eventDataTransform(input);\r\n\t\t}\r\n\r\n\t\t// Copy all properties over to the resulting object.\r\n\t\t// The special-case properties will be copied over afterwards.\r\n\t\t$.extend(out, input);\r\n\r\n\t\tif (source) {\r\n\t\t\tout.source = source;\r\n\t\t}\r\n\r\n\t\tout._id = input._id || (input.id === undefined ? '_fc' + eventGUID++ : input.id + '');\r\n\r\n\t\tif (input.className) {\r\n\t\t\tif (typeof input.className == 'string') {\r\n\t\t\t\tout.className = input.className.split(/\\s+/);\r\n\t\t\t}\r\n\t\t\telse { // assumed to be an array\r\n\t\t\t\tout.className = input.className;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tout.className = [];\r\n\t\t}\r\n\r\n\t\tstart = input.start || input.date; // \"date\" is an alias for \"start\"\r\n\t\tend = input.end;\r\n\r\n\t\t// parse as a time (Duration) if applicable\r\n\t\tif (isTimeString(start)) {\r\n\t\t\tstart = moment.duration(start);\r\n\t\t}\r\n\t\tif (isTimeString(end)) {\r\n\t\t\tend = moment.duration(end);\r\n\t\t}\r\n\r\n\t\tif (input.dow || moment.isDuration(start) || moment.isDuration(end)) {\r\n\r\n\t\t\t// the event is \"abstract\" (recurring) so don't calculate exact start/end dates just yet\r\n\t\t\tout.start = start ? moment.duration(start) : null; // will be a Duration or null\r\n\t\t\tout.end = end ? moment.duration(end) : null; // will be a Duration or null\r\n\t\t\tout._recurring = true; // our internal marker\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tif (start) {\r\n\t\t\t\tstart = t.moment(start);\r\n\t\t\t\tif (!start.isValid()) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (end) {\r\n\t\t\t\tend = t.moment(end);\r\n\t\t\t\tif (!end.isValid()) {\r\n\t\t\t\t\tend = null; // let defaults take over\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tallDay = input.allDay;\r\n\t\t\tif (allDay === undefined) { // still undefined? fallback to default\r\n\t\t\t\tallDay = firstDefined(\r\n\t\t\t\t\tsource ? source.allDayDefault : undefined,\r\n\t\t\t\t\toptions.allDayDefault\r\n\t\t\t\t);\r\n\t\t\t\t// still undefined? normalizeEventDates will calculate it\r\n\t\t\t}\r\n\r\n\t\t\tassignDatesToEvent(start, end, allDay, out);\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\r\n\t// Normalizes and assigns the given dates to the given partially-formed event object.\r\n\t// NOTE: mutates the given start/end moments. does not make a copy.\r\n\tfunction assignDatesToEvent(start, end, allDay, event) {\r\n\t\tevent.start = start;\r\n\t\tevent.end = end;\r\n\t\tevent.allDay = allDay;\r\n\t\tnormalizeEventDates(event);\r\n\t\tbackupEventDates(event);\r\n\t}\r\n\r\n\r\n\t// Ensures proper values for allDay/start/end. Accepts an Event object, or a plain object with event-ish properties.\r\n\t// NOTE: Will modify the given object.\r\n\tfunction normalizeEventDates(eventProps) {\r\n\r\n\t\tnormalizeEventTimes(eventProps);\r\n\r\n\t\tif (eventProps.end && !eventProps.end.isAfter(eventProps.start)) {\r\n\t\t\teventProps.end = null;\r\n\t\t}\r\n\r\n\t\tif (!eventProps.end) {\r\n\t\t\tif (options.forceEventDuration) {\r\n\t\t\t\teventProps.end = t.getDefaultEventEnd(eventProps.allDay, eventProps.start);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\teventProps.end = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Ensures the allDay property exists and the timeliness of the start/end dates are consistent\r\n\tfunction normalizeEventTimes(eventProps) {\r\n\t\tif (eventProps.allDay == null) {\r\n\t\t\teventProps.allDay = !(eventProps.start.hasTime() || (eventProps.end && eventProps.end.hasTime()));\r\n\t\t}\r\n\r\n\t\tif (eventProps.allDay) {\r\n\t\t\teventProps.start.stripTime();\r\n\t\t\tif (eventProps.end) {\r\n\t\t\t\t// TODO: consider nextDayThreshold here? If so, will require a lot of testing and adjustment\r\n\t\t\t\teventProps.end.stripTime();\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!eventProps.start.hasTime()) {\r\n\t\t\t\teventProps.start = t.applyTimezone(eventProps.start.time(0)); // will assign a 00:00 time\r\n\t\t\t}\r\n\t\t\tif (eventProps.end && !eventProps.end.hasTime()) {\r\n\t\t\t\teventProps.end = t.applyTimezone(eventProps.end.time(0)); // will assign a 00:00 time\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// If the given event is a recurring event, break it down into an array of individual instances.\r\n\t// If not a recurring event, return an array with the single original event.\r\n\t// If given a falsy input (probably because of a failed buildEventFromInput call), returns an empty array.\r\n\t// HACK: can override the recurring window by providing custom rangeStart/rangeEnd (for businessHours).\r\n\tfunction expandEvent(abstractEvent, _rangeStart, _rangeEnd) {\r\n\t\tvar events = [];\r\n\t\tvar dowHash;\r\n\t\tvar dow;\r\n\t\tvar i;\r\n\t\tvar date;\r\n\t\tvar startTime, endTime;\r\n\t\tvar start, end;\r\n\t\tvar event;\r\n\r\n\t\t_rangeStart = _rangeStart || rangeStart;\r\n\t\t_rangeEnd = _rangeEnd || rangeEnd;\r\n\r\n\t\tif (abstractEvent) {\r\n\t\t\tif (abstractEvent._recurring) {\r\n\r\n\t\t\t\t// make a boolean hash as to whether the event occurs on each day-of-week\r\n\t\t\t\tif ((dow = abstractEvent.dow)) {\r\n\t\t\t\t\tdowHash = {};\r\n\t\t\t\t\tfor (i = 0; i < dow.length; i++) {\r\n\t\t\t\t\t\tdowHash[dow[i]] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// iterate through every day in the current range\r\n\t\t\t\tdate = _rangeStart.clone().stripTime(); // holds the date of the current day\r\n\t\t\t\twhile (date.isBefore(_rangeEnd)) {\r\n\r\n\t\t\t\t\tif (!dowHash || dowHash[date.day()]) { // if everyday, or this particular day-of-week\r\n\r\n\t\t\t\t\t\tstartTime = abstractEvent.start; // the stored start and end properties are times (Durations)\r\n\t\t\t\t\t\tendTime = abstractEvent.end; // \"\r\n\t\t\t\t\t\tstart = date.clone();\r\n\t\t\t\t\t\tend = null;\r\n\r\n\t\t\t\t\t\tif (startTime) {\r\n\t\t\t\t\t\t\tstart = start.time(startTime);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (endTime) {\r\n\t\t\t\t\t\t\tend = date.clone().time(endTime);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tevent = $.extend({}, abstractEvent); // make a copy of the original\r\n\t\t\t\t\t\tassignDatesToEvent(\r\n\t\t\t\t\t\t\tstart, end,\r\n\t\t\t\t\t\t\t!startTime && !endTime, // allDay?\r\n\t\t\t\t\t\t\tevent\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tevents.push(event);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdate.add(1, 'days');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tevents.push(abstractEvent); // return the original event. will be a one-item array\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn events;\r\n\t}\r\n\r\n\r\n\r\n\t/* Event Modification Math\r\n\t-----------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Modifies an event and all related events by applying the given properties.\r\n\t// Special date-diffing logic is used for manipulation of dates.\r\n\t// If `props` does not contain start/end dates, the updated values are assumed to be the event's current start/end.\r\n\t// All date comparisons are done against the event's pristine _start and _end dates.\r\n\t// Returns an object with delta information and a function to undo all operations.\r\n\t// For making computations in a granularity greater than day/time, specify largeUnit.\r\n\t// NOTE: The given `newProps` might be mutated for normalization purposes.\r\n\tfunction mutateEvent(event, newProps, largeUnit) {\r\n\t\tvar miscProps = {};\r\n\t\tvar oldProps;\r\n\t\tvar clearEnd;\r\n\t\tvar startDelta;\r\n\t\tvar endDelta;\r\n\t\tvar durationDelta;\r\n\t\tvar undoFunc;\r\n\r\n\t\t// diffs the dates in the appropriate way, returning a duration\r\n\t\tfunction diffDates(date1, date0) { // date1 - date0\r\n\t\t\tif (largeUnit) {\r\n\t\t\t\treturn diffByUnit(date1, date0, largeUnit);\r\n\t\t\t}\r\n\t\t\telse if (newProps.allDay) {\r\n\t\t\t\treturn diffDay(date1, date0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn diffDayTime(date1, date0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnewProps = newProps || {};\r\n\r\n\t\t// normalize new date-related properties\r\n\t\tif (!newProps.start) {\r\n\t\t\tnewProps.start = event.start.clone();\r\n\t\t}\r\n\t\tif (newProps.end === undefined) {\r\n\t\t\tnewProps.end = event.end ? event.end.clone() : null;\r\n\t\t}\r\n\t\tif (newProps.allDay == null) { // is null or undefined?\r\n\t\t\tnewProps.allDay = event.allDay;\r\n\t\t}\r\n\t\tnormalizeEventDates(newProps);\r\n\r\n\t\t// create normalized versions of the original props to compare against\r\n\t\t// need a real end value, for diffing\r\n\t\toldProps = {\r\n\t\t\tstart: event._start.clone(),\r\n\t\t\tend: event._end ? event._end.clone() : t.getDefaultEventEnd(event._allDay, event._start),\r\n\t\t\tallDay: newProps.allDay // normalize the dates in the same regard as the new properties\r\n\t\t};\r\n\t\tnormalizeEventDates(oldProps);\r\n\r\n\t\t// need to clear the end date if explicitly changed to null\r\n\t\tclearEnd = event._end !== null && newProps.end === null;\r\n\r\n\t\t// compute the delta for moving the start date\r\n\t\tstartDelta = diffDates(newProps.start, oldProps.start);\r\n\r\n\t\t// compute the delta for moving the end date\r\n\t\tif (newProps.end) {\r\n\t\t\tendDelta = diffDates(newProps.end, oldProps.end);\r\n\t\t\tdurationDelta = endDelta.subtract(startDelta);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdurationDelta = null;\r\n\t\t}\r\n\r\n\t\t// gather all non-date-related properties\r\n\t\t$.each(newProps, function(name, val) {\r\n\t\t\tif (isMiscEventPropName(name)) {\r\n\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\tmiscProps[name] = val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// apply the operations to the event and all related events\r\n\t\tundoFunc = mutateEvents(\r\n\t\t\tclientEvents(event._id), // get events with this ID\r\n\t\t\tclearEnd,\r\n\t\t\tnewProps.allDay,\r\n\t\t\tstartDelta,\r\n\t\t\tdurationDelta,\r\n\t\t\tmiscProps\r\n\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tdateDelta: startDelta,\r\n\t\t\tdurationDelta: durationDelta,\r\n\t\t\tundo: undoFunc\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t// Modifies an array of events in the following ways (operations are in order):\r\n\t// - clear the event's `end`\r\n\t// - convert the event to allDay\r\n\t// - add `dateDelta` to the start and end\r\n\t// - add `durationDelta` to the event's duration\r\n\t// - assign `miscProps` to the event\r\n\t//\r\n\t// Returns a function that can be called to undo all the operations.\r\n\t//\r\n\t// TODO: don't use so many closures. possible memory issues when lots of events with same ID.\r\n\t//\r\n\tfunction mutateEvents(events, clearEnd, allDay, dateDelta, durationDelta, miscProps) {\r\n\t\tvar isAmbigTimezone = t.getIsAmbigTimezone();\r\n\t\tvar undoFunctions = [];\r\n\r\n\t\t// normalize zero-length deltas to be null\r\n\t\tif (dateDelta && !dateDelta.valueOf()) { dateDelta = null; }\r\n\t\tif (durationDelta && !durationDelta.valueOf()) { durationDelta = null; }\r\n\r\n\t\t$.each(events, function(i, event) {\r\n\t\t\tvar oldProps;\r\n\t\t\tvar newProps;\r\n\r\n\t\t\t// build an object holding all the old values, both date-related and misc.\r\n\t\t\t// for the undo function.\r\n\t\t\toldProps = {\r\n\t\t\t\tstart: event.start.clone(),\r\n\t\t\t\tend: event.end ? event.end.clone() : null,\r\n\t\t\t\tallDay: event.allDay\r\n\t\t\t};\r\n\t\t\t$.each(miscProps, function(name) {\r\n\t\t\t\toldProps[name] = event[name];\r\n\t\t\t});\r\n\r\n\t\t\t// new date-related properties. work off the original date snapshot.\r\n\t\t\t// ok to use references because they will be thrown away when backupEventDates is called.\r\n\t\t\tnewProps = {\r\n\t\t\t\tstart: event._start,\r\n\t\t\t\tend: event._end,\r\n\t\t\t\tallDay: allDay // normalize the dates in the same regard as the new properties\r\n\t\t\t};\r\n\t\t\tnormalizeEventDates(newProps); // massages start/end/allDay\r\n\r\n\t\t\t// strip or ensure the end date\r\n\t\t\tif (clearEnd) {\r\n\t\t\t\tnewProps.end = null;\r\n\t\t\t}\r\n\t\t\telse if (durationDelta && !newProps.end) { // the duration translation requires an end date\r\n\t\t\t\tnewProps.end = t.getDefaultEventEnd(newProps.allDay, newProps.start);\r\n\t\t\t}\r\n\r\n\t\t\tif (dateDelta) {\r\n\t\t\t\tnewProps.start.add(dateDelta);\r\n\t\t\t\tif (newProps.end) {\r\n\t\t\t\t\tnewProps.end.add(dateDelta);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (durationDelta) {\r\n\t\t\t\tnewProps.end.add(durationDelta); // end already ensured above\r\n\t\t\t}\r\n\r\n\t\t\t// if the dates have changed, and we know it is impossible to recompute the\r\n\t\t\t// timezone offsets, strip the zone.\r\n\t\t\tif (\r\n\t\t\t\tisAmbigTimezone &&\r\n\t\t\t\t!newProps.allDay &&\r\n\t\t\t\t(dateDelta || durationDelta)\r\n\t\t\t) {\r\n\t\t\t\tnewProps.start.stripZone();\r\n\t\t\t\tif (newProps.end) {\r\n\t\t\t\t\tnewProps.end.stripZone();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$.extend(event, miscProps, newProps); // copy over misc props, then date-related props\r\n\t\t\tbackupEventDates(event); // regenerate internal _start/_end/_allDay\r\n\r\n\t\t\tundoFunctions.push(function() {\r\n\t\t\t\t$.extend(event, oldProps);\r\n\t\t\t\tbackupEventDates(event); // regenerate internal _start/_end/_allDay\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn function() {\r\n\t\t\tfor (var i = 0; i < undoFunctions.length; i++) {\r\n\t\t\t\tundoFunctions[i]();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\r\n\t/* Business Hours\r\n\t-----------------------------------------------------------------------------------------*/\r\n\r\n\tt.getBusinessHoursEvents = getBusinessHoursEvents;\r\n\r\n\r\n\t// Returns an array of events as to when the business hours occur in the given view.\r\n\t// Abuse of our event system :(\r\n\tfunction getBusinessHoursEvents(wholeDay) {\r\n\t\tvar optionVal = options.businessHours;\r\n\t\tvar defaultVal = {\r\n\t\t\tclassName: 'fc-nonbusiness',\r\n\t\t\tstart: '09:00',\r\n\t\t\tend: '17:00',\r\n\t\t\tdow: [ 1, 2, 3, 4, 5 ], // monday - friday\r\n\t\t\trendering: 'inverse-background'\r\n\t\t};\r\n\t\tvar view = t.getView();\r\n\t\tvar eventInput;\r\n\r\n\t\tif (optionVal) { // `true` (which means \"use the defaults\") or an override object\r\n\t\t\teventInput = $.extend(\r\n\t\t\t\t{}, // copy to a new object in either case\r\n\t\t\t\tdefaultVal,\r\n\t\t\t\ttypeof optionVal === 'object' ? optionVal : {} // override the defaults\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (eventInput) {\r\n\r\n\t\t\t// if a whole-day series is requested, clear the start/end times\r\n\t\t\tif (wholeDay) {\r\n\t\t\t\teventInput.start = null;\r\n\t\t\t\teventInput.end = null;\r\n\t\t\t}\r\n\r\n\t\t\treturn expandEvent(\r\n\t\t\t\tbuildEventFromInput(eventInput),\r\n\t\t\t\tview.start,\r\n\t\t\t\tview.end\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\t/* Overlapping / Constraining\r\n\t-----------------------------------------------------------------------------------------*/\r\n\r\n\tt.isEventSpanAllowed = isEventSpanAllowed;\r\n\tt.isExternalSpanAllowed = isExternalSpanAllowed;\r\n\tt.isSelectionSpanAllowed = isSelectionSpanAllowed;\r\n\r\n\r\n\t// Determines if the given event can be relocated to the given span (unzoned start/end with other misc data)\r\n\tfunction isEventSpanAllowed(span, event) {\r\n\t\tvar source = event.source || {};\r\n\t\tvar constraint = firstDefined(\r\n\t\t\tevent.constraint,\r\n\t\t\tsource.constraint,\r\n\t\t\toptions.eventConstraint\r\n\t\t);\r\n\t\tvar overlap = firstDefined(\r\n\t\t\tevent.overlap,\r\n\t\t\tsource.overlap,\r\n\t\t\toptions.eventOverlap\r\n\t\t);\r\n\t\treturn isSpanAllowed(span, constraint, overlap, event);\r\n\t}\r\n\r\n\r\n\t// Determines if an external event can be relocated to the given span (unzoned start/end with other misc data)\r\n\tfunction isExternalSpanAllowed(eventSpan, eventLocation, eventProps) {\r\n\t\tvar eventInput;\r\n\t\tvar event;\r\n\r\n\t\t// note: very similar logic is in View's reportExternalDrop\r\n\t\tif (eventProps) {\r\n\t\t\teventInput = $.extend({}, eventProps, eventLocation);\r\n\t\t\tevent = expandEvent(buildEventFromInput(eventInput))[0];\r\n\t\t}\r\n\r\n\t\tif (event) {\r\n\t\t\treturn isEventSpanAllowed(eventSpan, event);\r\n\t\t}\r\n\t\telse { // treat it as a selection\r\n\r\n\t\t\treturn isSelectionSpanAllowed(eventSpan);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Determines the given span (unzoned start/end with other misc data) can be selected.\r\n\tfunction isSelectionSpanAllowed(span) {\r\n\t\treturn isSpanAllowed(span, options.selectConstraint, options.selectOverlap);\r\n\t}\r\n\r\n\r\n\t// Returns true if the given span (caused by an event drop/resize or a selection) is allowed to exist\r\n\t// according to the constraint/overlap settings.\r\n\t// `event` is not required if checking a selection.\r\n\tfunction isSpanAllowed(span, constraint, overlap, event) {\r\n\t\tvar constraintEvents;\r\n\t\tvar anyContainment;\r\n\t\tvar peerEvents;\r\n\t\tvar i, peerEvent;\r\n\t\tvar peerOverlap;\r\n\r\n\t\t// the range must be fully contained by at least one of produced constraint events\r\n\t\tif (constraint != null) {\r\n\r\n\t\t\t// not treated as an event! intermediate data structure\r\n\t\t\t// TODO: use ranges in the future\r\n\t\t\tconstraintEvents = constraintToEvents(constraint);\r\n\r\n\t\t\tanyContainment = false;\r\n\t\t\tfor (i = 0; i < constraintEvents.length; i++) {\r\n\t\t\t\tif (eventContainsRange(constraintEvents[i], span)) {\r\n\t\t\t\t\tanyContainment = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!anyContainment) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tpeerEvents = t.getPeerEvents(span, event);\r\n\r\n\t\tfor (i = 0; i < peerEvents.length; i++)  {\r\n\t\t\tpeerEvent = peerEvents[i];\r\n\r\n\t\t\t// there needs to be an actual intersection before disallowing anything\r\n\t\t\tif (eventIntersectsRange(peerEvent, span)) {\r\n\r\n\t\t\t\t// evaluate overlap for the given range and short-circuit if necessary\r\n\t\t\t\tif (overlap === false) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t// if the event's overlap is a test function, pass the peer event in question as the first param\r\n\t\t\t\telse if (typeof overlap === 'function' && !overlap(peerEvent, event)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if we are computing if the given range is allowable for an event, consider the other event's\r\n\t\t\t\t// EventObject-specific or Source-specific `overlap` property\r\n\t\t\t\tif (event) {\r\n\t\t\t\t\tpeerOverlap = firstDefined(\r\n\t\t\t\t\t\tpeerEvent.overlap,\r\n\t\t\t\t\t\t(peerEvent.source || {}).overlap\r\n\t\t\t\t\t\t// we already considered the global `eventOverlap`\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (peerOverlap === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if the peer event's overlap is a test function, pass the subject event as the first param\r\n\t\t\t\t\tif (typeof peerOverlap === 'function' && !peerOverlap(event, peerEvent)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t// Given an event input from the API, produces an array of event objects. Possible event inputs:\r\n\t// 'businessHours'\r\n\t// An event ID (number or string)\r\n\t// An object with specific start/end dates or a recurring event (like what businessHours accepts)\r\n\tfunction constraintToEvents(constraintInput) {\r\n\r\n\t\tif (constraintInput === 'businessHours') {\r\n\t\t\treturn getBusinessHoursEvents();\r\n\t\t}\r\n\r\n\t\tif (typeof constraintInput === 'object') {\r\n\t\t\treturn expandEvent(buildEventFromInput(constraintInput));\r\n\t\t}\r\n\r\n\t\treturn clientEvents(constraintInput); // probably an ID\r\n\t}\r\n\r\n\r\n\t// Does the event's date range fully contain the given range?\r\n\t// start/end already assumed to have stripped zones :(\r\n\tfunction eventContainsRange(event, range) {\r\n\t\tvar eventStart = event.start.clone().stripZone();\r\n\t\tvar eventEnd = t.getEventEnd(event).stripZone();\r\n\r\n\t\treturn range.start >= eventStart && range.end <= eventEnd;\r\n\t}\r\n\r\n\r\n\t// Does the event's date range intersect with the given range?\r\n\t// start/end already assumed to have stripped zones :(\r\n\tfunction eventIntersectsRange(event, range) {\r\n\t\tvar eventStart = event.start.clone().stripZone();\r\n\t\tvar eventEnd = t.getEventEnd(event).stripZone();\r\n\r\n\t\treturn range.start < eventEnd && range.end > eventStart;\r\n\t}\r\n\r\n\r\n\tt.getEventCache = function() {\r\n\t\treturn cache;\r\n\t};\r\n\r\n}\r\n\r\n\r\n// Returns a list of events that the given event should be compared against when being considered for a move to\r\n// the specified span. Attached to the Calendar's prototype because EventManager is a mixin for a Calendar.\r\nCalendar.prototype.getPeerEvents = function(span, event) {\r\n\tvar cache = this.getEventCache();\r\n\tvar peerEvents = [];\r\n\tvar i, otherEvent;\r\n\r\n\tfor (i = 0; i < cache.length; i++) {\r\n\t\totherEvent = cache[i];\r\n\t\tif (\r\n\t\t\t!event ||\r\n\t\t\tevent._id !== otherEvent._id // don't compare the event to itself or other related [repeating] events\r\n\t\t) {\r\n\t\t\tpeerEvents.push(otherEvent);\r\n\t\t}\r\n\t}\r\n\r\n\treturn peerEvents;\r\n};\r\n\r\n\r\n// updates the \"backup\" properties, which are preserved in order to compute diffs later on.\r\nfunction backupEventDates(event) {\r\n\tevent._allDay = event.allDay;\r\n\tevent._start = event.start.clone();\r\n\tevent._end = event.end ? event.end.clone() : null;\r\n}\r\n\r\n;;\r\n\r\n/* An abstract class for the \"basic\" views, as well as month view. Renders one or more rows of day cells.\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n// It is a manager for a DayGrid subcomponent, which does most of the heavy lifting.\r\n// It is responsible for managing width/height.\r\n\r\nvar BasicView = FC.BasicView = View.extend({\r\n\r\n\tdayGridClass: DayGrid, // class the dayGrid will be instantiated from (overridable by subclasses)\r\n\tdayGrid: null, // the main subcomponent that does most of the heavy lifting\r\n\r\n\tdayNumbersVisible: false, // display day numbers on each day cell?\r\n\tweekNumbersVisible: false, // display week numbers along the side?\r\n\r\n\tweekNumberWidth: null, // width of all the week-number cells running down the side\r\n\r\n\theadContainerEl: null, // div that hold's the dayGrid's rendered date header\r\n\theadRowEl: null, // the fake row element of the day-of-week header\r\n\r\n\r\n\tinitialize: function() {\r\n\t\tthis.dayGrid = this.instantiateDayGrid();\r\n\t},\r\n\r\n\r\n\t// Generates the DayGrid object this view needs. Draws from this.dayGridClass\r\n\tinstantiateDayGrid: function() {\r\n\t\t// generate a subclass on the fly with BasicView-specific behavior\r\n\t\t// TODO: cache this subclass\r\n\t\tvar subclass = this.dayGridClass.extend(basicDayGridMethods);\r\n\r\n\t\treturn new subclass(this);\r\n\t},\r\n\r\n\r\n\t// Sets the display range and computes all necessary dates\r\n\tsetRange: function(range) {\r\n\t\tView.prototype.setRange.call(this, range); // call the super-method\r\n\r\n\t\tthis.dayGrid.breakOnWeeks = /year|month|week/.test(this.intervalUnit); // do before setRange\r\n\t\tthis.dayGrid.setRange(range);\r\n\t},\r\n\r\n\r\n\t// Compute the value to feed into setRange. Overrides superclass.\r\n\tcomputeRange: function(date) {\r\n\t\tvar range = View.prototype.computeRange.call(this, date); // get value from the super-method\r\n\r\n\t\t// year and month views should be aligned with weeks. this is already done for week\r\n\t\tif (/year|month/.test(range.intervalUnit)) {\r\n\t\t\trange.start.startOf('week');\r\n\t\t\trange.start = this.skipHiddenDays(range.start);\r\n\r\n\t\t\t// make end-of-week if not already\r\n\t\t\tif (range.end.weekday()) {\r\n\t\t\t\trange.end.add(1, 'week').startOf('week');\r\n\t\t\t\trange.end = this.skipHiddenDays(range.end, -1, true); // exclusively move backwards\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn range;\r\n\t},\r\n\r\n\r\n\t// Renders the view into `this.el`, which should already be assigned\r\n\trenderDates: function() {\r\n\r\n\t\tthis.dayNumbersVisible = this.dayGrid.rowCnt > 1; // TODO: make grid responsible\r\n\t\tthis.weekNumbersVisible = this.opt('weekNumbers');\r\n\t\tthis.dayGrid.numbersVisible = this.dayNumbersVisible || this.weekNumbersVisible;\r\n\r\n\t\tthis.el.addClass('fc-basic-view').html(this.renderSkeletonHtml());\r\n\t\tthis.renderHead();\r\n\r\n\t\tthis.scrollerEl = this.el.find('.fc-day-grid-container');\r\n\r\n\t\tthis.dayGrid.setElement(this.el.find('.fc-day-grid'));\r\n\t\tthis.dayGrid.renderDates(this.hasRigidRows());\r\n\t},\r\n\r\n\r\n\t// render the day-of-week headers\r\n\trenderHead: function() {\r\n\t\tthis.headContainerEl =\r\n\t\t\tthis.el.find('.fc-head-container')\r\n\t\t\t\t.html(this.dayGrid.renderHeadHtml());\r\n\t\tthis.headRowEl = this.headContainerEl.find('.fc-row');\r\n\t},\r\n\r\n\r\n\t// Unrenders the content of the view. Since we haven't separated skeleton rendering from date rendering,\r\n\t// always completely kill the dayGrid's rendering.\r\n\tunrenderDates: function() {\r\n\t\tthis.dayGrid.unrenderDates();\r\n\t\tthis.dayGrid.removeElement();\r\n\t},\r\n\r\n\r\n\trenderBusinessHours: function() {\r\n\t\tthis.dayGrid.renderBusinessHours();\r\n\t},\r\n\r\n\r\n\t// Builds the HTML skeleton for the view.\r\n\t// The day-grid component will render inside of a container defined by this HTML.\r\n\trenderSkeletonHtml: function() {\r\n\t\treturn '' +\r\n\t\t\t'<table>' +\r\n\t\t\t\t'<thead class=\"fc-head\">' +\r\n\t\t\t\t\t'<tr>' +\r\n\t\t\t\t\t\t'<td class=\"fc-head-container ' + this.widgetHeaderClass + '\"></td>' +\r\n\t\t\t\t\t'</tr>' +\r\n\t\t\t\t'</thead>' +\r\n\t\t\t\t'<tbody class=\"fc-body\">' +\r\n\t\t\t\t\t'<tr>' +\r\n\t\t\t\t\t\t'<td class=\"' + this.widgetContentClass + '\">' +\r\n\t\t\t\t\t\t\t'<div class=\"fc-day-grid-container\">' +\r\n\t\t\t\t\t\t\t\t'<div class=\"fc-day-grid\"/>' +\r\n\t\t\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t\t'</td>' +\r\n\t\t\t\t\t'</tr>' +\r\n\t\t\t\t'</tbody>' +\r\n\t\t\t'</table>';\r\n\t},\r\n\r\n\r\n\t// Generates an HTML attribute string for setting the width of the week number column, if it is known\r\n\tweekNumberStyleAttr: function() {\r\n\t\tif (this.weekNumberWidth !== null) {\r\n\t\t\treturn 'style=\"width:' + this.weekNumberWidth + 'px\"';\r\n\t\t}\r\n\t\treturn '';\r\n\t},\r\n\r\n\r\n\t// Determines whether each row should have a constant height\r\n\thasRigidRows: function() {\r\n\t\tvar eventLimit = this.opt('eventLimit');\r\n\t\treturn eventLimit && typeof eventLimit !== 'number';\r\n\t},\r\n\r\n\r\n\t/* Dimensions\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Refreshes the horizontal dimensions of the view\r\n\tupdateWidth: function() {\r\n\t\tif (this.weekNumbersVisible) {\r\n\t\t\t// Make sure all week number cells running down the side have the same width.\r\n\t\t\t// Record the width for cells created later.\r\n\t\t\tthis.weekNumberWidth = matchCellWidths(\r\n\t\t\t\tthis.el.find('.fc-week-number')\r\n\t\t\t);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Adjusts the vertical dimensions of the view to the specified values\r\n\tsetHeight: function(totalHeight, isAuto) {\r\n\t\tvar eventLimit = this.opt('eventLimit');\r\n\t\tvar scrollerHeight;\r\n\r\n\t\t// reset all heights to be natural\r\n\t\tunsetScroller(this.scrollerEl);\r\n\t\tuncompensateScroll(this.headRowEl);\r\n\r\n\t\tthis.dayGrid.removeSegPopover(); // kill the \"more\" popover if displayed\r\n\r\n\t\t// is the event limit a constant level number?\r\n\t\tif (eventLimit && typeof eventLimit === 'number') {\r\n\t\t\tthis.dayGrid.limitRows(eventLimit); // limit the levels first so the height can redistribute after\r\n\t\t}\r\n\r\n\t\tscrollerHeight = this.computeScrollerHeight(totalHeight);\r\n\t\tthis.setGridHeight(scrollerHeight, isAuto);\r\n\r\n\t\t// is the event limit dynamically calculated?\r\n\t\tif (eventLimit && typeof eventLimit !== 'number') {\r\n\t\t\tthis.dayGrid.limitRows(eventLimit); // limit the levels after the grid's row heights have been set\r\n\t\t}\r\n\r\n\t\tif (!isAuto && setPotentialScroller(this.scrollerEl, scrollerHeight)) { // using scrollbars?\r\n\r\n\t\t\tcompensateScroll(this.headRowEl, getScrollbarWidths(this.scrollerEl));\r\n\r\n\t\t\t// doing the scrollbar compensation might have created text overflow which created more height. redo\r\n\t\t\tscrollerHeight = this.computeScrollerHeight(totalHeight);\r\n\t\t\tthis.scrollerEl.height(scrollerHeight);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Sets the height of just the DayGrid component in this view\r\n\tsetGridHeight: function(height, isAuto) {\r\n\t\tif (isAuto) {\r\n\t\t\tundistributeHeight(this.dayGrid.rowEls); // let the rows be their natural height with no expanding\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdistributeHeight(this.dayGrid.rowEls, height, true); // true = compensate for height-hogging rows\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Hit Areas\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\t// forward all hit-related method calls to dayGrid\r\n\r\n\r\n\tprepareHits: function() {\r\n\t\tthis.dayGrid.prepareHits();\r\n\t},\r\n\r\n\r\n\treleaseHits: function() {\r\n\t\tthis.dayGrid.releaseHits();\r\n\t},\r\n\r\n\r\n\tqueryHit: function(left, top) {\r\n\t\treturn this.dayGrid.queryHit(left, top);\r\n\t},\r\n\r\n\r\n\tgetHitSpan: function(hit) {\r\n\t\treturn this.dayGrid.getHitSpan(hit);\r\n\t},\r\n\r\n\r\n\tgetHitEl: function(hit) {\r\n\t\treturn this.dayGrid.getHitEl(hit);\r\n\t},\r\n\r\n\r\n\t/* Events\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders the given events onto the view and populates the segments array\r\n\trenderEvents: function(events) {\r\n\t\tthis.dayGrid.renderEvents(events);\r\n\r\n\t\tthis.updateHeight(); // must compensate for events that overflow the row\r\n\t},\r\n\r\n\r\n\t// Retrieves all segment objects that are rendered in the view\r\n\tgetEventSegs: function() {\r\n\t\treturn this.dayGrid.getEventSegs();\r\n\t},\r\n\r\n\r\n\t// Unrenders all event elements and clears internal segment data\r\n\tunrenderEvents: function() {\r\n\t\tthis.dayGrid.unrenderEvents();\r\n\r\n\t\t// we DON'T need to call updateHeight() because:\r\n\t\t// A) a renderEvents() call always happens after this, which will eventually call updateHeight()\r\n\t\t// B) in IE8, this causes a flash whenever events are rerendered\r\n\t},\r\n\r\n\r\n\t/* Dragging (for both events and external elements)\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// A returned value of `true` signals that a mock \"helper\" event has been rendered.\r\n\trenderDrag: function(dropLocation, seg) {\r\n\t\treturn this.dayGrid.renderDrag(dropLocation, seg);\r\n\t},\r\n\r\n\r\n\tunrenderDrag: function() {\r\n\t\tthis.dayGrid.unrenderDrag();\r\n\t},\r\n\r\n\r\n\t/* Selection\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of a selection\r\n\trenderSelection: function(span) {\r\n\t\tthis.dayGrid.renderSelection(span);\r\n\t},\r\n\r\n\r\n\t// Unrenders a visual indications of a selection\r\n\tunrenderSelection: function() {\r\n\t\tthis.dayGrid.unrenderSelection();\r\n\t}\r\n\r\n});\r\n\r\n\r\n// Methods that will customize the rendering behavior of the BasicView's dayGrid\r\nvar basicDayGridMethods = {\r\n\r\n\r\n\t// Generates the HTML that will go before the day-of week header cells\r\n\trenderHeadIntroHtml: function() {\r\n\t\tvar view = this.view;\r\n\r\n\t\tif (view.weekNumbersVisible) {\r\n\t\t\treturn '' +\r\n\t\t\t\t'<th class=\"fc-week-number ' + view.widgetHeaderClass + '\" ' + view.weekNumberStyleAttr() + '>' +\r\n\t\t\t\t\t'<span>' + // needed for matchCellWidths\r\n\t\t\t\t\t\thtmlEscape(view.opt('weekNumberTitle')) +\r\n\t\t\t\t\t'</span>' +\r\n\t\t\t\t'</th>';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t},\r\n\r\n\r\n\t// Generates the HTML that will go before content-skeleton cells that display the day/week numbers\r\n\trenderNumberIntroHtml: function(row) {\r\n\t\tvar view = this.view;\r\n\r\n\t\tif (view.weekNumbersVisible) {\r\n\t\t\treturn '' +\r\n\t\t\t\t'<td class=\"fc-week-number\" ' + view.weekNumberStyleAttr() + '>' +\r\n\t\t\t\t\t'<span>' + // needed for matchCellWidths\r\n\t\t\t\t\t\tthis.getCellDate(row, 0).format('w') +\r\n\t\t\t\t\t'</span>' +\r\n\t\t\t\t'</td>';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t},\r\n\r\n\r\n\t// Generates the HTML that goes before the day bg cells for each day-row\r\n\trenderBgIntroHtml: function() {\r\n\t\tvar view = this.view;\r\n\r\n\t\tif (view.weekNumbersVisible) {\r\n\t\t\treturn '<td class=\"fc-week-number ' + view.widgetContentClass + '\" ' +\r\n\t\t\t\tview.weekNumberStyleAttr() + '></td>';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t},\r\n\r\n\r\n\t// Generates the HTML that goes before every other type of row generated by DayGrid.\r\n\t// Affects helper-skeleton and highlight-skeleton rows.\r\n\trenderIntroHtml: function() {\r\n\t\tvar view = this.view;\r\n\r\n\t\tif (view.weekNumbersVisible) {\r\n\t\t\treturn '<td class=\"fc-week-number\" ' + view.weekNumberStyleAttr() + '></td>';\r\n\t\t}\r\n\r\n\t\treturn '';\r\n\t}\r\n\r\n};\r\n\r\n;;\r\n\r\n/* A month view with day cells running in rows (one-per-week) and columns\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n\r\nvar MonthView = FC.MonthView = BasicView.extend({\r\n\r\n\t// Produces information about what range to display\r\n\tcomputeRange: function(date) {\r\n\t\tvar range = BasicView.prototype.computeRange.call(this, date); // get value from super-method\r\n\t\tvar rowCnt;\r\n\r\n\t\t// ensure 6 weeks\r\n\t\tif (this.isFixedWeeks()) {\r\n\t\t\trowCnt = Math.ceil(range.end.diff(range.start, 'weeks', true)); // could be partial weeks due to hiddenDays\r\n\t\t\trange.end.add(6 - rowCnt, 'weeks');\r\n\t\t}\r\n\r\n\t\treturn range;\r\n\t},\r\n\r\n\r\n\t// Overrides the default BasicView behavior to have special multi-week auto-height logic\r\n\tsetGridHeight: function(height, isAuto) {\r\n\r\n\t\tisAuto = isAuto || this.opt('weekMode') === 'variable'; // LEGACY: weekMode is deprecated\r\n\r\n\t\t// if auto, make the height of each row the height that it would be if there were 6 weeks\r\n\t\tif (isAuto) {\r\n\t\t\theight *= this.rowCnt / 6;\r\n\t\t}\r\n\r\n\t\tdistributeHeight(this.dayGrid.rowEls, height, !isAuto); // if auto, don't compensate for height-hogging rows\r\n\t},\r\n\r\n\r\n\tisFixedWeeks: function() {\r\n\t\tvar weekMode = this.opt('weekMode'); // LEGACY: weekMode is deprecated\r\n\t\tif (weekMode) {\r\n\t\t\treturn weekMode === 'fixed'; // if any other type of weekMode, assume NOT fixed\r\n\t\t}\r\n\r\n\t\treturn this.opt('fixedWeekCount');\r\n\t}\r\n\r\n});\r\n\r\n;;\r\n\r\nfcViews.basic = {\r\n\t'class': BasicView\r\n};\r\n\r\nfcViews.basicDay = {\r\n\ttype: 'basic',\r\n\tduration: { days: 1 }\r\n};\r\n\r\nfcViews.basicWeek = {\r\n\ttype: 'basic',\r\n\tduration: { weeks: 1 }\r\n};\r\n\r\nfcViews.month = {\r\n\t'class': MonthView,\r\n\tduration: { months: 1 }, // important for prev/next\r\n\tdefaults: {\r\n\t\tfixedWeekCount: true\r\n\t}\r\n};\r\n;;\r\n\r\n/* An abstract class for all agenda-related views. Displays one more columns with time slots running vertically.\r\n----------------------------------------------------------------------------------------------------------------------*/\r\n// Is a manager for the TimeGrid subcomponent and possibly the DayGrid subcomponent (if allDaySlot is on).\r\n// Responsible for managing width/height.\r\n\r\nvar AgendaView = FC.AgendaView = View.extend({\r\n\r\n\ttimeGridClass: TimeGrid, // class used to instantiate the timeGrid. subclasses can override\r\n\ttimeGrid: null, // the main time-grid subcomponent of this view\r\n\r\n\tdayGridClass: DayGrid, // class used to instantiate the dayGrid. subclasses can override\r\n\tdayGrid: null, // the \"all-day\" subcomponent. if all-day is turned off, this will be null\r\n\r\n\taxisWidth: null, // the width of the time axis running down the side\r\n\r\n\theadContainerEl: null, // div that hold's the timeGrid's rendered date header\r\n\tnoScrollRowEls: null, // set of fake row elements that must compensate when scrollerEl has scrollbars\r\n\r\n\t// when the time-grid isn't tall enough to occupy the given height, we render an <hr> underneath\r\n\tbottomRuleEl: null,\r\n\tbottomRuleHeight: null,\r\n\r\n\r\n\tinitialize: function() {\r\n\t\tthis.timeGrid = this.instantiateTimeGrid();\r\n\r\n\t\tif (this.opt('allDaySlot')) { // should we display the \"all-day\" area?\r\n\t\t\tthis.dayGrid = this.instantiateDayGrid(); // the all-day subcomponent of this view\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Instantiates the TimeGrid object this view needs. Draws from this.timeGridClass\r\n\tinstantiateTimeGrid: function() {\r\n\t\tvar subclass = this.timeGridClass.extend(agendaTimeGridMethods);\r\n\r\n\t\treturn new subclass(this);\r\n\t},\r\n\r\n\r\n\t// Instantiates the DayGrid object this view might need. Draws from this.dayGridClass\r\n\tinstantiateDayGrid: function() {\r\n\t\tvar subclass = this.dayGridClass.extend(agendaDayGridMethods);\r\n\r\n\t\treturn new subclass(this);\r\n\t},\r\n\r\n\r\n\t/* Rendering\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Sets the display range and computes all necessary dates\r\n\tsetRange: function(range) {\r\n\t\tView.prototype.setRange.call(this, range); // call the super-method\r\n\r\n\t\tthis.timeGrid.setRange(range);\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.setRange(range);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Renders the view into `this.el`, which has already been assigned\r\n\trenderDates: function() {\r\n\r\n\t\tthis.el.addClass('fc-agenda-view').html(this.renderSkeletonHtml());\r\n\t\tthis.renderHead();\r\n\r\n\t\t// the element that wraps the time-grid that will probably scroll\r\n\t\tthis.scrollerEl = this.el.find('.fc-time-grid-container');\r\n\r\n\t\tthis.timeGrid.setElement(this.el.find('.fc-time-grid'));\r\n\t\tthis.timeGrid.renderDates();\r\n\r\n\t\t// the <hr> that sometimes displays under the time-grid\r\n\t\tthis.bottomRuleEl = $('<hr class=\"fc-divider ' + this.widgetHeaderClass + '\"/>')\r\n\t\t\t.appendTo(this.timeGrid.el); // inject it into the time-grid\r\n\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.setElement(this.el.find('.fc-day-grid'));\r\n\t\t\tthis.dayGrid.renderDates();\r\n\r\n\t\t\t// have the day-grid extend it's coordinate area over the <hr> dividing the two grids\r\n\t\t\tthis.dayGrid.bottomCoordPadding = this.dayGrid.el.next('hr').outerHeight();\r\n\t\t}\r\n\r\n\t\tthis.noScrollRowEls = this.el.find('.fc-row:not(.fc-scroller *)'); // fake rows not within the scroller\r\n\t},\r\n\r\n\r\n\t// render the day-of-week headers\r\n\trenderHead: function() {\r\n\t\tthis.headContainerEl =\r\n\t\t\tthis.el.find('.fc-head-container')\r\n\t\t\t\t.html(this.timeGrid.renderHeadHtml());\r\n\t},\r\n\r\n\r\n\t// Unrenders the content of the view. Since we haven't separated skeleton rendering from date rendering,\r\n\t// always completely kill each grid's rendering.\r\n\tunrenderDates: function() {\r\n\t\tthis.timeGrid.unrenderDates();\r\n\t\tthis.timeGrid.removeElement();\r\n\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.unrenderDates();\r\n\t\t\tthis.dayGrid.removeElement();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\trenderBusinessHours: function() {\r\n\t\tthis.timeGrid.renderBusinessHours();\r\n\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.renderBusinessHours();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Builds the HTML skeleton for the view.\r\n\t// The day-grid and time-grid components will render inside containers defined by this HTML.\r\n\trenderSkeletonHtml: function() {\r\n\t\treturn '' +\r\n\t\t\t'<table>' +\r\n\t\t\t\t'<thead class=\"fc-head\">' +\r\n\t\t\t\t\t'<tr>' +\r\n\t\t\t\t\t\t'<td class=\"fc-head-container ' + this.widgetHeaderClass + '\"></td>' +\r\n\t\t\t\t\t'</tr>' +\r\n\t\t\t\t'</thead>' +\r\n\t\t\t\t'<tbody class=\"fc-body\">' +\r\n\t\t\t\t\t'<tr>' +\r\n\t\t\t\t\t\t'<td class=\"' + this.widgetContentClass + '\">' +\r\n\t\t\t\t\t\t\t(this.dayGrid ?\r\n\t\t\t\t\t\t\t\t'<div class=\"fc-day-grid\"/>' +\r\n\t\t\t\t\t\t\t\t'<hr class=\"fc-divider ' + this.widgetHeaderClass + '\"/>' :\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t\t'<div class=\"fc-time-grid-container\">' +\r\n\t\t\t\t\t\t\t\t'<div class=\"fc-time-grid\"/>' +\r\n\t\t\t\t\t\t\t'</div>' +\r\n\t\t\t\t\t\t'</td>' +\r\n\t\t\t\t\t'</tr>' +\r\n\t\t\t\t'</tbody>' +\r\n\t\t\t'</table>';\r\n\t},\r\n\r\n\r\n\t// Generates an HTML attribute string for setting the width of the axis, if it is known\r\n\taxisStyleAttr: function() {\r\n\t\tif (this.axisWidth !== null) {\r\n\t\t\t return 'style=\"width:' + this.axisWidth + 'px\"';\r\n\t\t}\r\n\t\treturn '';\r\n\t},\r\n\r\n\r\n\t/* Dimensions\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\tupdateSize: function(isResize) {\r\n\t\tthis.timeGrid.updateSize(isResize);\r\n\r\n\t\tView.prototype.updateSize.call(this, isResize); // call the super-method\r\n\t},\r\n\r\n\r\n\t// Refreshes the horizontal dimensions of the view\r\n\tupdateWidth: function() {\r\n\t\t// make all axis cells line up, and record the width so newly created axis cells will have it\r\n\t\tthis.axisWidth = matchCellWidths(this.el.find('.fc-axis'));\r\n\t},\r\n\r\n\r\n\t// Adjusts the vertical dimensions of the view to the specified values\r\n\tsetHeight: function(totalHeight, isAuto) {\r\n\t\tvar eventLimit;\r\n\t\tvar scrollerHeight;\r\n\r\n\t\tif (this.bottomRuleHeight === null) {\r\n\t\t\t// calculate the height of the rule the very first time\r\n\t\t\tthis.bottomRuleHeight = this.bottomRuleEl.outerHeight();\r\n\t\t}\r\n\t\tthis.bottomRuleEl.hide(); // .show() will be called later if this <hr> is necessary\r\n\r\n\t\t// reset all dimensions back to the original state\r\n\t\tthis.scrollerEl.css('overflow', '');\r\n\t\tunsetScroller(this.scrollerEl);\r\n\t\tuncompensateScroll(this.noScrollRowEls);\r\n\r\n\t\t// limit number of events in the all-day area\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.removeSegPopover(); // kill the \"more\" popover if displayed\r\n\r\n\t\t\teventLimit = this.opt('eventLimit');\r\n\t\t\tif (eventLimit && typeof eventLimit !== 'number') {\r\n\t\t\t\teventLimit = AGENDA_ALL_DAY_EVENT_LIMIT; // make sure \"auto\" goes to a real number\r\n\t\t\t}\r\n\t\t\tif (eventLimit) {\r\n\t\t\t\tthis.dayGrid.limitRows(eventLimit);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!isAuto) { // should we force dimensions of the scroll container, or let the contents be natural height?\r\n\r\n\t\t\tscrollerHeight = this.computeScrollerHeight(totalHeight);\r\n\t\t\tif (setPotentialScroller(this.scrollerEl, scrollerHeight)) { // using scrollbars?\r\n\r\n\t\t\t\t// make the all-day and header rows lines up\r\n\t\t\t\tcompensateScroll(this.noScrollRowEls, getScrollbarWidths(this.scrollerEl));\r\n\r\n\t\t\t\t// the scrollbar compensation might have changed text flow, which might affect height, so recalculate\r\n\t\t\t\t// and reapply the desired height to the scroller.\r\n\t\t\t\tscrollerHeight = this.computeScrollerHeight(totalHeight);\r\n\t\t\t\tthis.scrollerEl.height(scrollerHeight);\r\n\t\t\t}\r\n\t\t\telse { // no scrollbars\r\n\t\t\t\t// still, force a height and display the bottom rule (marks the end of day)\r\n\t\t\t\tthis.scrollerEl.height(scrollerHeight).css('overflow', 'hidden'); // in case <hr> goes outside\r\n\t\t\t\tthis.bottomRuleEl.show();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Computes the initial pre-configured scroll state prior to allowing the user to change it\r\n\tcomputeInitialScroll: function() {\r\n\t\tvar scrollTime = moment.duration(this.opt('scrollTime'));\r\n\t\tvar top = this.timeGrid.computeTimeTop(scrollTime);\r\n\r\n\t\t// zoom can give weird floating-point values. rather scroll a little bit further\r\n\t\ttop = Math.ceil(top);\r\n\r\n\t\tif (top) {\r\n\t\t\ttop++; // to overcome top border that slots beyond the first have. looks better\r\n\t\t}\r\n\r\n\t\treturn top;\r\n\t},\r\n\r\n\r\n\t/* Hit Areas\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\t// forward all hit-related method calls to the grids (dayGrid might not be defined)\r\n\r\n\r\n\tprepareHits: function() {\r\n\t\tthis.timeGrid.prepareHits();\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.prepareHits();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\treleaseHits: function() {\r\n\t\tthis.timeGrid.releaseHits();\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.releaseHits();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tqueryHit: function(left, top) {\r\n\t\tvar hit = this.timeGrid.queryHit(left, top);\r\n\r\n\t\tif (!hit && this.dayGrid) {\r\n\t\t\thit = this.dayGrid.queryHit(left, top);\r\n\t\t}\r\n\r\n\t\treturn hit;\r\n\t},\r\n\r\n\r\n\tgetHitSpan: function(hit) {\r\n\t\t// TODO: hit.component is set as a hack to identify where the hit came from\r\n\t\treturn hit.component.getHitSpan(hit);\r\n\t},\r\n\r\n\r\n\tgetHitEl: function(hit) {\r\n\t\t// TODO: hit.component is set as a hack to identify where the hit came from\r\n\t\treturn hit.component.getHitEl(hit);\r\n\t},\r\n\r\n\r\n\t/* Events\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders events onto the view and populates the View's segment array\r\n\trenderEvents: function(events) {\r\n\t\tvar dayEvents = [];\r\n\t\tvar timedEvents = [];\r\n\t\tvar daySegs = [];\r\n\t\tvar timedSegs;\r\n\t\tvar i;\r\n\r\n\t\t// separate the events into all-day and timed\r\n\t\tfor (i = 0; i < events.length; i++) {\r\n\t\t\tif (events[i].allDay) {\r\n\t\t\t\tdayEvents.push(events[i]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttimedEvents.push(events[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// render the events in the subcomponents\r\n\t\ttimedSegs = this.timeGrid.renderEvents(timedEvents);\r\n\t\tif (this.dayGrid) {\r\n\t\t\tdaySegs = this.dayGrid.renderEvents(dayEvents);\r\n\t\t}\r\n\r\n\t\t// the all-day area is flexible and might have a lot of events, so shift the height\r\n\t\tthis.updateHeight();\r\n\t},\r\n\r\n\r\n\t// Retrieves all segment objects that are rendered in the view\r\n\tgetEventSegs: function() {\r\n\t\treturn this.timeGrid.getEventSegs().concat(\r\n\t\t\tthis.dayGrid ? this.dayGrid.getEventSegs() : []\r\n\t\t);\r\n\t},\r\n\r\n\r\n\t// Unrenders all event elements and clears internal segment data\r\n\tunrenderEvents: function() {\r\n\r\n\t\t// unrender the events in the subcomponents\r\n\t\tthis.timeGrid.unrenderEvents();\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.unrenderEvents();\r\n\t\t}\r\n\r\n\t\t// we DON'T need to call updateHeight() because:\r\n\t\t// A) a renderEvents() call always happens after this, which will eventually call updateHeight()\r\n\t\t// B) in IE8, this causes a flash whenever events are rerendered\r\n\t},\r\n\r\n\r\n\t/* Dragging (for events and external elements)\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// A returned value of `true` signals that a mock \"helper\" event has been rendered.\r\n\trenderDrag: function(dropLocation, seg) {\r\n\t\tif (dropLocation.start.hasTime()) {\r\n\t\t\treturn this.timeGrid.renderDrag(dropLocation, seg);\r\n\t\t}\r\n\t\telse if (this.dayGrid) {\r\n\t\t\treturn this.dayGrid.renderDrag(dropLocation, seg);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tunrenderDrag: function() {\r\n\t\tthis.timeGrid.unrenderDrag();\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.unrenderDrag();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t/* Selection\r\n\t------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\n\t// Renders a visual indication of a selection\r\n\trenderSelection: function(span) {\r\n\t\tif (span.start.hasTime() || span.end.hasTime()) {\r\n\t\t\tthis.timeGrid.renderSelection(span);\r\n\t\t}\r\n\t\telse if (this.dayGrid) {\r\n\t\t\tthis.dayGrid.renderSelection(span);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Unrenders a visual indications of a selection\r\n\tunrenderSelection: function() {\r\n\t\tthis.timeGrid.unrenderSelection();\r\n\t\tif (this.dayGrid) {\r\n\t\t\tthis.dayGrid.unrenderSelection();\r\n\t\t}\r\n\t}\r\n\r\n});\r\n\r\n\r\n// Methods that will customize the rendering behavior of the AgendaView's timeGrid\r\nvar agendaTimeGridMethods = {\r\n\r\n\r\n\t// Generates the HTML that will go before the day-of week header cells\r\n\trenderHeadIntroHtml: function() {\r\n\t\tvar view = this.view;\r\n\t\tvar weekText;\r\n\r\n\t\tif (view.opt('weekNumbers')) {\r\n\t\t\tweekText = this.start.format(view.opt('smallWeekFormat'));\r\n\r\n\t\t\treturn '' +\r\n\t\t\t\t'<th class=\"fc-axis fc-week-number ' + view.widgetHeaderClass + '\" ' + view.axisStyleAttr() + '>' +\r\n\t\t\t\t\t'<span>' + // needed for matchCellWidths\r\n\t\t\t\t\t\thtmlEscape(weekText) +\r\n\t\t\t\t\t'</span>' +\r\n\t\t\t\t'</th>';\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn '<th class=\"fc-axis ' + view.widgetHeaderClass + '\" ' + view.axisStyleAttr() + '></th>';\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Generates the HTML that goes before the bg of the TimeGrid slot area. Long vertical column.\r\n\trenderBgIntroHtml: function() {\r\n\t\tvar view = this.view;\r\n\r\n\t\treturn '<td class=\"fc-axis ' + view.widgetContentClass + '\" ' + view.axisStyleAttr() + '></td>';\r\n\t},\r\n\r\n\r\n\t// Generates the HTML that goes before all other types of cells.\r\n\t// Affects content-skeleton, helper-skeleton, highlight-skeleton for both the time-grid and day-grid.\r\n\trenderIntroHtml: function() {\r\n\t\tvar view = this.view;\r\n\r\n\t\treturn '<td class=\"fc-axis\" ' + view.axisStyleAttr() + '></td>';\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Methods that will customize the rendering behavior of the AgendaView's dayGrid\r\nvar agendaDayGridMethods = {\r\n\r\n\r\n\t// Generates the HTML that goes before the all-day cells\r\n\trenderBgIntroHtml: function() {\r\n\t\tvar view = this.view;\r\n\r\n\t\treturn '' +\r\n\t\t\t'<td class=\"fc-axis ' + view.widgetContentClass + '\" ' + view.axisStyleAttr() + '>' +\r\n\t\t\t\t'<span>' + // needed for matchCellWidths\r\n\t\t\t\t\t(view.opt('allDayHtml') || htmlEscape(view.opt('allDayText'))) +\r\n\t\t\t\t'</span>' +\r\n\t\t\t'</td>';\r\n\t},\r\n\r\n\r\n\t// Generates the HTML that goes before all other types of cells.\r\n\t// Affects content-skeleton, helper-skeleton, highlight-skeleton for both the time-grid and day-grid.\r\n\trenderIntroHtml: function() {\r\n\t\tvar view = this.view;\r\n\r\n\t\treturn '<td class=\"fc-axis\" ' + view.axisStyleAttr() + '></td>';\r\n\t}\r\n\r\n};\r\n\r\n;;\r\n\r\nvar AGENDA_ALL_DAY_EVENT_LIMIT = 5;\r\n\r\n// potential nice values for the slot-duration and interval-duration\r\n// from largest to smallest\r\nvar AGENDA_STOCK_SUB_DURATIONS = [\r\n\t{ hours: 1 },\r\n\t{ minutes: 30 },\r\n\t{ minutes: 15 },\r\n\t{ seconds: 30 },\r\n\t{ seconds: 15 }\r\n];\r\n\r\nfcViews.agenda = {\r\n\t'class': AgendaView,\r\n\tdefaults: {\r\n\t\tallDaySlot: true,\r\n\t\tallDayText: 'all-day',\r\n\t\tslotDuration: '00:30:00',\r\n\t\tminTime: '00:00:00',\r\n\t\tmaxTime: '24:00:00',\r\n\t\tslotEventOverlap: true // a bad name. confused with overlap/constraint system\r\n\t}\r\n};\r\n\r\nfcViews.agendaDay = {\r\n\ttype: 'agenda',\r\n\tduration: { days: 1 }\r\n};\r\n\r\nfcViews.agendaWeek = {\r\n\ttype: 'agenda',\r\n\tduration: { weeks: 1 }\r\n};\r\n;;\r\n\r\nreturn FC; // export for Node/CommonJS\r\n});","//admin.js\r\n\r\n$(document).ready(function() {\r\n\r\n    var date = new Date();\r\n    var d = date.getDate(),\r\n        m = date.getMonth(),\r\n        y = date.getFullYear();\r\n\r\n    $('#calendar').fullCalendar({\r\n        header: {\r\n            left: 'prev,next today',\r\n            center: 'title',\r\n            right: 'month,agendaWeek,agendaDay'\r\n        },\r\n\r\n        events: [\r\n\t\t\t{\r\n\t\t\t\ttitle: 'All Day Event',\r\n\t\t\t\tstart: '2015-12-01'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: 'Long Event',\r\n\t\t\t\tstart: '2015-12-07'\r\n\t\t\t}\r\n        ]\r\n    });\r\n});"],"sourceRoot":"/source/"}